{"ast":null,"code":"var _jsxFileName = \"/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/black-scholes/BlackScholesCalculator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport HeatmapDisplay from './HeatmapDisplay';\nimport styled from 'styled-components';\nimport { blackScholesApi } from '../../services/api';\nimport InputForm from './InputForm';\nimport ResultsDisplay from './ResultsDisplay';\nimport SensitivityChart from './SensitivityChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  min-height: calc(100vh - 60px);\n`;\n_c = Container;\nconst Sidebar = styled.div`\n  width: 300px;\n  background-color: #f8f9fa;\n  padding: 1.5rem;\n  border-right: 1px solid #e9ecef;\n  height: 100%;\n  overflow-y: auto;\n`;\n_c2 = Sidebar;\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 1.5rem;\n  overflow-y: auto;\n`;\n_c3 = MainContent;\nconst Title = styled.h1`\n  margin-bottom: 1.5rem;\n  color: #333;\n  font-size: 1.5rem;\n`;\n_c4 = Title;\nconst ResultsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1rem;\n`;\n_c5 = ResultsGrid;\nconst BlackScholesCalculator = () => {\n  _s();\n  // Default input values\n  const defaultInputs = {\n    stock_price: 100,\n    strike_price: 100,\n    time_to_expiry: 30,\n    risk_free_rate: 0.05,\n    volatility: 0.2,\n    option_type: 'call',\n    time_in_days: true\n  };\n\n  // State management\n  const [inputs, setInputs] = useState(defaultInputs);\n  const [results, setResults] = useState(null);\n  const [greeks, setGreeks] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedSensitivity, setSelectedSensitivity] = useState('stock_price');\n  const [sensitivityData, setSensitivityData] = useState(null);\n  const [heatmapData, setHeatmapData] = useState(null);\n\n  // Calculate option price when inputs change\n  useEffect(() => {\n    calculateOptionPrice();\n  }, [inputs]);\n\n  // Calculate option price\n  const calculateOptionPrice = async () => {\n    try {\n      setIsLoading(true);\n\n      // Get option price\n      const priceResponse = await blackScholesApi.calculateOptionPrice(inputs);\n      setResults(priceResponse);\n\n      // Get Greeks\n      const greeksResponse = await blackScholesApi.calculateGreeks(inputs);\n      setGreeks(greeksResponse);\n\n      // Generate sensitivity data for the currently selected variable\n      generateSensitivityData();\n    } catch (error) {\n      console.error('Error in Black-Scholes calculation:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (name, value) => {\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n\n  // Generate sensitivity analysis data\n  const generateSensitivityData = async () => {\n    try {\n      let rangeMin, rangeMax;\n\n      // Set appropriate ranges based on the selected sensitivity variable\n      switch (selectedSensitivity) {\n        case 'stock_price':\n          rangeMin = inputs.stock_price * 0.7;\n          rangeMax = inputs.stock_price * 1.3;\n          break;\n        case 'strike_price':\n          rangeMin = inputs.strike_price * 0.7;\n          rangeMax = inputs.strike_price * 1.3;\n          break;\n        case 'time_to_expiry':\n          rangeMin = 1;\n          rangeMax = inputs.time_in_days ? 365 : 1;\n          break;\n        case 'risk_free_rate':\n          rangeMin = 0.01;\n          rangeMax = 0.1;\n          break;\n        case 'volatility':\n          rangeMin = 0.05;\n          rangeMax = 0.5;\n          break;\n        default:\n          rangeMin = inputs.stock_price * 0.7;\n          rangeMax = inputs.stock_price * 1.3;\n      }\n      const data = await blackScholesApi.generateSensitivityData(inputs, selectedSensitivity, rangeMin, rangeMax, 20);\n      setSensitivityData(data);\n    } catch (error) {\n      console.error('Error generating sensitivity data:', error);\n    }\n  };\n\n  // Handle sensitivity variable change\n  const handleSensitivityChange = variable => {\n    setSelectedSensitivity(variable);\n    // Recalculate sensitivity data when the variable changes\n    setTimeout(generateSensitivityData, 0);\n  };\n\n  // Reset inputs to defaults\n  const handleReset = () => {\n    setInputs(defaultInputs);\n  };\n\n  // Get heatmap data when inputs change\n  useEffect(() => {\n    generateHeatmapData();\n  }, [inputs]);\n\n  // Generate heatmap data\n  const generateHeatmapData = async () => {\n    try {\n      const data = await blackScholesApi.generateHeatmap(inputs);\n      setHeatmapData(data);\n    } catch (error) {\n      console.error('Error generating heatmap data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Input Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        inputs: inputs,\n        onInputChange: handleInputChange,\n        onReset: handleReset,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(ResultsGrid, {\n        children: [/*#__PURE__*/_jsxDEV(ResultsDisplay, {\n          results: results,\n          greeks: greeks,\n          optionType: inputs.option_type,\n          isLoading: isLoading,\n          onSensitivityChange: handleSensitivityChange,\n          selectedSensitivity: selectedSensitivity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SensitivityChart, {\n          data: sensitivityData,\n          variable: selectedSensitivity,\n          optionType: inputs.option_type,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeatmapDisplay, {\n        heatmapData: heatmapData,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(BlackScholesCalculator, \"kh17g0PIMhRqW+8zdi1tV6SxJ2w=\");\n_c6 = BlackScholesCalculator;\nexport default BlackScholesCalculator;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"ResultsGrid\");\n$RefreshReg$(_c6, \"BlackScholesCalculator\");","map":{"version":3,"names":["React","useState","useEffect","HeatmapDisplay","styled","blackScholesApi","InputForm","ResultsDisplay","SensitivityChart","jsxDEV","_jsxDEV","Container","div","_c","Sidebar","_c2","MainContent","_c3","Title","h1","_c4","ResultsGrid","_c5","BlackScholesCalculator","_s","defaultInputs","stock_price","strike_price","time_to_expiry","risk_free_rate","volatility","option_type","time_in_days","inputs","setInputs","results","setResults","greeks","setGreeks","isLoading","setIsLoading","selectedSensitivity","setSelectedSensitivity","sensitivityData","setSensitivityData","heatmapData","setHeatmapData","calculateOptionPrice","priceResponse","greeksResponse","calculateGreeks","generateSensitivityData","error","console","handleInputChange","name","value","rangeMin","rangeMax","data","handleSensitivityChange","variable","setTimeout","handleReset","generateHeatmapData","generateHeatmap","children","fileName","_jsxFileName","lineNumber","columnNumber","onInputChange","onReset","optionType","onSensitivityChange","_c6","$RefreshReg$"],"sources":["/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/black-scholes/BlackScholesCalculator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HeatmapDisplay from './HeatmapDisplay';\nimport styled from 'styled-components';\nimport { blackScholesApi } from '../../services/api';\nimport InputForm from './InputForm';\nimport ResultsDisplay from './ResultsDisplay';\nimport SensitivityChart from './SensitivityChart';\n\nconst Container = styled.div`\n  display: flex;\n  min-height: calc(100vh - 60px);\n`;\n\nconst Sidebar = styled.div`\n  width: 300px;\n  background-color: #f8f9fa;\n  padding: 1.5rem;\n  border-right: 1px solid #e9ecef;\n  height: 100%;\n  overflow-y: auto;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 1.5rem;\n  overflow-y: auto;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1.5rem;\n  color: #333;\n  font-size: 1.5rem;\n`;\n\nconst ResultsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1rem;\n`;\n\nconst BlackScholesCalculator = () => {\n  // Default input values\n  const defaultInputs = {\n    stock_price: 100,\n    strike_price: 100,\n    time_to_expiry: 30,\n    risk_free_rate: 0.05,\n    volatility: 0.2,\n    option_type: 'call',\n    time_in_days: true\n  };\n  \n  // State management\n  const [inputs, setInputs] = useState(defaultInputs);\n  const [results, setResults] = useState(null);\n  const [greeks, setGreeks] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedSensitivity, setSelectedSensitivity] = useState('stock_price');\n  const [sensitivityData, setSensitivityData] = useState(null);\n  const [heatmapData, setHeatmapData] = useState(null);\n  \n  // Calculate option price when inputs change\n  useEffect(() => {\n    calculateOptionPrice();\n  }, [inputs]);\n  \n  // Calculate option price\n  const calculateOptionPrice = async () => {\n    try {\n      setIsLoading(true);\n      \n      // Get option price\n      const priceResponse = await blackScholesApi.calculateOptionPrice(inputs);\n      setResults(priceResponse);\n      \n      // Get Greeks\n      const greeksResponse = await blackScholesApi.calculateGreeks(inputs);\n      setGreeks(greeksResponse);\n      \n      // Generate sensitivity data for the currently selected variable\n      generateSensitivityData();\n    } catch (error) {\n      console.error('Error in Black-Scholes calculation:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Handle input changes\n  const handleInputChange = (name, value) => {\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n  \n  // Generate sensitivity analysis data\n  const generateSensitivityData = async () => {\n    try {\n      let rangeMin, rangeMax;\n      \n      // Set appropriate ranges based on the selected sensitivity variable\n      switch (selectedSensitivity) {\n        case 'stock_price':\n          rangeMin = inputs.stock_price * 0.7;\n          rangeMax = inputs.stock_price * 1.3;\n          break;\n        case 'strike_price':\n          rangeMin = inputs.strike_price * 0.7;\n          rangeMax = inputs.strike_price * 1.3;\n          break;\n        case 'time_to_expiry':\n          rangeMin = 1;\n          rangeMax = inputs.time_in_days ? 365 : 1;\n          break;\n        case 'risk_free_rate':\n          rangeMin = 0.01;\n          rangeMax = 0.1;\n          break;\n        case 'volatility':\n          rangeMin = 0.05;\n          rangeMax = 0.5;\n          break;\n        default:\n          rangeMin = inputs.stock_price * 0.7;\n          rangeMax = inputs.stock_price * 1.3;\n      }\n      \n      const data = await blackScholesApi.generateSensitivityData(\n        inputs,\n        selectedSensitivity,\n        rangeMin,\n        rangeMax,\n        20\n      );\n      \n      setSensitivityData(data);\n    } catch (error) {\n      console.error('Error generating sensitivity data:', error);\n    }\n  };\n  \n  // Handle sensitivity variable change\n  const handleSensitivityChange = (variable) => {\n    setSelectedSensitivity(variable);\n    // Recalculate sensitivity data when the variable changes\n    setTimeout(generateSensitivityData, 0);\n  };\n  \n  // Reset inputs to defaults\n  const handleReset = () => {\n    setInputs(defaultInputs);\n  };\n  \n  // Get heatmap data when inputs change\n  useEffect(() => {\n    generateHeatmapData();\n  }, [inputs]);\n\n  // Generate heatmap data\n  const generateHeatmapData = async () => {\n    try {\n      const data = await blackScholesApi.generateHeatmap(inputs);\n      setHeatmapData(data);\n    } catch (error) {\n      console.error('Error generating heatmap data:', error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar>\n        <Title>Input Parameters</Title>\n        <InputForm\n          inputs={inputs}\n          onInputChange={handleInputChange}\n          onReset={handleReset}\n          isLoading={isLoading}\n        />\n      </Sidebar>\n      \n      <MainContent>\n        <ResultsGrid>\n          <ResultsDisplay\n            results={results}\n            greeks={greeks}\n            optionType={inputs.option_type}\n            isLoading={isLoading}\n            onSensitivityChange={handleSensitivityChange}\n            selectedSensitivity={selectedSensitivity}\n          />\n          \n          <SensitivityChart\n            data={sensitivityData}\n            variable={selectedSensitivity}\n            optionType={inputs.option_type}\n            isLoading={isLoading}\n          />\n        </ResultsGrid>\n        \n        <HeatmapDisplay\n          heatmapData={heatmapData}\n          isLoading={isLoading}\n        />\n      </MainContent>\n    </Container>\n  );\n};\n\nexport default BlackScholesCalculator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,eAAe,QAAQ,oBAAoB;AACpD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAG;AAC5B;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,SAAS;AAKf,MAAMG,OAAO,GAAGV,MAAM,CAACQ,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAPID,OAAO;AASb,MAAME,WAAW,GAAGZ,MAAM,CAACQ,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAJID,WAAW;AAMjB,MAAME,KAAK,GAAGd,MAAM,CAACe,EAAE;AACvB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,KAAK;AAMX,MAAMG,WAAW,GAAGjB,MAAM,CAACQ,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAJID,WAAW;AAMjB,MAAME,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC;EACA,MAAMC,aAAa,GAAG;IACpBC,WAAW,EAAE,GAAG;IAChBC,YAAY,EAAE,GAAG;IACjBC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE,IAAI;IACpBC,UAAU,EAAE,GAAG;IACfC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;EAChB,CAAC;;EAED;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAACwB,aAAa,CAAC;EACnD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoC,MAAM,EAAEC,SAAS,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACsC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzC,QAAQ,CAAC,aAAa,CAAC;EAC7E,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd6C,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMc,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACFP,YAAY,CAAC,IAAI,CAAC;;MAElB;MACA,MAAMQ,aAAa,GAAG,MAAM3C,eAAe,CAAC0C,oBAAoB,CAACd,MAAM,CAAC;MACxEG,UAAU,CAACY,aAAa,CAAC;;MAEzB;MACA,MAAMC,cAAc,GAAG,MAAM5C,eAAe,CAAC6C,eAAe,CAACjB,MAAM,CAAC;MACpEK,SAAS,CAACW,cAAc,CAAC;;MAEzB;MACAE,uBAAuB,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,SAAS;MACRZ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMc,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IACzCtB,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACsB,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAML,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI;MACF,IAAIM,QAAQ,EAAEC,QAAQ;;MAEtB;MACA,QAAQjB,mBAAmB;QACzB,KAAK,aAAa;UAChBgB,QAAQ,GAAGxB,MAAM,CAACP,WAAW,GAAG,GAAG;UACnCgC,QAAQ,GAAGzB,MAAM,CAACP,WAAW,GAAG,GAAG;UACnC;QACF,KAAK,cAAc;UACjB+B,QAAQ,GAAGxB,MAAM,CAACN,YAAY,GAAG,GAAG;UACpC+B,QAAQ,GAAGzB,MAAM,CAACN,YAAY,GAAG,GAAG;UACpC;QACF,KAAK,gBAAgB;UACnB8B,QAAQ,GAAG,CAAC;UACZC,QAAQ,GAAGzB,MAAM,CAACD,YAAY,GAAG,GAAG,GAAG,CAAC;UACxC;QACF,KAAK,gBAAgB;UACnByB,QAAQ,GAAG,IAAI;UACfC,QAAQ,GAAG,GAAG;UACd;QACF,KAAK,YAAY;UACfD,QAAQ,GAAG,IAAI;UACfC,QAAQ,GAAG,GAAG;UACd;QACF;UACED,QAAQ,GAAGxB,MAAM,CAACP,WAAW,GAAG,GAAG;UACnCgC,QAAQ,GAAGzB,MAAM,CAACP,WAAW,GAAG,GAAG;MACvC;MAEA,MAAMiC,IAAI,GAAG,MAAMtD,eAAe,CAAC8C,uBAAuB,CACxDlB,MAAM,EACNQ,mBAAmB,EACnBgB,QAAQ,EACRC,QAAQ,EACR,EACF,CAAC;MAEDd,kBAAkB,CAACe,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;;EAED;EACA,MAAMQ,uBAAuB,GAAIC,QAAQ,IAAK;IAC5CnB,sBAAsB,CAACmB,QAAQ,CAAC;IAChC;IACAC,UAAU,CAACX,uBAAuB,EAAE,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB7B,SAAS,CAACT,aAAa,CAAC;EAC1B,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACd8D,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAAC/B,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM+B,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAML,IAAI,GAAG,MAAMtD,eAAe,CAAC4D,eAAe,CAAChC,MAAM,CAAC;MAC1Da,cAAc,CAACa,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACE1C,OAAA,CAACC,SAAS;IAAAuD,QAAA,gBACRxD,OAAA,CAACI,OAAO;MAAAoD,QAAA,gBACNxD,OAAA,CAACQ,KAAK;QAAAgD,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/B5D,OAAA,CAACJ,SAAS;QACR2B,MAAM,EAAEA,MAAO;QACfsC,aAAa,EAAEjB,iBAAkB;QACjCkB,OAAO,EAAET,WAAY;QACrBxB,SAAS,EAAEA;MAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAEV5D,OAAA,CAACM,WAAW;MAAAkD,QAAA,gBACVxD,OAAA,CAACW,WAAW;QAAA6C,QAAA,gBACVxD,OAAA,CAACH,cAAc;UACb4B,OAAO,EAAEA,OAAQ;UACjBE,MAAM,EAAEA,MAAO;UACfoC,UAAU,EAAExC,MAAM,CAACF,WAAY;UAC/BQ,SAAS,EAAEA,SAAU;UACrBmC,mBAAmB,EAAEd,uBAAwB;UAC7CnB,mBAAmB,EAAEA;QAAoB;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eAEF5D,OAAA,CAACF,gBAAgB;UACfmD,IAAI,EAAEhB,eAAgB;UACtBkB,QAAQ,EAAEpB,mBAAoB;UAC9BgC,UAAU,EAAExC,MAAM,CAACF,WAAY;UAC/BQ,SAAS,EAAEA;QAAU;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eAEd5D,OAAA,CAACP,cAAc;QACb0C,WAAW,EAAEA,WAAY;QACzBN,SAAS,EAAEA;MAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAAC9C,EAAA,CAvKID,sBAAsB;AAAAoD,GAAA,GAAtBpD,sBAAsB;AAyK5B,eAAeA,sBAAsB;AAAC,IAAAV,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAqD,GAAA;AAAAC,YAAA,CAAA/D,EAAA;AAAA+D,YAAA,CAAA7D,GAAA;AAAA6D,YAAA,CAAA3D,GAAA;AAAA2D,YAAA,CAAAxD,GAAA;AAAAwD,YAAA,CAAAtD,GAAA;AAAAsD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}