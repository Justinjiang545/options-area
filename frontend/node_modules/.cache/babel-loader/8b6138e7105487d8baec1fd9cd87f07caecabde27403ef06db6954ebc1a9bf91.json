{"ast":null,"code":"var _jsxFileName = \"/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/options-watchlist/OptionsWatchlist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { optionsApi } from '../../services/api';\nimport TickerSearch from './TickerSearch';\nimport OptionsParameters from './OptionsParameters';\nimport OptionsChain from './OptionsChain';\nimport Watchlist from './Watchlist';\nimport { toast } from 'react-toastify';\nimport { FaTimes } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Title = styled.h1`\n  margin-bottom: 1.5rem;\n  color: #333;\n`;\n_c2 = Title;\nconst DialogOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n_c3 = DialogOverlay;\nconst DialogContent = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  padding: 1.5rem;\n  width: 400px;\n  max-width: 90%;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n`;\n_c4 = DialogContent;\nconst DialogHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n_c5 = DialogHeader;\nconst DialogTitle = styled.h3`\n  margin: 0;\n  color: #333;\n`;\n_c6 = DialogTitle;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  color: #666;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    color: #333;\n  }\n`;\n_c7 = CloseButton;\nconst DialogActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n  margin-top: 1.5rem;\n`;\n_c8 = DialogActions;\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 1rem;\n  cursor: pointer;\n`;\n_c9 = CheckboxContainer;\nconst CheckboxInput = styled.input`\n  margin-right: 0.5rem;\n`;\n_c10 = CheckboxInput;\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s;\n`;\nconst CancelButton = styled(Button)`\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  color: #333;\n  \n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n_c11 = CancelButton;\nconst ConfirmButton = styled(Button)`\n  background-color: #4a90e2;\n  border: 1px solid #3a80d2;\n  color: white;\n  \n  &:hover {\n    background-color: #3a80d2;\n  }\n`;\n_c12 = ConfirmButton;\nconst OptionsWatchlist = () => {\n  _s();\n  const [ticker, setTicker] = useState('');\n  const [expirations, setExpirations] = useState([]);\n  const [selectedExpiration, setSelectedExpiration] = useState('');\n  const [optionType, setOptionType] = useState('Call');\n  const [strikePrice, setStrikePrice] = useState(0);\n  const [numStrikesRange, setNumStrikesRange] = useState(3);\n  const [optionsChain, setOptionsChain] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [watchlist, setWatchlist] = useState([]);\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\n  const [showDuplicateWarning, setShowDuplicateWarning] = useState(false);\n  const [disableDuplicateWarning, setDisableDuplicateWarning] = useState(false);\n  const [pendingContract, setPendingContract] = useState(null);\n  const [dontShowAgain, setDontShowAgain] = useState(false);\n  const [showStrikeFilter, setShowStrikeFilter] = useState(false);\n  const [isUpdatingWatchlist, setIsUpdatingWatchlist] = useState(false);\n  useEffect(() => {\n    const storedWatchlist = localStorage.getItem('optionsWatchlist');\n    if (storedWatchlist) {\n      try {\n        const parsedData = JSON.parse(storedWatchlist);\n        // Handle both new format (with metadata) and old format (just array)\n        const itemsData = Array.isArray(parsedData) ? parsedData : parsedData.items || [];\n\n        // Set the complete watchlist with all price and P&L data from localStorage\n        setWatchlist(itemsData);\n\n        // If data exists but is old (over 12 hours), show a notification to update\n        if (parsedData.lastUpdated) {\n          const lastUpdateTime = new Date(parsedData.lastUpdated);\n          const currentTime = new Date();\n          const hoursSinceUpdate = (currentTime - lastUpdateTime) / (1000 * 60 * 60);\n          if (hoursSinceUpdate > 12 && itemsData.length > 0) {\n            toast.info('Your watchlist data is over 12 hours old. Consider updating prices.');\n          }\n        }\n      } catch (error) {\n        console.error('Error parsing watchlist:', error);\n        localStorage.setItem('optionsWatchlist', JSON.stringify({\n          items: [],\n          totalPnL: 0,\n          lastUpdated: new Date().toISOString()\n        }));\n      }\n    }\n    const disableWarning = localStorage.getItem('disableDuplicateWarning');\n    if (disableWarning === 'true') {\n      setDisableDuplicateWarning(true);\n    }\n  }, []);\n  useEffect(() => {\n    // Load initial price data for watchlist items only when first loaded\n    // No longer automatically updating prices periodically\n    if (watchlist.length > 0) {\n      // Keep the initial price data but don't continuously fetch updates\n      // updateWatchlistPrices();\n    }\n  }, [watchlist.length]);\n  useEffect(() => {\n    if (ticker) {\n      fetchExpirations();\n    } else {\n      setOptionsChain([]);\n    }\n  }, [ticker]);\n  useEffect(() => {\n    if (ticker && selectedExpiration && optionType) {\n      fetchOptionsChain();\n    }\n  }, [ticker, selectedExpiration, optionType, strikePrice, numStrikesRange]);\n  const fetchExpirations = async () => {\n    if (!ticker) return;\n    try {\n      setIsLoading(true);\n      setOptionsChain([]); // Clear options chain while loading new data\n      const data = await optionsApi.getExpirations(ticker);\n      if (data && data.length > 0) {\n        setExpirations(data);\n        const currentExpirationIsValid = selectedExpiration && data.some(exp => exp.value === selectedExpiration);\n        if (!selectedExpiration || !currentExpirationIsValid) {\n          setSelectedExpiration(data[0].value);\n          return data[0].value; // Return the newly selected expiration\n        }\n      } else {\n        setExpirations([]);\n        setSelectedExpiration('');\n        setOptionsChain([]);\n      }\n    } catch (error) {\n      console.error('Error fetching expirations:', error);\n      setExpirations([]);\n      setSelectedExpiration('');\n      setOptionsChain([]);\n    } finally {\n      if (!selectedExpiration) {\n        // Only clear loading if we're not proceeding to fetchOptionsChain\n        setIsLoading(false);\n      }\n    }\n    return null;\n  };\n  const fetchOptionsChain = async (expiration = selectedExpiration) => {\n    if (!ticker || !expiration || !optionType) return;\n    try {\n      setIsLoading(true);\n      const data = await optionsApi.getOptionsChain(ticker, expiration, optionType, strikePrice, numStrikesRange);\n      setOptionsChain(data);\n    } catch (error) {\n      console.error('Error fetching options chain:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleTickerChange = newTicker => {\n    if (newTicker === ticker) {\n      return;\n    }\n    setTicker(newTicker);\n    setOptionsChain([]);\n    setExpirations([]);\n    setSelectedExpiration('');\n  };\n  const handleExpirationChange = expiration => {\n    if (expiration !== selectedExpiration) {\n      setSelectedExpiration(expiration);\n    }\n  };\n  const handleOptionTypeChange = type => {\n    setOptionType(type);\n  };\n  const handleStrikeFilterChange = (strike, range) => {\n    setStrikePrice(strike);\n    setNumStrikesRange(range);\n  };\n  const isDuplicateContract = contract => {\n    return watchlist.some(item => item.contractSymbol === contract.contractSymbol);\n  };\n  const handleDuplicateWarningResponse = shouldAdd => {\n    if (shouldAdd && pendingContract) {\n      addContractToWatchlist(pendingContract);\n      toast.success('Contract added to watchlist');\n    }\n    if (dontShowAgain) {\n      setDisableDuplicateWarning(true);\n      localStorage.setItem('disableDuplicateWarning', 'true');\n    }\n    setShowDuplicateWarning(false);\n    setPendingContract(null);\n    setDontShowAgain(false);\n  };\n  const addToWatchlist = contract => {\n    if (isDuplicateContract(contract) && !disableDuplicateWarning) {\n      setPendingContract(contract);\n      setShowDuplicateWarning(true);\n      return;\n    }\n    addContractToWatchlist(contract);\n  };\n  const addContractToWatchlist = contract => {\n    // Calculate midpoint price if bid and ask are available (rounded down to 2 decimal places)\n    const midpointPrice = contract.bid > 0 && contract.ask > 0 ? Math.floor((contract.bid + contract.ask) * 100 / 2) / 100 : contract.lastPrice || 0;\n    const newItem = {\n      ...contract,\n      selectedPrice: midpointPrice,\n      // Use midpoint as entry price\n      currentPrice: midpointPrice,\n      // Start with midpoint as current price\n      lastPrice: contract.lastPrice || 0,\n      bid: contract.bid || 0,\n      ask: contract.ask || 0,\n      addedAt: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n\n    // Calculate initial P&L\n    if (newItem.currentPrice && newItem.selectedPrice > 0) {\n      const pnlUsd = (newItem.currentPrice - newItem.selectedPrice) * 100;\n      const pnlPct = (newItem.currentPrice - newItem.selectedPrice) / newItem.selectedPrice * 100;\n      newItem.PNL_USD = pnlUsd;\n      newItem.PNL_PCT = pnlPct;\n    } else {\n      newItem.PNL_USD = 0;\n      newItem.PNL_PCT = 0;\n    }\n    const newWatchlist = [...watchlist, newItem];\n\n    // Calculate total P&L\n    const totalPnL = newWatchlist.reduce((total, item) => total + (item.PNL_USD || 0), 0);\n\n    // Update state and localStorage\n    setWatchlist(newWatchlist);\n    localStorage.setItem('optionsWatchlist', JSON.stringify({\n      items: newWatchlist,\n      totalPnL: totalPnL,\n      lastUpdated: new Date().toISOString()\n    }));\n  };\n  const removeFromWatchlist = index => {\n    const updatedWatchlist = [...watchlist];\n    updatedWatchlist.splice(index, 1);\n\n    // Calculate total P&L\n    const totalPnL = updatedWatchlist.reduce((total, item) => total + (item.PNL_USD || 0), 0);\n\n    // Update state and localStorage with complete pricing data\n    setWatchlist(updatedWatchlist);\n    localStorage.setItem('optionsWatchlist', JSON.stringify({\n      items: updatedWatchlist,\n      totalPnL: totalPnL,\n      lastUpdated: new Date().toISOString()\n    }));\n  };\n  const clearWatchlist = () => {\n    setWatchlist([]);\n    localStorage.setItem('optionsWatchlist', JSON.stringify({\n      items: [],\n      totalPnL: 0,\n      lastUpdated: new Date().toISOString()\n    }));\n    toast.success('Watchlist cleared successfully');\n    setShowClearConfirmation(false);\n  };\n  const handleClearWatchlist = () => {\n    if (watchlist.length === 0) {\n      toast.info('Watchlist is already empty');\n      return;\n    }\n    setShowClearConfirmation(true);\n  };\n  const updateWatchlistPrices = async () => {\n    if (!watchlist.length) return;\n\n    // Set updating flag to show loading indicators\n    setIsUpdatingWatchlist(true);\n    try {\n      const updatedWatchlist = await Promise.all(watchlist.map(async item => {\n        try {\n          const response = await optionsApi.getCurrentPrice(item.contractSymbol);\n\n          // Calculate midpoint price if bid and ask are available (rounded down to 2 decimal places)\n          const newBid = response.bid || item.bid || 0;\n          const newAsk = response.ask || item.ask || 0;\n          const newMidpoint = newBid > 0 && newAsk > 0 ? Math.floor((newBid + newAsk) * 100 / 2) / 100 : response.lastPrice || item.currentPrice || 0;\n          const newChange = response.change || 0;\n          const newPercentChange = response.percentChange || 0;\n\n          // Calculate P&L based on midpoint price and entry price (not from API)\n          const entryPrice = item.selectedPrice || 0;\n          const pnlUsd = (newMidpoint - entryPrice) * 100; // 100 shares per contract\n          const pnlPct = entryPrice > 0 ? (newMidpoint - entryPrice) / entryPrice * 100 : 0;\n          return {\n            ...item,\n            currentPrice: newMidpoint,\n            bid: newBid,\n            ask: newAsk,\n            lastPrice: response.lastPrice || item.lastPrice || 0,\n            change: newChange,\n            percentChange: newPercentChange,\n            PNL_USD: pnlUsd,\n            PNL_PCT: pnlPct,\n            lastUpdated: new Date().toISOString()\n          };\n        } catch (error) {\n          console.error('Error updating price for', item.contractSymbol, error);\n          return item;\n        }\n      }));\n\n      // Calculate total P&L\n      const totalPnL = updatedWatchlist.reduce((total, item) => total + (item.PNL_USD || 0), 0);\n\n      // Update watchlist in state and localStorage with all pricing data\n      setWatchlist(updatedWatchlist);\n      localStorage.setItem('optionsWatchlist', JSON.stringify({\n        items: updatedWatchlist,\n        totalPnL: totalPnL,\n        lastUpdated: new Date().toISOString()\n      }));\n      toast.success('Watchlist prices updated successfully');\n    } catch (error) {\n      console.error('Error updating watchlist prices:', error);\n      toast.error('Failed to update some prices. Please try again.');\n    } finally {\n      setIsUpdatingWatchlist(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Options Watchlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TickerSearch, {\n      onTickerChange: handleTickerChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), ticker && /*#__PURE__*/_jsxDEV(OptionsParameters, {\n      expirations: expirations,\n      selectedExpiration: selectedExpiration,\n      optionType: optionType,\n      strikePrice: strikePrice,\n      numStrikesRange: numStrikesRange,\n      onExpirationChange: handleExpirationChange,\n      onOptionTypeChange: handleOptionTypeChange,\n      onStrikeFilterChange: handleStrikeFilterChange,\n      isLoading: isLoading,\n      showStrikeFilter: showStrikeFilter,\n      toggleStrikeFilter: () => setShowStrikeFilter(!showStrikeFilter),\n      disableDuplicateWarning: disableDuplicateWarning,\n      onToggleDuplicateWarning: () => {\n        const newValue = !disableDuplicateWarning;\n        setDisableDuplicateWarning(newValue);\n        localStorage.setItem('disableDuplicateWarning', newValue.toString());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this), ticker && selectedExpiration && /*#__PURE__*/_jsxDEV(OptionsChain, {\n      options: optionsChain,\n      onAddToWatchlist: addToWatchlist,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this), showDuplicateWarning && pendingContract && /*#__PURE__*/_jsxDEV(DialogOverlay, {\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogHeader, {\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"Duplicate Contract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            onClick: () => handleDuplicateWarningResponse(false),\n            children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This contract is already in your watchlist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: pendingContract.contractSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to add it again?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n          onClick: () => setDontShowAgain(!dontShowAgain),\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            checked: dontShowAgain,\n            onChange: () => setDontShowAgain(!dontShowAgain)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), \"Don't show this warning again\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(CancelButton, {\n            onClick: () => handleDuplicateWarningResponse(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmButton, {\n            onClick: () => handleDuplicateWarningResponse(true),\n            children: \"Add Anyway\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Watchlist, {\n      watchlist: watchlist,\n      onRemoveItem: removeFromWatchlist,\n      onClearWatchlist: handleClearWatchlist,\n      onWatchlistUpdate: (updatedItems, totalPnL) => {\n        // Persist updated watchlist data to localStorage\n        setWatchlist(updatedItems);\n        localStorage.setItem('optionsWatchlist', JSON.stringify({\n          items: updatedItems,\n          totalPnL: totalPnL,\n          lastUpdated: new Date().toISOString()\n        }));\n      },\n      isLoading: isUpdatingWatchlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this), showClearConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '2rem',\n          borderRadius: '8px',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n          width: '400px',\n          maxWidth: '90%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            marginBottom: '1rem',\n            color: '#333'\n          },\n          children: \"Clear Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: '1.5rem',\n            color: '#555'\n          },\n          children: [\"Are you sure you want to remove all \", watchlist.length, \" contract\", watchlist.length !== 1 ? 's' : '', \" from your watchlist? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowClearConfirmation(false),\n            style: {\n              padding: '0.5rem 1rem',\n              border: '1px solid #ddd',\n              backgroundColor: 'white',\n              color: '#333',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontWeight: 500\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearWatchlist,\n            style: {\n              padding: '0.5rem 1rem',\n              border: 'none',\n              backgroundColor: '#f6465d',\n              color: 'white',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontWeight: 500\n            },\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 5\n  }, this);\n};\n_s(OptionsWatchlist, \"KYeOAOH1dsJOt+lkui8Q7G6oo90=\");\n_c13 = OptionsWatchlist;\nexport default OptionsWatchlist;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"DialogOverlay\");\n$RefreshReg$(_c4, \"DialogContent\");\n$RefreshReg$(_c5, \"DialogHeader\");\n$RefreshReg$(_c6, \"DialogTitle\");\n$RefreshReg$(_c7, \"CloseButton\");\n$RefreshReg$(_c8, \"DialogActions\");\n$RefreshReg$(_c9, \"CheckboxContainer\");\n$RefreshReg$(_c10, \"CheckboxInput\");\n$RefreshReg$(_c11, \"CancelButton\");\n$RefreshReg$(_c12, \"ConfirmButton\");\n$RefreshReg$(_c13, \"OptionsWatchlist\");","map":{"version":3,"names":["React","useState","useEffect","styled","optionsApi","TickerSearch","OptionsParameters","OptionsChain","Watchlist","toast","FaTimes","jsxDEV","_jsxDEV","Container","div","_c","Title","h1","_c2","DialogOverlay","_c3","DialogContent","_c4","DialogHeader","_c5","DialogTitle","h3","_c6","CloseButton","button","_c7","DialogActions","_c8","CheckboxContainer","_c9","CheckboxInput","input","_c10","Button","CancelButton","_c11","ConfirmButton","_c12","OptionsWatchlist","_s","ticker","setTicker","expirations","setExpirations","selectedExpiration","setSelectedExpiration","optionType","setOptionType","strikePrice","setStrikePrice","numStrikesRange","setNumStrikesRange","optionsChain","setOptionsChain","isLoading","setIsLoading","watchlist","setWatchlist","showClearConfirmation","setShowClearConfirmation","showDuplicateWarning","setShowDuplicateWarning","disableDuplicateWarning","setDisableDuplicateWarning","pendingContract","setPendingContract","dontShowAgain","setDontShowAgain","showStrikeFilter","setShowStrikeFilter","isUpdatingWatchlist","setIsUpdatingWatchlist","storedWatchlist","localStorage","getItem","parsedData","JSON","parse","itemsData","Array","isArray","items","lastUpdated","lastUpdateTime","Date","currentTime","hoursSinceUpdate","length","info","error","console","setItem","stringify","totalPnL","toISOString","disableWarning","fetchExpirations","fetchOptionsChain","data","getExpirations","currentExpirationIsValid","some","exp","value","expiration","getOptionsChain","handleTickerChange","newTicker","handleExpirationChange","handleOptionTypeChange","type","handleStrikeFilterChange","strike","range","isDuplicateContract","contract","item","contractSymbol","handleDuplicateWarningResponse","shouldAdd","addContractToWatchlist","success","addToWatchlist","midpointPrice","bid","ask","Math","floor","lastPrice","newItem","selectedPrice","currentPrice","addedAt","pnlUsd","pnlPct","PNL_USD","PNL_PCT","newWatchlist","reduce","total","removeFromWatchlist","index","updatedWatchlist","splice","clearWatchlist","handleClearWatchlist","updateWatchlistPrices","Promise","all","map","response","getCurrentPrice","newBid","newAsk","newMidpoint","newChange","change","newPercentChange","percentChange","entryPrice","children","fileName","_jsxFileName","lineNumber","columnNumber","onTickerChange","onExpirationChange","onOptionTypeChange","onStrikeFilterChange","toggleStrikeFilter","onToggleDuplicateWarning","newValue","toString","options","onAddToWatchlist","onClick","checked","onChange","onRemoveItem","onClearWatchlist","onWatchlistUpdate","updatedItems","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","padding","borderRadius","boxShadow","maxWidth","marginTop","marginBottom","color","gap","border","cursor","fontWeight","_c13","$RefreshReg$"],"sources":["/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/options-watchlist/OptionsWatchlist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { optionsApi } from '../../services/api';\nimport TickerSearch from './TickerSearch';\nimport OptionsParameters from './OptionsParameters';\nimport OptionsChain from './OptionsChain';\nimport Watchlist from './Watchlist';\nimport { toast } from 'react-toastify';\nimport { FaTimes } from 'react-icons/fa';\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1.5rem;\n  color: #333;\n`;\n\nconst DialogOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst DialogContent = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  padding: 1.5rem;\n  width: 400px;\n  max-width: 90%;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n`;\n\nconst DialogHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst DialogTitle = styled.h3`\n  margin: 0;\n  color: #333;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  color: #666;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    color: #333;\n  }\n`;\n\nconst DialogActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n  margin-top: 1.5rem;\n`;\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 1rem;\n  cursor: pointer;\n`;\n\nconst CheckboxInput = styled.input`\n  margin-right: 0.5rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s;\n`;\n\nconst CancelButton = styled(Button)`\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  color: #333;\n  \n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n\nconst ConfirmButton = styled(Button)`\n  background-color: #4a90e2;\n  border: 1px solid #3a80d2;\n  color: white;\n  \n  &:hover {\n    background-color: #3a80d2;\n  }\n`;\n\nconst OptionsWatchlist = () => {\n  const [ticker, setTicker] = useState('');\n  const [expirations, setExpirations] = useState([]);\n  const [selectedExpiration, setSelectedExpiration] = useState('');\n  const [optionType, setOptionType] = useState('Call');\n  const [strikePrice, setStrikePrice] = useState(0);\n  const [numStrikesRange, setNumStrikesRange] = useState(3);\n  const [optionsChain, setOptionsChain] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [watchlist, setWatchlist] = useState([]);\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\n  const [showDuplicateWarning, setShowDuplicateWarning] = useState(false);\n  const [disableDuplicateWarning, setDisableDuplicateWarning] = useState(false);\n  const [pendingContract, setPendingContract] = useState(null);\n  const [dontShowAgain, setDontShowAgain] = useState(false);\n  const [showStrikeFilter, setShowStrikeFilter] = useState(false);\n  const [isUpdatingWatchlist, setIsUpdatingWatchlist] = useState(false);\n\n  useEffect(() => {\n    const storedWatchlist = localStorage.getItem('optionsWatchlist');\n    if (storedWatchlist) {\n      try {\n        const parsedData = JSON.parse(storedWatchlist);\n        // Handle both new format (with metadata) and old format (just array)\n        const itemsData = Array.isArray(parsedData) ? parsedData : parsedData.items || [];\n        \n        // Set the complete watchlist with all price and P&L data from localStorage\n        setWatchlist(itemsData);\n        \n        // If data exists but is old (over 12 hours), show a notification to update\n        if (parsedData.lastUpdated) {\n          const lastUpdateTime = new Date(parsedData.lastUpdated);\n          const currentTime = new Date();\n          const hoursSinceUpdate = (currentTime - lastUpdateTime) / (1000 * 60 * 60);\n          \n          if (hoursSinceUpdate > 12 && itemsData.length > 0) {\n            toast.info('Your watchlist data is over 12 hours old. Consider updating prices.');\n          }\n        }\n      } catch (error) {\n        console.error('Error parsing watchlist:', error);\n        localStorage.setItem('optionsWatchlist', JSON.stringify({\n          items: [],\n          totalPnL: 0,\n          lastUpdated: new Date().toISOString()\n        }));\n      }\n    }\n    \n    const disableWarning = localStorage.getItem('disableDuplicateWarning');\n    if (disableWarning === 'true') {\n      setDisableDuplicateWarning(true);\n    }\n  }, []);\n  \n  useEffect(() => {\n    // Load initial price data for watchlist items only when first loaded\n    // No longer automatically updating prices periodically\n    if (watchlist.length > 0) {\n      // Keep the initial price data but don't continuously fetch updates\n      // updateWatchlistPrices();\n    }\n  }, [watchlist.length]);\n\n  useEffect(() => {\n    if (ticker) {\n      fetchExpirations();\n    } else {\n      setOptionsChain([]);\n    }\n  }, [ticker]);\n\n  useEffect(() => {\n    if (ticker && selectedExpiration && optionType) {\n      fetchOptionsChain();\n    }\n  }, [ticker, selectedExpiration, optionType, strikePrice, numStrikesRange]);\n\n  const fetchExpirations = async () => {\n    if (!ticker) return;\n    \n    try {\n      setIsLoading(true);\n      setOptionsChain([]); // Clear options chain while loading new data\n      const data = await optionsApi.getExpirations(ticker);\n      if (data && data.length > 0) {\n        setExpirations(data);\n        const currentExpirationIsValid = selectedExpiration && \n          data.some(exp => exp.value === selectedExpiration);\n        \n        if (!selectedExpiration || !currentExpirationIsValid) {\n          setSelectedExpiration(data[0].value);\n          return data[0].value; // Return the newly selected expiration\n        }\n      } else {\n        setExpirations([]);\n        setSelectedExpiration('');\n        setOptionsChain([]);\n      }\n    } catch (error) {\n      console.error('Error fetching expirations:', error);\n      setExpirations([]);\n      setSelectedExpiration('');\n      setOptionsChain([]);\n    } finally {\n      if (!selectedExpiration) { // Only clear loading if we're not proceeding to fetchOptionsChain\n        setIsLoading(false);\n      }\n    }\n    return null;\n  };\n\n  const fetchOptionsChain = async (expiration = selectedExpiration) => {\n    if (!ticker || !expiration || !optionType) return;\n    \n    try {\n      setIsLoading(true);\n      const data = await optionsApi.getOptionsChain(\n        ticker,\n        expiration,\n        optionType,\n        strikePrice,\n        numStrikesRange\n      );\n      setOptionsChain(data);\n    } catch (error) {\n      console.error('Error fetching options chain:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleTickerChange = (newTicker) => {\n    if (newTicker === ticker) {\n      return;\n    }\n    \n    setTicker(newTicker);\n    setOptionsChain([]);\n    setExpirations([]);\n    setSelectedExpiration('');\n  };\n\n  const handleExpirationChange = (expiration) => {\n    if (expiration !== selectedExpiration) {\n      setSelectedExpiration(expiration);\n    }\n  };\n\n  const handleOptionTypeChange = (type) => {\n    setOptionType(type);\n  };\n\n  const handleStrikeFilterChange = (strike, range) => {\n    setStrikePrice(strike);\n    setNumStrikesRange(range);\n  };\n\n  const isDuplicateContract = (contract) => {\n    return watchlist.some(item => item.contractSymbol === contract.contractSymbol);\n  };\n  \n  const handleDuplicateWarningResponse = (shouldAdd) => {\n    if (shouldAdd && pendingContract) {\n      addContractToWatchlist(pendingContract);\n      toast.success('Contract added to watchlist');\n    }\n    \n    if (dontShowAgain) {\n      setDisableDuplicateWarning(true);\n      localStorage.setItem('disableDuplicateWarning', 'true');\n    }\n    \n    setShowDuplicateWarning(false);\n    setPendingContract(null);\n    setDontShowAgain(false);\n  };\n  \n  const addToWatchlist = (contract) => {\n    if (isDuplicateContract(contract) && !disableDuplicateWarning) {\n      setPendingContract(contract);\n      setShowDuplicateWarning(true);\n      return;\n    }\n    \n    addContractToWatchlist(contract);\n  };\n  \n  const addContractToWatchlist = (contract) => {\n    // Calculate midpoint price if bid and ask are available (rounded down to 2 decimal places)\n    const midpointPrice = contract.bid > 0 && contract.ask > 0 ? \n      Math.floor((contract.bid + contract.ask) * 100 / 2) / 100 : \n      (contract.lastPrice || 0);\n    \n    const newItem = {\n      ...contract,\n      selectedPrice: midpointPrice,  // Use midpoint as entry price\n      currentPrice: midpointPrice,   // Start with midpoint as current price\n      lastPrice: contract.lastPrice || 0,\n      bid: contract.bid || 0,\n      ask: contract.ask || 0,\n      addedAt: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n    \n    // Calculate initial P&L\n    if (newItem.currentPrice && newItem.selectedPrice > 0) {\n      const pnlUsd = (newItem.currentPrice - newItem.selectedPrice) * 100;\n      const pnlPct = ((newItem.currentPrice - newItem.selectedPrice) / newItem.selectedPrice * 100);\n      newItem.PNL_USD = pnlUsd;\n      newItem.PNL_PCT = pnlPct;\n    } else {\n      newItem.PNL_USD = 0;\n      newItem.PNL_PCT = 0;\n    }\n    \n    const newWatchlist = [...watchlist, newItem];\n    \n    // Calculate total P&L\n    const totalPnL = newWatchlist.reduce((total, item) => total + (item.PNL_USD || 0), 0);\n    \n    // Update state and localStorage\n    setWatchlist(newWatchlist);\n    localStorage.setItem('optionsWatchlist', JSON.stringify({\n      items: newWatchlist,\n      totalPnL: totalPnL,\n      lastUpdated: new Date().toISOString()\n    }));\n  };\n\n  const removeFromWatchlist = (index) => {\n    const updatedWatchlist = [...watchlist];\n    updatedWatchlist.splice(index, 1);\n    \n    // Calculate total P&L\n    const totalPnL = updatedWatchlist.reduce((total, item) => total + (item.PNL_USD || 0), 0);\n    \n    // Update state and localStorage with complete pricing data\n    setWatchlist(updatedWatchlist);\n    localStorage.setItem('optionsWatchlist', JSON.stringify({\n      items: updatedWatchlist,\n      totalPnL: totalPnL,\n      lastUpdated: new Date().toISOString()\n    }));\n  };\n\n  const clearWatchlist = () => {\n    setWatchlist([]);\n    localStorage.setItem('optionsWatchlist', JSON.stringify({\n      items: [],\n      totalPnL: 0,\n      lastUpdated: new Date().toISOString()\n    }));\n    toast.success('Watchlist cleared successfully');\n    setShowClearConfirmation(false);\n  };\n  \n  const handleClearWatchlist = () => {\n    if (watchlist.length === 0) {\n      toast.info('Watchlist is already empty');\n      return;\n    }\n    setShowClearConfirmation(true);\n  };\n  \n  const updateWatchlistPrices = async () => {\n    if (!watchlist.length) return;\n    \n    // Set updating flag to show loading indicators\n    setIsUpdatingWatchlist(true);\n    \n    try {\n      const updatedWatchlist = await Promise.all(watchlist.map(async (item) => {\n        try {\n          const response = await optionsApi.getCurrentPrice(item.contractSymbol);\n          \n          // Calculate midpoint price if bid and ask are available (rounded down to 2 decimal places)\n          const newBid = response.bid || item.bid || 0;\n          const newAsk = response.ask || item.ask || 0;\n          const newMidpoint = newBid > 0 && newAsk > 0 ? \n            Math.floor((newBid + newAsk) * 100 / 2) / 100 : \n            response.lastPrice || item.currentPrice || 0;\n          \n          const newChange = response.change || 0;\n          const newPercentChange = response.percentChange || 0;\n          \n          // Calculate P&L based on midpoint price and entry price (not from API)\n          const entryPrice = item.selectedPrice || 0;\n          const pnlUsd = (newMidpoint - entryPrice) * 100; // 100 shares per contract\n          const pnlPct = entryPrice > 0 ? ((newMidpoint - entryPrice) / entryPrice * 100) : 0;\n          \n          return {\n            ...item,\n            currentPrice: newMidpoint,\n            bid: newBid,\n            ask: newAsk,\n            lastPrice: response.lastPrice || item.lastPrice || 0,\n            change: newChange,\n            percentChange: newPercentChange,\n            PNL_USD: pnlUsd,\n            PNL_PCT: pnlPct,\n            lastUpdated: new Date().toISOString()\n          };\n        } catch (error) {\n          console.error('Error updating price for', item.contractSymbol, error);\n          return item;\n        }\n      }));\n      \n      // Calculate total P&L\n      const totalPnL = updatedWatchlist.reduce((total, item) => total + (item.PNL_USD || 0), 0);\n      \n      // Update watchlist in state and localStorage with all pricing data\n      setWatchlist(updatedWatchlist);\n      localStorage.setItem('optionsWatchlist', JSON.stringify({\n        items: updatedWatchlist,\n        totalPnL: totalPnL,\n        lastUpdated: new Date().toISOString()\n      }));\n      \n      toast.success('Watchlist prices updated successfully');\n    } catch (error) {\n      console.error('Error updating watchlist prices:', error);\n      toast.error('Failed to update some prices. Please try again.');\n    } finally {\n      setIsUpdatingWatchlist(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Title>Options Watchlist</Title>\n      \n      <TickerSearch onTickerChange={handleTickerChange} />\n      \n      {ticker && (\n        <OptionsParameters\n          expirations={expirations}\n          selectedExpiration={selectedExpiration}\n          optionType={optionType}\n          strikePrice={strikePrice}\n          numStrikesRange={numStrikesRange}\n          onExpirationChange={handleExpirationChange}\n          onOptionTypeChange={handleOptionTypeChange}\n          onStrikeFilterChange={handleStrikeFilterChange}\n          isLoading={isLoading}\n          showStrikeFilter={showStrikeFilter}\n          toggleStrikeFilter={() => setShowStrikeFilter(!showStrikeFilter)}\n          disableDuplicateWarning={disableDuplicateWarning}\n          onToggleDuplicateWarning={() => {\n            const newValue = !disableDuplicateWarning;\n            setDisableDuplicateWarning(newValue);\n            localStorage.setItem('disableDuplicateWarning', newValue.toString());\n          }}\n        />\n      )}\n      \n      {ticker && selectedExpiration && (\n        <OptionsChain\n          options={optionsChain}\n          onAddToWatchlist={addToWatchlist}\n          isLoading={isLoading}\n        />\n      )}\n      \n      {showDuplicateWarning && pendingContract && (\n        <DialogOverlay>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Duplicate Contract</DialogTitle>\n              <CloseButton onClick={() => handleDuplicateWarningResponse(false)}>\n                <FaTimes />\n              </CloseButton>\n            </DialogHeader>\n            \n            <p>This contract is already in your watchlist:</p>\n            <p><strong>{pendingContract.contractSymbol}</strong></p>\n            <p>Are you sure you want to add it again?</p>\n            \n            <CheckboxContainer onClick={() => setDontShowAgain(!dontShowAgain)}>\n              <CheckboxInput \n                type=\"checkbox\" \n                checked={dontShowAgain} \n                onChange={() => setDontShowAgain(!dontShowAgain)}\n              />\n              Don't show this warning again\n            </CheckboxContainer>\n            \n            <DialogActions>\n              <CancelButton onClick={() => handleDuplicateWarningResponse(false)}>\n                Cancel\n              </CancelButton>\n              <ConfirmButton onClick={() => handleDuplicateWarningResponse(true)}>\n                Add Anyway\n              </ConfirmButton>\n            </DialogActions>\n          </DialogContent>\n        </DialogOverlay>\n      )}\n      \n      <Watchlist\n        watchlist={watchlist}\n        onRemoveItem={removeFromWatchlist}\n        onClearWatchlist={handleClearWatchlist}\n        onWatchlistUpdate={(updatedItems, totalPnL) => {\n          // Persist updated watchlist data to localStorage\n          setWatchlist(updatedItems);\n          localStorage.setItem('optionsWatchlist', JSON.stringify({\n            items: updatedItems,\n            totalPnL: totalPnL,\n            lastUpdated: new Date().toISOString()\n          }));\n        }}\n        isLoading={isUpdatingWatchlist}\n      />\n      \n      {showClearConfirmation && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 1000\n        }}>\n          <div style={{\n            backgroundColor: 'white',\n            padding: '2rem',\n            borderRadius: '8px',\n            boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n            width: '400px',\n            maxWidth: '90%'\n          }}>\n            <h3 style={{ marginTop: 0, marginBottom: '1rem', color: '#333' }}>Clear Watchlist</h3>\n            <p style={{ marginBottom: '1.5rem', color: '#555' }}>\n              Are you sure you want to remove all {watchlist.length} contract{watchlist.length !== 1 ? 's' : ''} from your watchlist? This action cannot be undone.\n            </p>\n            <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '1rem' }}>\n              <button \n                onClick={() => setShowClearConfirmation(false)}\n                style={{\n                  padding: '0.5rem 1rem',\n                  border: '1px solid #ddd',\n                  backgroundColor: 'white',\n                  color: '#333',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  fontWeight: 500\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                onClick={clearWatchlist}\n                style={{\n                  padding: '0.5rem 1rem',\n                  border: 'none',\n                  backgroundColor: '#f6465d',\n                  color: 'white',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  fontWeight: 500\n                }}\n              >\n                Clear All\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default OptionsWatchlist;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAG;AAC5B;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,SAAS;AAKf,MAAMG,KAAK,GAAGb,MAAM,CAACc,EAAE;AACvB;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,KAAK;AAKX,MAAMG,aAAa,GAAGhB,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAXID,aAAa;AAanB,MAAME,aAAa,GAAGlB,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAPID,aAAa;AASnB,MAAME,YAAY,GAAGpB,MAAM,CAACW,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GALID,YAAY;AAOlB,MAAME,WAAW,GAAGtB,MAAM,CAACuB,EAAE;AAC7B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,WAAW;AAKjB,MAAMG,WAAW,GAAGzB,MAAM,CAAC0B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAdIF,WAAW;AAgBjB,MAAMG,aAAa,GAAG5B,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACkB,GAAA,GALID,aAAa;AAOnB,MAAME,iBAAiB,GAAG9B,MAAM,CAACW,GAAG;AACpC;AACA;AACA;AACA;AACA,CAAC;AAACoB,GAAA,GALID,iBAAiB;AAOvB,MAAME,aAAa,GAAGhC,MAAM,CAACiC,KAAK;AAClC;AACA,CAAC;AAACC,IAAA,GAFIF,aAAa;AAInB,MAAMG,MAAM,GAAGnC,MAAM,CAAC0B,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMU,YAAY,GAAGpC,MAAM,CAACmC,MAAM,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,IAAA,GARID,YAAY;AAUlB,MAAME,aAAa,GAAGtC,MAAM,CAACmC,MAAM,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACI,IAAA,GARID,aAAa;AAUnB,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACkD,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsD,eAAe,EAAEC,kBAAkB,CAAC,GAAGvD,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACwD,YAAY,EAAEC,eAAe,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0D,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4D,SAAS,EAAEC,YAAY,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8D,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACgE,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACkE,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAACoE,eAAe,EAAEC,kBAAkB,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACsE,aAAa,EAAEC,gBAAgB,CAAC,GAAGvE,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACwE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzE,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0E,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3E,QAAQ,CAAC,KAAK,CAAC;EAErEC,SAAS,CAAC,MAAM;IACd,MAAM2E,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IAChE,IAAIF,eAAe,EAAE;MACnB,IAAI;QACF,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;QAC9C;QACA,MAAMM,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,GAAGA,UAAU,GAAGA,UAAU,CAACM,KAAK,IAAI,EAAE;;QAEjF;QACAxB,YAAY,CAACqB,SAAS,CAAC;;QAEvB;QACA,IAAIH,UAAU,CAACO,WAAW,EAAE;UAC1B,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACT,UAAU,CAACO,WAAW,CAAC;UACvD,MAAMG,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;UAC9B,MAAME,gBAAgB,GAAG,CAACD,WAAW,GAAGF,cAAc,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;UAE1E,IAAIG,gBAAgB,GAAG,EAAE,IAAIR,SAAS,CAACS,MAAM,GAAG,CAAC,EAAE;YACjDnF,KAAK,CAACoF,IAAI,CAAC,qEAAqE,CAAC;UACnF;QACF;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDhB,YAAY,CAACkB,OAAO,CAAC,kBAAkB,EAAEf,IAAI,CAACgB,SAAS,CAAC;UACtDX,KAAK,EAAE,EAAE;UACTY,QAAQ,EAAE,CAAC;UACXX,WAAW,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC;QACtC,CAAC,CAAC,CAAC;MACL;IACF;IAEA,MAAMC,cAAc,GAAGtB,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC;IACtE,IAAIqB,cAAc,KAAK,MAAM,EAAE;MAC7BhC,0BAA0B,CAAC,IAAI,CAAC;IAClC;EACF,CAAC,EAAE,EAAE,CAAC;EAENlE,SAAS,CAAC,MAAM;IACd;IACA;IACA,IAAI2D,SAAS,CAAC+B,MAAM,GAAG,CAAC,EAAE;MACxB;MACA;IAAA;EAEJ,CAAC,EAAE,CAAC/B,SAAS,CAAC+B,MAAM,CAAC,CAAC;EAEtB1F,SAAS,CAAC,MAAM;IACd,IAAI2C,MAAM,EAAE;MACVwD,gBAAgB,CAAC,CAAC;IACpB,CAAC,MAAM;MACL3C,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ3C,SAAS,CAAC,MAAM;IACd,IAAI2C,MAAM,IAAII,kBAAkB,IAAIE,UAAU,EAAE;MAC9CmD,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACzD,MAAM,EAAEI,kBAAkB,EAAEE,UAAU,EAAEE,WAAW,EAAEE,eAAe,CAAC,CAAC;EAE1E,MAAM8C,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACxD,MAAM,EAAE;IAEb,IAAI;MACFe,YAAY,CAAC,IAAI,CAAC;MAClBF,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MACrB,MAAM6C,IAAI,GAAG,MAAMnG,UAAU,CAACoG,cAAc,CAAC3D,MAAM,CAAC;MACpD,IAAI0D,IAAI,IAAIA,IAAI,CAACX,MAAM,GAAG,CAAC,EAAE;QAC3B5C,cAAc,CAACuD,IAAI,CAAC;QACpB,MAAME,wBAAwB,GAAGxD,kBAAkB,IACjDsD,IAAI,CAACG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,KAAK3D,kBAAkB,CAAC;QAEpD,IAAI,CAACA,kBAAkB,IAAI,CAACwD,wBAAwB,EAAE;UACpDvD,qBAAqB,CAACqD,IAAI,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC;UACpC,OAAOL,IAAI,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC;QACxB;MACF,CAAC,MAAM;QACL5D,cAAc,CAAC,EAAE,CAAC;QAClBE,qBAAqB,CAAC,EAAE,CAAC;QACzBQ,eAAe,CAAC,EAAE,CAAC;MACrB;IACF,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD9C,cAAc,CAAC,EAAE,CAAC;MAClBE,qBAAqB,CAAC,EAAE,CAAC;MACzBQ,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,SAAS;MACR,IAAI,CAACT,kBAAkB,EAAE;QAAE;QACzBW,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAM0C,iBAAiB,GAAG,MAAAA,CAAOO,UAAU,GAAG5D,kBAAkB,KAAK;IACnE,IAAI,CAACJ,MAAM,IAAI,CAACgE,UAAU,IAAI,CAAC1D,UAAU,EAAE;IAE3C,IAAI;MACFS,YAAY,CAAC,IAAI,CAAC;MAClB,MAAM2C,IAAI,GAAG,MAAMnG,UAAU,CAAC0G,eAAe,CAC3CjE,MAAM,EACNgE,UAAU,EACV1D,UAAU,EACVE,WAAW,EACXE,eACF,CAAC;MACDG,eAAe,CAAC6C,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,SAAS;MACRlC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMmD,kBAAkB,GAAIC,SAAS,IAAK;IACxC,IAAIA,SAAS,KAAKnE,MAAM,EAAE;MACxB;IACF;IAEAC,SAAS,CAACkE,SAAS,CAAC;IACpBtD,eAAe,CAAC,EAAE,CAAC;IACnBV,cAAc,CAAC,EAAE,CAAC;IAClBE,qBAAqB,CAAC,EAAE,CAAC;EAC3B,CAAC;EAED,MAAM+D,sBAAsB,GAAIJ,UAAU,IAAK;IAC7C,IAAIA,UAAU,KAAK5D,kBAAkB,EAAE;MACrCC,qBAAqB,CAAC2D,UAAU,CAAC;IACnC;EACF,CAAC;EAED,MAAMK,sBAAsB,GAAIC,IAAI,IAAK;IACvC/D,aAAa,CAAC+D,IAAI,CAAC;EACrB,CAAC;EAED,MAAMC,wBAAwB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAClDhE,cAAc,CAAC+D,MAAM,CAAC;IACtB7D,kBAAkB,CAAC8D,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;IACxC,OAAO3D,SAAS,CAAC6C,IAAI,CAACe,IAAI,IAAIA,IAAI,CAACC,cAAc,KAAKF,QAAQ,CAACE,cAAc,CAAC;EAChF,CAAC;EAED,MAAMC,8BAA8B,GAAIC,SAAS,IAAK;IACpD,IAAIA,SAAS,IAAIvD,eAAe,EAAE;MAChCwD,sBAAsB,CAACxD,eAAe,CAAC;MACvC5D,KAAK,CAACqH,OAAO,CAAC,6BAA6B,CAAC;IAC9C;IAEA,IAAIvD,aAAa,EAAE;MACjBH,0BAA0B,CAAC,IAAI,CAAC;MAChCU,YAAY,CAACkB,OAAO,CAAC,yBAAyB,EAAE,MAAM,CAAC;IACzD;IAEA9B,uBAAuB,CAAC,KAAK,CAAC;IAC9BI,kBAAkB,CAAC,IAAI,CAAC;IACxBE,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMuD,cAAc,GAAIP,QAAQ,IAAK;IACnC,IAAID,mBAAmB,CAACC,QAAQ,CAAC,IAAI,CAACrD,uBAAuB,EAAE;MAC7DG,kBAAkB,CAACkD,QAAQ,CAAC;MAC5BtD,uBAAuB,CAAC,IAAI,CAAC;MAC7B;IACF;IAEA2D,sBAAsB,CAACL,QAAQ,CAAC;EAClC,CAAC;EAED,MAAMK,sBAAsB,GAAIL,QAAQ,IAAK;IAC3C;IACA,MAAMQ,aAAa,GAAGR,QAAQ,CAACS,GAAG,GAAG,CAAC,IAAIT,QAAQ,CAACU,GAAG,GAAG,CAAC,GACxDC,IAAI,CAACC,KAAK,CAAC,CAACZ,QAAQ,CAACS,GAAG,GAAGT,QAAQ,CAACU,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GACxDV,QAAQ,CAACa,SAAS,IAAI,CAAE;IAE3B,MAAMC,OAAO,GAAG;MACd,GAAGd,QAAQ;MACXe,aAAa,EAAEP,aAAa;MAAG;MAC/BQ,YAAY,EAAER,aAAa;MAAI;MAC/BK,SAAS,EAAEb,QAAQ,CAACa,SAAS,IAAI,CAAC;MAClCJ,GAAG,EAAET,QAAQ,CAACS,GAAG,IAAI,CAAC;MACtBC,GAAG,EAAEV,QAAQ,CAACU,GAAG,IAAI,CAAC;MACtBO,OAAO,EAAE,IAAIhD,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC,CAAC;MACjCZ,WAAW,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC;IACtC,CAAC;;IAED;IACA,IAAImC,OAAO,CAACE,YAAY,IAAIF,OAAO,CAACC,aAAa,GAAG,CAAC,EAAE;MACrD,MAAMG,MAAM,GAAG,CAACJ,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACC,aAAa,IAAI,GAAG;MACnE,MAAMI,MAAM,GAAI,CAACL,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACC,aAAa,IAAID,OAAO,CAACC,aAAa,GAAG,GAAI;MAC7FD,OAAO,CAACM,OAAO,GAAGF,MAAM;MACxBJ,OAAO,CAACO,OAAO,GAAGF,MAAM;IAC1B,CAAC,MAAM;MACLL,OAAO,CAACM,OAAO,GAAG,CAAC;MACnBN,OAAO,CAACO,OAAO,GAAG,CAAC;IACrB;IAEA,MAAMC,YAAY,GAAG,CAAC,GAAGjF,SAAS,EAAEyE,OAAO,CAAC;;IAE5C;IACA,MAAMpC,QAAQ,GAAG4C,YAAY,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEvB,IAAI,KAAKuB,KAAK,IAAIvB,IAAI,CAACmB,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;;IAErF;IACA9E,YAAY,CAACgF,YAAY,CAAC;IAC1BhE,YAAY,CAACkB,OAAO,CAAC,kBAAkB,EAAEf,IAAI,CAACgB,SAAS,CAAC;MACtDX,KAAK,EAAEwD,YAAY;MACnB5C,QAAQ,EAAEA,QAAQ;MAClBX,WAAW,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC;IACtC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM8C,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,gBAAgB,GAAG,CAAC,GAAGtF,SAAS,CAAC;IACvCsF,gBAAgB,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;IAEjC;IACA,MAAMhD,QAAQ,GAAGiD,gBAAgB,CAACJ,MAAM,CAAC,CAACC,KAAK,EAAEvB,IAAI,KAAKuB,KAAK,IAAIvB,IAAI,CAACmB,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;;IAEzF;IACA9E,YAAY,CAACqF,gBAAgB,CAAC;IAC9BrE,YAAY,CAACkB,OAAO,CAAC,kBAAkB,EAAEf,IAAI,CAACgB,SAAS,CAAC;MACtDX,KAAK,EAAE6D,gBAAgB;MACvBjD,QAAQ,EAAEA,QAAQ;MAClBX,WAAW,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC;IACtC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMkD,cAAc,GAAGA,CAAA,KAAM;IAC3BvF,YAAY,CAAC,EAAE,CAAC;IAChBgB,YAAY,CAACkB,OAAO,CAAC,kBAAkB,EAAEf,IAAI,CAACgB,SAAS,CAAC;MACtDX,KAAK,EAAE,EAAE;MACTY,QAAQ,EAAE,CAAC;MACXX,WAAW,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC;IACtC,CAAC,CAAC,CAAC;IACH1F,KAAK,CAACqH,OAAO,CAAC,gCAAgC,CAAC;IAC/C9D,wBAAwB,CAAC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMsF,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIzF,SAAS,CAAC+B,MAAM,KAAK,CAAC,EAAE;MAC1BnF,KAAK,CAACoF,IAAI,CAAC,4BAA4B,CAAC;MACxC;IACF;IACA7B,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC;EAED,MAAMuF,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI,CAAC1F,SAAS,CAAC+B,MAAM,EAAE;;IAEvB;IACAhB,sBAAsB,CAAC,IAAI,CAAC;IAE5B,IAAI;MACF,MAAMuE,gBAAgB,GAAG,MAAMK,OAAO,CAACC,GAAG,CAAC5F,SAAS,CAAC6F,GAAG,CAAC,MAAOjC,IAAI,IAAK;QACvE,IAAI;UACF,MAAMkC,QAAQ,GAAG,MAAMvJ,UAAU,CAACwJ,eAAe,CAACnC,IAAI,CAACC,cAAc,CAAC;;UAEtE;UACA,MAAMmC,MAAM,GAAGF,QAAQ,CAAC1B,GAAG,IAAIR,IAAI,CAACQ,GAAG,IAAI,CAAC;UAC5C,MAAM6B,MAAM,GAAGH,QAAQ,CAACzB,GAAG,IAAIT,IAAI,CAACS,GAAG,IAAI,CAAC;UAC5C,MAAM6B,WAAW,GAAGF,MAAM,GAAG,CAAC,IAAIC,MAAM,GAAG,CAAC,GAC1C3B,IAAI,CAACC,KAAK,CAAC,CAACyB,MAAM,GAAGC,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAC7CH,QAAQ,CAACtB,SAAS,IAAIZ,IAAI,CAACe,YAAY,IAAI,CAAC;UAE9C,MAAMwB,SAAS,GAAGL,QAAQ,CAACM,MAAM,IAAI,CAAC;UACtC,MAAMC,gBAAgB,GAAGP,QAAQ,CAACQ,aAAa,IAAI,CAAC;;UAEpD;UACA,MAAMC,UAAU,GAAG3C,IAAI,CAACc,aAAa,IAAI,CAAC;UAC1C,MAAMG,MAAM,GAAG,CAACqB,WAAW,GAAGK,UAAU,IAAI,GAAG,CAAC,CAAC;UACjD,MAAMzB,MAAM,GAAGyB,UAAU,GAAG,CAAC,GAAI,CAACL,WAAW,GAAGK,UAAU,IAAIA,UAAU,GAAG,GAAG,GAAI,CAAC;UAEnF,OAAO;YACL,GAAG3C,IAAI;YACPe,YAAY,EAAEuB,WAAW;YACzB9B,GAAG,EAAE4B,MAAM;YACX3B,GAAG,EAAE4B,MAAM;YACXzB,SAAS,EAAEsB,QAAQ,CAACtB,SAAS,IAAIZ,IAAI,CAACY,SAAS,IAAI,CAAC;YACpD4B,MAAM,EAAED,SAAS;YACjBG,aAAa,EAAED,gBAAgB;YAC/BtB,OAAO,EAAEF,MAAM;YACfG,OAAO,EAAEF,MAAM;YACfpD,WAAW,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC;UACtC,CAAC;QACH,CAAC,CAAC,OAAOL,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAE2B,IAAI,CAACC,cAAc,EAAE5B,KAAK,CAAC;UACrE,OAAO2B,IAAI;QACb;MACF,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMvB,QAAQ,GAAGiD,gBAAgB,CAACJ,MAAM,CAAC,CAACC,KAAK,EAAEvB,IAAI,KAAKuB,KAAK,IAAIvB,IAAI,CAACmB,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;;MAEzF;MACA9E,YAAY,CAACqF,gBAAgB,CAAC;MAC9BrE,YAAY,CAACkB,OAAO,CAAC,kBAAkB,EAAEf,IAAI,CAACgB,SAAS,CAAC;QACtDX,KAAK,EAAE6D,gBAAgB;QACvBjD,QAAQ,EAAEA,QAAQ;QAClBX,WAAW,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC;MACtC,CAAC,CAAC,CAAC;MAEH1F,KAAK,CAACqH,OAAO,CAAC,uCAAuC,CAAC;IACxD,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDrF,KAAK,CAACqF,KAAK,CAAC,iDAAiD,CAAC;IAChE,CAAC,SAAS;MACRlB,sBAAsB,CAAC,KAAK,CAAC;IAC/B;EACF,CAAC;EAED,oBACEhE,OAAA,CAACC,SAAS;IAAAwJ,QAAA,gBACRzJ,OAAA,CAACI,KAAK;MAAAqJ,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAEhC7J,OAAA,CAACP,YAAY;MAACqK,cAAc,EAAE3D;IAAmB;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEnD5H,MAAM,iBACLjC,OAAA,CAACN,iBAAiB;MAChByC,WAAW,EAAEA,WAAY;MACzBE,kBAAkB,EAAEA,kBAAmB;MACvCE,UAAU,EAAEA,UAAW;MACvBE,WAAW,EAAEA,WAAY;MACzBE,eAAe,EAAEA,eAAgB;MACjCoH,kBAAkB,EAAE1D,sBAAuB;MAC3C2D,kBAAkB,EAAE1D,sBAAuB;MAC3C2D,oBAAoB,EAAEzD,wBAAyB;MAC/CzD,SAAS,EAAEA,SAAU;MACrBc,gBAAgB,EAAEA,gBAAiB;MACnCqG,kBAAkB,EAAEA,CAAA,KAAMpG,mBAAmB,CAAC,CAACD,gBAAgB,CAAE;MACjEN,uBAAuB,EAAEA,uBAAwB;MACjD4G,wBAAwB,EAAEA,CAAA,KAAM;QAC9B,MAAMC,QAAQ,GAAG,CAAC7G,uBAAuB;QACzCC,0BAA0B,CAAC4G,QAAQ,CAAC;QACpClG,YAAY,CAACkB,OAAO,CAAC,yBAAyB,EAAEgF,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC;MACtE;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EAEA5H,MAAM,IAAII,kBAAkB,iBAC3BrC,OAAA,CAACL,YAAY;MACX2K,OAAO,EAAEzH,YAAa;MACtB0H,gBAAgB,EAAEpD,cAAe;MACjCpE,SAAS,EAAEA;IAAU;MAAA2G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACF,EAEAxG,oBAAoB,IAAII,eAAe,iBACtCzD,OAAA,CAACO,aAAa;MAAAkJ,QAAA,eACZzJ,OAAA,CAACS,aAAa;QAAAgJ,QAAA,gBACZzJ,OAAA,CAACW,YAAY;UAAA8I,QAAA,gBACXzJ,OAAA,CAACa,WAAW;YAAA4I,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAC7C7J,OAAA,CAACgB,WAAW;YAACwJ,OAAO,EAAEA,CAAA,KAAMzD,8BAA8B,CAAC,KAAK,CAAE;YAAA0C,QAAA,eAChEzJ,OAAA,CAACF,OAAO;cAAA4J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAEf7J,OAAA;UAAAyJ,QAAA,EAAG;QAA2C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClD7J,OAAA;UAAAyJ,QAAA,eAAGzJ,OAAA;YAAAyJ,QAAA,EAAShG,eAAe,CAACqD;UAAc;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxD7J,OAAA;UAAAyJ,QAAA,EAAG;QAAsC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAE7C7J,OAAA,CAACqB,iBAAiB;UAACmJ,OAAO,EAAEA,CAAA,KAAM5G,gBAAgB,CAAC,CAACD,aAAa,CAAE;UAAA8F,QAAA,gBACjEzJ,OAAA,CAACuB,aAAa;YACZgF,IAAI,EAAC,UAAU;YACfkE,OAAO,EAAE9G,aAAc;YACvB+G,QAAQ,EAAEA,CAAA,KAAM9G,gBAAgB,CAAC,CAACD,aAAa;UAAE;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,iCAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eAEpB7J,OAAA,CAACmB,aAAa;UAAAsI,QAAA,gBACZzJ,OAAA,CAAC2B,YAAY;YAAC6I,OAAO,EAAEA,CAAA,KAAMzD,8BAA8B,CAAC,KAAK,CAAE;YAAA0C,QAAA,EAAC;UAEpE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC,eACf7J,OAAA,CAAC6B,aAAa;YAAC2I,OAAO,EAAEA,CAAA,KAAMzD,8BAA8B,CAAC,IAAI,CAAE;YAAA0C,QAAA,EAAC;UAEpE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAChB,eAED7J,OAAA,CAACJ,SAAS;MACRqD,SAAS,EAAEA,SAAU;MACrB0H,YAAY,EAAEtC,mBAAoB;MAClCuC,gBAAgB,EAAElC,oBAAqB;MACvCmC,iBAAiB,EAAEA,CAACC,YAAY,EAAExF,QAAQ,KAAK;QAC7C;QACApC,YAAY,CAAC4H,YAAY,CAAC;QAC1B5G,YAAY,CAACkB,OAAO,CAAC,kBAAkB,EAAEf,IAAI,CAACgB,SAAS,CAAC;UACtDX,KAAK,EAAEoG,YAAY;UACnBxF,QAAQ,EAAEA,QAAQ;UAClBX,WAAW,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC;QACtC,CAAC,CAAC,CAAC;MACL,CAAE;MACFxC,SAAS,EAAEgB;IAAoB;MAAA2F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EAED1G,qBAAqB,iBACpBnD,OAAA;MAAK+K,KAAK,EAAE;QACVC,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,oBAAoB;QACrCC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACV,CAAE;MAAAhC,QAAA,eACAzJ,OAAA;QAAK+K,KAAK,EAAE;UACVM,eAAe,EAAE,OAAO;UACxBK,OAAO,EAAE,MAAM;UACfC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE,gCAAgC;UAC3CT,KAAK,EAAE,OAAO;UACdU,QAAQ,EAAE;QACZ,CAAE;QAAApC,QAAA,gBACAzJ,OAAA;UAAI+K,KAAK,EAAE;YAAEe,SAAS,EAAE,CAAC;YAAEC,YAAY,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAvC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtF7J,OAAA;UAAG+K,KAAK,EAAE;YAAEgB,YAAY,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAvC,QAAA,GAAC,sCACf,EAACxG,SAAS,CAAC+B,MAAM,EAAC,WAAS,EAAC/B,SAAS,CAAC+B,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,qDACpG;QAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ7J,OAAA;UAAK+K,KAAK,EAAE;YAAEO,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,UAAU;YAAEU,GAAG,EAAE;UAAO,CAAE;UAAAxC,QAAA,gBACvEzJ,OAAA;YACEwK,OAAO,EAAEA,CAAA,KAAMpH,wBAAwB,CAAC,KAAK,CAAE;YAC/C2H,KAAK,EAAE;cACLW,OAAO,EAAE,aAAa;cACtBQ,MAAM,EAAE,gBAAgB;cACxBb,eAAe,EAAE,OAAO;cACxBW,KAAK,EAAE,MAAM;cACbL,YAAY,EAAE,KAAK;cACnBQ,MAAM,EAAE,SAAS;cACjBC,UAAU,EAAE;YACd,CAAE;YAAA3C,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7J,OAAA;YACEwK,OAAO,EAAE/B,cAAe;YACxBsC,KAAK,EAAE;cACLW,OAAO,EAAE,aAAa;cACtBQ,MAAM,EAAE,MAAM;cACdb,eAAe,EAAE,SAAS;cAC1BW,KAAK,EAAE,OAAO;cACdL,YAAY,EAAE,KAAK;cACnBQ,MAAM,EAAE,SAAS;cACjBC,UAAU,EAAE;YACd,CAAE;YAAA3C,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAC7H,EAAA,CA5dID,gBAAgB;AAAAsK,IAAA,GAAhBtK,gBAAgB;AA8dtB,eAAeA,gBAAgB;AAAC,IAAA5B,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAuK,IAAA;AAAAC,YAAA,CAAAnM,EAAA;AAAAmM,YAAA,CAAAhM,GAAA;AAAAgM,YAAA,CAAA9L,GAAA;AAAA8L,YAAA,CAAA5L,GAAA;AAAA4L,YAAA,CAAA1L,GAAA;AAAA0L,YAAA,CAAAvL,GAAA;AAAAuL,YAAA,CAAApL,GAAA;AAAAoL,YAAA,CAAAlL,GAAA;AAAAkL,YAAA,CAAAhL,GAAA;AAAAgL,YAAA,CAAA7K,IAAA;AAAA6K,YAAA,CAAA1K,IAAA;AAAA0K,YAAA,CAAAxK,IAAA;AAAAwK,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}