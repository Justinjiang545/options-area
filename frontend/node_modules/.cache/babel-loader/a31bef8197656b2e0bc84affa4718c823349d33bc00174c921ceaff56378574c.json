{"ast":null,"code":"var _jsxFileName = \"/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/options-watchlist/Watchlist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\nimport { optionsApi } from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchlistContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n`;\n_c = WatchlistContainer;\nconst WatchlistHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  \n  > div {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n`;\n_c2 = WatchlistHeader;\nconst TotalPnL = styled.div`\n  font-weight: bold;\n  color: ${props => props.profit ? '#0ecb81' : '#f6465d'};\n  font-size: 0.9rem;\n`;\n_c3 = TotalPnL;\nconst UpdateAllButton = styled.button`\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #357ABD;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n_c4 = UpdateAllButton;\nconst WatchlistTitle = styled.h2`\n  font-size: 1.25rem;\n  color: #333;\n  margin: 0;\n`;\n_c5 = WatchlistTitle;\nconst ClearButton = styled.button`\n  background-color: #f6465d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #e63c53;\n  }\n`;\n_c6 = ClearButton;\nconst EmptyMessage = styled.p`\n  color: #888;\n  font-style: italic;\n  text-align: center;\n  padding: 2rem 0;\n`;\n_c7 = EmptyMessage;\nconst WatchlistTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 0.9rem;\n`;\n_c8 = WatchlistTable;\nconst TableHeader = styled.th`\n  text-align: left;\n  padding: 0.75rem;\n  background-color: #f5f5f5;\n  border-bottom: 2px solid #e0e0e0;\n  position: sticky;\n  top: 0;\n  cursor: pointer;\n  user-select: none;\n  \n  &:hover {\n    background-color: #e0e0e0;\n  }\n  \n  /* Remove flex to maintain vertical column layout */\n  white-space: nowrap;\n  \n  /* For the sort icon placement */\n  position: relative;\n`;\n_c9 = TableHeader;\nconst TableRow = styled.tr`\n  &:hover {\n    background-color: #f9f9f9;\n  }\n`;\n_c10 = TableRow;\nconst TableCell = styled.td`\n  padding: 0.75rem;\n  border-bottom: 1px solid #e0e0e0;\n  ${({\n  highlight\n}) => highlight && `font-weight: bold;`}\n  ${({\n  profit\n}) => profit && `color: #0ecb81;`}\n  ${({\n  loss\n}) => loss && `color: #f6465d;`}\n  ${({\n  small\n}) => small && `\n    font-size: 0.75rem;\n    color: #888;\n  `}\n`;\n_c11 = TableCell;\nconst RemoveButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #f6465d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #e63c53;\n  }\n`;\n_c12 = RemoveButton;\nconst RefreshButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-right: 0.5rem;\n  \n  &:hover {\n    background-color: #357ABD;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n_c13 = RefreshButton;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n`;\n_c14 = ButtonGroup;\nconst formatNumber = (value, type) => {\n  if (value === null || value === undefined) return '-';\n  if (type === 'percent') {\n    return `${value.toFixed(2)}%`;\n  } else if (type === 'price') {\n    return `$${value.toFixed(2)}`;\n  } else if (type === 'pnl') {\n    return `$${value.toFixed(2)}`;\n  } else if (type === 'number') {\n    return value.toLocaleString();\n  }\n  return value;\n};\n\n// Format contract symbol into a more readable format: TSLA $250 Call 3/28\nconst formatContractName = contract => {\n  if (!contract) return '';\n  const {\n    ticker,\n    strike,\n    optionType,\n    expiration\n  } = contract;\n\n  // Format expiration date to MM/DD format\n  let expirationFormatted = expiration;\n  try {\n    if (expiration && expiration.includes('-')) {\n      const dateParts = expiration.split('-');\n      const month = parseInt(dateParts[1], 10);\n      const day = parseInt(dateParts[2], 10);\n      expirationFormatted = `${month}/${day}`;\n    }\n  } catch (error) {\n    console.error('Error formatting expiration date:', error);\n  }\n  return `${ticker} $${strike} ${optionType} ${expirationFormatted}`;\n};\nconst Watchlist = ({\n  watchlist,\n  onRemoveItem,\n  onClearWatchlist\n}) => {\n  _s();\n  const [localWatchlist, setLocalWatchlist] = useState(watchlist);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'neutral'\n  });\n  const [totalPnL, setTotalPnL] = useState({\n    usd: 0,\n    percent: 0\n  });\n  const [isUpdatingAll, setIsUpdatingAll] = useState(false);\n\n  // Update local watchlist when the prop changes\n  useEffect(() => {\n    setLocalWatchlist(watchlist);\n    calculateTotalPnL(watchlist);\n  }, [watchlist]);\n\n  // Calculate total P&L across all watchlist items\n  const calculateTotalPnL = items => {\n    if (!items || items.length === 0) {\n      setTotalPnL({\n        usd: 0,\n        percent: 0\n      });\n      return;\n    }\n\n    // Sum up all P&L values\n    const totalUsd = items.reduce((sum, item) => {\n      return sum + (item.PNL_USD || 0);\n    }, 0);\n\n    // Calculate weighted average percentage\n    const totalInvestment = items.reduce((sum, item) => {\n      return sum + (item.selectedPrice || 0) * 100;\n    }, 0);\n    const avgPercent = totalInvestment > 0 ? totalUsd / totalInvestment * 100 : 0;\n    setTotalPnL({\n      usd: totalUsd,\n      percent: avgPercent\n    });\n  };\n\n  // Sort the watchlist based on the current sort configuration\n  const sortedWatchlist = React.useMemo(() => {\n    let sortableItems = [...localWatchlist];\n    if (sortConfig.key && sortConfig.direction !== 'neutral') {\n      sortableItems.sort((a, b) => {\n        let aValue = a[sortConfig.key];\n        let bValue = b[sortConfig.key];\n\n        // Handle null/undefined values\n        if (aValue === null || aValue === undefined) return 1;\n        if (bValue === null || bValue === undefined) return -1;\n\n        // For string values, convert to lowercase for case-insensitive sorting\n        if (typeof aValue === 'string' && typeof bValue === 'string') {\n          aValue = aValue.toLowerCase();\n          bValue = bValue.toLowerCase();\n        }\n        if (aValue < bValue) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [localWatchlist, sortConfig]);\n\n  // Request a sort by column with three states: neutral -> ascending -> descending -> neutral\n  const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key) {\n      if (sortConfig.direction === 'neutral') {\n        direction = 'ascending';\n      } else if (sortConfig.direction === 'ascending') {\n        direction = 'descending';\n      } else {\n        direction = 'neutral';\n      }\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Get the sort icon for a column\n  const getSortIcon = key => {\n    if (sortConfig.key !== key || sortConfig.direction === 'neutral') {\n      return /*#__PURE__*/_jsxDEV(FaSort, {\n        style: {\n          opacity: 0.3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 14\n      }, this);\n    }\n    return sortConfig.direction === 'ascending' ? /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 66\n    }, this);\n  };\n\n  // Update prices and P&L calculations\n  const recalculatePnL = item => {\n    if (item.currentPrice && item.selectedPrice) {\n      const pnlUsd = (item.currentPrice - item.selectedPrice) * 100;\n      const pnlPct = (item.currentPrice - item.selectedPrice) / item.selectedPrice * 100;\n      return {\n        ...item,\n        PNL_USD: pnlUsd,\n        PNL_PCT: pnlPct\n      };\n    }\n    return item;\n  };\n  const updateCurrentPrice = (index, newPrice) => {\n    const updatedWatchlist = [...localWatchlist];\n    const formattedDateTime = formatDateTime(new Date());\n    updatedWatchlist[index] = {\n      ...updatedWatchlist[index],\n      currentPrice: newPrice,\n      isLoading: false,\n      lastUpdated: formattedDateTime\n    };\n    updatedWatchlist[index] = recalculatePnL(updatedWatchlist[index]);\n    setLocalWatchlist(updatedWatchlist);\n\n    // Recalculate total P&L when an item is updated\n    calculateTotalPnL(updatedWatchlist);\n  };\n\n  // Fetch the latest price from the YFinance API\n  const handlePriceUpdate = async index => {\n    try {\n      const currentItem = localWatchlist[index];\n\n      // Show loading state\n      const updatedWatchlist = [...localWatchlist];\n      updatedWatchlist[index] = {\n        ...updatedWatchlist[index],\n        isLoading: true\n      };\n      setLocalWatchlist(updatedWatchlist);\n\n      // Fetch the current price from the API\n      const response = await optionsApi.getCurrentPrice(currentItem.contractSymbol);\n      const newPrice = response.currentPrice;\n\n      // Update the price and recalculate P&L\n      updateCurrentPrice(index, newPrice);\n    } catch (error) {\n      console.error('Error updating price:', error);\n      // Remove loading state in case of error\n      const updatedWatchlist = [...localWatchlist];\n      updatedWatchlist[index] = {\n        ...updatedWatchlist[index],\n        isLoading: false\n      };\n      setLocalWatchlist(updatedWatchlist);\n\n      // Show error message to user with toast instead of alert\n      toast.error('Failed to update price. Please try again later.');\n    }\n  };\n\n  // Update all prices in the watchlist simultaneously\n  const handleUpdateAll = async () => {\n    if (localWatchlist.length === 0) {\n      toast.info('No items in watchlist to update');\n      return;\n    }\n\n    // Set updating all flag\n    setIsUpdatingAll(true);\n\n    // Set all items to loading state\n    const updatedWatchlist = localWatchlist.map(item => ({\n      ...item,\n      isLoading: true\n    }));\n    setLocalWatchlist(updatedWatchlist);\n\n    // Track success/failure counts\n    let successCount = 0;\n    let failureCount = 0;\n\n    // Process all updates in parallel\n    await Promise.all(localWatchlist.map(async (item, index) => {\n      try {\n        const response = await optionsApi.getCurrentPrice(item.contractSymbol);\n        const newPrice = response.currentPrice;\n\n        // Update individual item\n        const currentWatchlist = [...localWatchlist];\n        currentWatchlist[index] = {\n          ...currentWatchlist[index],\n          currentPrice: newPrice,\n          isLoading: false,\n          lastUpdated: formatDateTime(new Date())\n        };\n        currentWatchlist[index] = recalculatePnL(currentWatchlist[index]);\n        setLocalWatchlist(currentWatchlist);\n        successCount++;\n      } catch (error) {\n        console.error(`Error updating ${item.contractSymbol}:`, error);\n\n        // Just reset the loading state for this item\n        const currentWatchlist = [...localWatchlist];\n        currentWatchlist[index] = {\n          ...currentWatchlist[index],\n          isLoading: false\n        };\n        setLocalWatchlist(currentWatchlist);\n        failureCount++;\n      }\n    }));\n\n    // Reset updating all flag\n    setIsUpdatingAll(false);\n\n    // Recalculate total P&L\n    calculateTotalPnL(localWatchlist);\n\n    // Show summary notification\n    if (failureCount === 0 && successCount > 0) {\n      toast.success(`Successfully updated all ${successCount} items`);\n    } else if (successCount > 0 && failureCount > 0) {\n      toast.warning(`Updated ${successCount} items, ${failureCount} failed`);\n    } else if (failureCount > 0 && successCount === 0) {\n      toast.error(`Failed to update all ${failureCount} items`);\n    }\n  };\n\n  // Helper function to format datetime consistently\n  const formatDateTime = date => {\n    const dateOptions = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    };\n    const timeOptions = {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    };\n    const formattedDate = date.toLocaleDateString('en-US', dateOptions).replace(/\\//g, '-');\n    const formattedTime = date.toLocaleTimeString('en-US', timeOptions);\n    return `${formattedDate} - ${formattedTime}`;\n  };\n  if (localWatchlist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(WatchlistContainer, {\n      children: [/*#__PURE__*/_jsxDEV(WatchlistHeader, {\n        children: /*#__PURE__*/_jsxDEV(WatchlistTitle, {\n          children: \"Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmptyMessage, {\n        children: \"Your watchlist is empty. Add options to track them here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(WatchlistContainer, {\n    children: [/*#__PURE__*/_jsxDEV(WatchlistHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(WatchlistTitle, {\n          children: \"Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TotalPnL, {\n          profit: totalPnL.usd >= 0,\n          children: [\"Total P&L: \", formatNumber(totalPnL.usd, 'currency'), \" (\", formatNumber(totalPnL.percent, 'percent'), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(UpdateAllButton, {\n          onClick: handleUpdateAll,\n          disabled: isUpdatingAll || localWatchlist.length === 0,\n          children: isUpdatingAll ? 'Updating All...' : 'Update All'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n          onClick: onClearWatchlist,\n          children: \"Clear Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WatchlistTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('contractSymbol'),\n            children: [\"Contract \", getSortIcon('contractSymbol')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('strike'),\n            children: [\"Strike \", getSortIcon('strike')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('selectedPrice'),\n            children: [\"Entry Price \", getSortIcon('selectedPrice')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('currentPrice'),\n            children: [\"Current Price \", getSortIcon('currentPrice')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('PNL_USD'),\n            children: [\"P&L $ \", getSortIcon('PNL_USD')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('PNL_PCT'),\n            children: [\"P&L % \", getSortIcon('PNL_PCT')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('expiration'),\n            children: [\"Expiration \", getSortIcon('expiration')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('lastUpdated'),\n            children: [\"Last Updated \", getSortIcon('lastUpdated')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedWatchlist.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            highlight: true,\n            children: formatContractName(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatNumber(item.strike, 'price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatNumber(item.selectedPrice, 'price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatNumber(item.currentPrice, 'price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            profit: item.PNL_USD > 0,\n            loss: item.PNL_USD < 0,\n            children: formatNumber(item.PNL_USD, 'pnl')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            profit: item.PNL_PCT > 0,\n            loss: item.PNL_PCT < 0,\n            children: formatNumber(item.PNL_PCT, 'percent')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.expiration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            small: true,\n            children: item.lastUpdated || 'Not updated'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(RefreshButton, {\n                onClick: () => handlePriceUpdate(index),\n                disabled: item.isLoading,\n                children: item.isLoading ? 'Loading...' : 'Update'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RemoveButton, {\n                onClick: () => onRemoveItem(watchlist.findIndex(w => w.contractSymbol === item.contractSymbol)),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"jeGf9Hri/oixm6ViknM/KcE7cwc=\");\n_c15 = Watchlist;\nexport default Watchlist;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"WatchlistContainer\");\n$RefreshReg$(_c2, \"WatchlistHeader\");\n$RefreshReg$(_c3, \"TotalPnL\");\n$RefreshReg$(_c4, \"UpdateAllButton\");\n$RefreshReg$(_c5, \"WatchlistTitle\");\n$RefreshReg$(_c6, \"ClearButton\");\n$RefreshReg$(_c7, \"EmptyMessage\");\n$RefreshReg$(_c8, \"WatchlistTable\");\n$RefreshReg$(_c9, \"TableHeader\");\n$RefreshReg$(_c10, \"TableRow\");\n$RefreshReg$(_c11, \"TableCell\");\n$RefreshReg$(_c12, \"RemoveButton\");\n$RefreshReg$(_c13, \"RefreshButton\");\n$RefreshReg$(_c14, \"ButtonGroup\");\n$RefreshReg$(_c15, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","styled","FaSort","FaSortUp","FaSortDown","optionsApi","toast","jsxDEV","_jsxDEV","WatchlistContainer","div","_c","WatchlistHeader","_c2","TotalPnL","props","profit","_c3","UpdateAllButton","button","_c4","WatchlistTitle","h2","_c5","ClearButton","_c6","EmptyMessage","p","_c7","WatchlistTable","table","_c8","TableHeader","th","_c9","TableRow","tr","_c10","TableCell","td","highlight","loss","small","_c11","RemoveButton","_c12","RefreshButton","_c13","ButtonGroup","_c14","formatNumber","value","type","undefined","toFixed","toLocaleString","formatContractName","contract","ticker","strike","optionType","expiration","expirationFormatted","includes","dateParts","split","month","parseInt","day","error","console","Watchlist","watchlist","onRemoveItem","onClearWatchlist","_s","localWatchlist","setLocalWatchlist","sortConfig","setSortConfig","key","direction","totalPnL","setTotalPnL","usd","percent","isUpdatingAll","setIsUpdatingAll","calculateTotalPnL","items","length","totalUsd","reduce","sum","item","PNL_USD","totalInvestment","selectedPrice","avgPercent","sortedWatchlist","useMemo","sortableItems","sort","a","b","aValue","bValue","toLowerCase","requestSort","getSortIcon","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","recalculatePnL","currentPrice","pnlUsd","pnlPct","PNL_PCT","updateCurrentPrice","index","newPrice","updatedWatchlist","formattedDateTime","formatDateTime","Date","isLoading","lastUpdated","handlePriceUpdate","currentItem","response","getCurrentPrice","contractSymbol","handleUpdateAll","info","map","successCount","failureCount","Promise","all","currentWatchlist","success","warning","date","dateOptions","year","timeOptions","hour","minute","hour12","formattedDate","toLocaleDateString","replace","formattedTime","toLocaleTimeString","children","onClick","disabled","findIndex","w","_c15","$RefreshReg$"],"sources":["/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/options-watchlist/Watchlist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\nimport { optionsApi } from '../../services/api';\nimport { toast } from 'react-toastify';\n\nconst WatchlistContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst WatchlistHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  \n  > div {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n`;\n\nconst TotalPnL = styled.div`\n  font-weight: bold;\n  color: ${props => props.profit ? '#0ecb81' : '#f6465d'};\n  font-size: 0.9rem;\n`;\n\nconst UpdateAllButton = styled.button`\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #357ABD;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst WatchlistTitle = styled.h2`\n  font-size: 1.25rem;\n  color: #333;\n  margin: 0;\n`;\n\nconst ClearButton = styled.button`\n  background-color: #f6465d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #e63c53;\n  }\n`;\n\nconst EmptyMessage = styled.p`\n  color: #888;\n  font-style: italic;\n  text-align: center;\n  padding: 2rem 0;\n`;\n\nconst WatchlistTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 0.9rem;\n`;\n\nconst TableHeader = styled.th`\n  text-align: left;\n  padding: 0.75rem;\n  background-color: #f5f5f5;\n  border-bottom: 2px solid #e0e0e0;\n  position: sticky;\n  top: 0;\n  cursor: pointer;\n  user-select: none;\n  \n  &:hover {\n    background-color: #e0e0e0;\n  }\n  \n  /* Remove flex to maintain vertical column layout */\n  white-space: nowrap;\n  \n  /* For the sort icon placement */\n  position: relative;\n`;\n\nconst TableRow = styled.tr`\n  &:hover {\n    background-color: #f9f9f9;\n  }\n`;\n\nconst TableCell = styled.td`\n  padding: 0.75rem;\n  border-bottom: 1px solid #e0e0e0;\n  ${({ highlight }) => highlight && `font-weight: bold;`}\n  ${({ profit }) => profit && `color: #0ecb81;`}\n  ${({ loss }) => loss && `color: #f6465d;`}\n  ${({ small }) => small && `\n    font-size: 0.75rem;\n    color: #888;\n  `}\n`;\n\nconst RemoveButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #f6465d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #e63c53;\n  }\n`;\n\nconst RefreshButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-right: 0.5rem;\n  \n  &:hover {\n    background-color: #357ABD;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n`;\n\nconst formatNumber = (value, type) => {\n  if (value === null || value === undefined) return '-';\n  \n  if (type === 'percent') {\n    return `${value.toFixed(2)}%`;\n  } else if (type === 'price') {\n    return `$${value.toFixed(2)}`;\n  } else if (type === 'pnl') {\n    return `$${value.toFixed(2)}`;\n  } else if (type === 'number') {\n    return value.toLocaleString();\n  }\n  \n  return value;\n};\n\n// Format contract symbol into a more readable format: TSLA $250 Call 3/28\nconst formatContractName = (contract) => {\n  if (!contract) return '';\n  \n  const { ticker, strike, optionType, expiration } = contract;\n  \n  // Format expiration date to MM/DD format\n  let expirationFormatted = expiration;\n  try {\n    if (expiration && expiration.includes('-')) {\n      const dateParts = expiration.split('-');\n      const month = parseInt(dateParts[1], 10);\n      const day = parseInt(dateParts[2], 10);\n      expirationFormatted = `${month}/${day}`;\n    }\n  } catch (error) {\n    console.error('Error formatting expiration date:', error);\n  }\n  \n  return `${ticker} $${strike} ${optionType} ${expirationFormatted}`;\n};\n\nconst Watchlist = ({ watchlist, onRemoveItem, onClearWatchlist }) => {\n  const [localWatchlist, setLocalWatchlist] = useState(watchlist);\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'neutral' });\n  const [totalPnL, setTotalPnL] = useState({ usd: 0, percent: 0 });\n  const [isUpdatingAll, setIsUpdatingAll] = useState(false);\n  \n  // Update local watchlist when the prop changes\n  useEffect(() => {\n    setLocalWatchlist(watchlist);\n    calculateTotalPnL(watchlist);\n  }, [watchlist]);\n  \n  // Calculate total P&L across all watchlist items\n  const calculateTotalPnL = (items) => {\n    if (!items || items.length === 0) {\n      setTotalPnL({ usd: 0, percent: 0 });\n      return;\n    }\n    \n    // Sum up all P&L values\n    const totalUsd = items.reduce((sum, item) => {\n      return sum + (item.PNL_USD || 0);\n    }, 0);\n    \n    // Calculate weighted average percentage\n    const totalInvestment = items.reduce((sum, item) => {\n      return sum + (item.selectedPrice || 0) * 100;\n    }, 0);\n    \n    const avgPercent = totalInvestment > 0 ? (totalUsd / totalInvestment) * 100 : 0;\n    \n    setTotalPnL({ \n      usd: totalUsd, \n      percent: avgPercent \n    });\n  };\n  \n  // Sort the watchlist based on the current sort configuration\n  const sortedWatchlist = React.useMemo(() => {\n    let sortableItems = [...localWatchlist];\n    if (sortConfig.key && sortConfig.direction !== 'neutral') {\n      sortableItems.sort((a, b) => {\n        let aValue = a[sortConfig.key];\n        let bValue = b[sortConfig.key];\n        \n        // Handle null/undefined values\n        if (aValue === null || aValue === undefined) return 1;\n        if (bValue === null || bValue === undefined) return -1;\n        \n        // For string values, convert to lowercase for case-insensitive sorting\n        if (typeof aValue === 'string' && typeof bValue === 'string') {\n          aValue = aValue.toLowerCase();\n          bValue = bValue.toLowerCase();\n        }\n        \n        if (aValue < bValue) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [localWatchlist, sortConfig]);\n  \n  // Request a sort by column with three states: neutral -> ascending -> descending -> neutral\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key) {\n      if (sortConfig.direction === 'neutral') {\n        direction = 'ascending';\n      } else if (sortConfig.direction === 'ascending') {\n        direction = 'descending';\n      } else {\n        direction = 'neutral';\n      }\n    }\n    setSortConfig({ key, direction });\n  };\n  \n  // Get the sort icon for a column\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key || sortConfig.direction === 'neutral') {\n      return <FaSort style={{ opacity: 0.3 }} />;\n    }\n    return sortConfig.direction === 'ascending' ? <FaSortUp /> : <FaSortDown />;\n  };\n  \n  // Update prices and P&L calculations\n  const recalculatePnL = (item) => {\n    if (item.currentPrice && item.selectedPrice) {\n      const pnlUsd = (item.currentPrice - item.selectedPrice) * 100;\n      const pnlPct = (item.currentPrice - item.selectedPrice) / item.selectedPrice * 100;\n      return {\n        ...item,\n        PNL_USD: pnlUsd,\n        PNL_PCT: pnlPct\n      };\n    }\n    return item;\n  };\n  \n  const updateCurrentPrice = (index, newPrice) => {\n    const updatedWatchlist = [...localWatchlist];\n    const formattedDateTime = formatDateTime(new Date());\n    \n    updatedWatchlist[index] = {\n      ...updatedWatchlist[index],\n      currentPrice: newPrice,\n      isLoading: false,\n      lastUpdated: formattedDateTime\n    };\n    updatedWatchlist[index] = recalculatePnL(updatedWatchlist[index]);\n    setLocalWatchlist(updatedWatchlist);\n    \n    // Recalculate total P&L when an item is updated\n    calculateTotalPnL(updatedWatchlist);\n  };\n  \n  // Fetch the latest price from the YFinance API\n  const handlePriceUpdate = async (index) => {\n    try {\n      const currentItem = localWatchlist[index];\n      \n      // Show loading state\n      const updatedWatchlist = [...localWatchlist];\n      updatedWatchlist[index] = {\n        ...updatedWatchlist[index],\n        isLoading: true\n      };\n      setLocalWatchlist(updatedWatchlist);\n      \n      // Fetch the current price from the API\n      const response = await optionsApi.getCurrentPrice(currentItem.contractSymbol);\n      const newPrice = response.currentPrice;\n      \n      // Update the price and recalculate P&L\n      updateCurrentPrice(index, newPrice);\n    } catch (error) {\n      console.error('Error updating price:', error);\n      // Remove loading state in case of error\n      const updatedWatchlist = [...localWatchlist];\n      updatedWatchlist[index] = {\n        ...updatedWatchlist[index],\n        isLoading: false\n      };\n      setLocalWatchlist(updatedWatchlist);\n      \n      // Show error message to user with toast instead of alert\n      toast.error('Failed to update price. Please try again later.');\n    }\n  };\n  \n  // Update all prices in the watchlist simultaneously\n  const handleUpdateAll = async () => {\n    if (localWatchlist.length === 0) {\n      toast.info('No items in watchlist to update');\n      return;\n    }\n    \n    // Set updating all flag\n    setIsUpdatingAll(true);\n    \n    // Set all items to loading state\n    const updatedWatchlist = localWatchlist.map(item => ({\n      ...item,\n      isLoading: true\n    }));\n    setLocalWatchlist(updatedWatchlist);\n    \n    // Track success/failure counts\n    let successCount = 0;\n    let failureCount = 0;\n    \n    // Process all updates in parallel\n    await Promise.all(\n      localWatchlist.map(async (item, index) => {\n        try {\n          const response = await optionsApi.getCurrentPrice(item.contractSymbol);\n          const newPrice = response.currentPrice;\n          \n          // Update individual item\n          const currentWatchlist = [...localWatchlist];\n          currentWatchlist[index] = {\n            ...currentWatchlist[index],\n            currentPrice: newPrice,\n            isLoading: false,\n            lastUpdated: formatDateTime(new Date())\n          };\n          currentWatchlist[index] = recalculatePnL(currentWatchlist[index]);\n          setLocalWatchlist(currentWatchlist);\n          \n          successCount++;\n        } catch (error) {\n          console.error(`Error updating ${item.contractSymbol}:`, error);\n          \n          // Just reset the loading state for this item\n          const currentWatchlist = [...localWatchlist];\n          currentWatchlist[index] = {\n            ...currentWatchlist[index],\n            isLoading: false\n          };\n          setLocalWatchlist(currentWatchlist);\n          \n          failureCount++;\n        }\n      })\n    );\n    \n    // Reset updating all flag\n    setIsUpdatingAll(false);\n    \n    // Recalculate total P&L\n    calculateTotalPnL(localWatchlist);\n    \n    // Show summary notification\n    if (failureCount === 0 && successCount > 0) {\n      toast.success(`Successfully updated all ${successCount} items`);\n    } else if (successCount > 0 && failureCount > 0) {\n      toast.warning(`Updated ${successCount} items, ${failureCount} failed`);\n    } else if (failureCount > 0 && successCount === 0) {\n      toast.error(`Failed to update all ${failureCount} items`);\n    }\n  };\n  \n  // Helper function to format datetime consistently\n  const formatDateTime = (date) => {\n    const dateOptions = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    const timeOptions = { hour: '2-digit', minute: '2-digit', hour12: false };\n    \n    const formattedDate = date.toLocaleDateString('en-US', dateOptions).replace(/\\//g, '-');\n    const formattedTime = date.toLocaleTimeString('en-US', timeOptions);\n    return `${formattedDate} - ${formattedTime}`;\n  };\n  \n  if (localWatchlist.length === 0) {\n    return (\n      <WatchlistContainer>\n        <WatchlistHeader>\n          <WatchlistTitle>Watchlist</WatchlistTitle>\n        </WatchlistHeader>\n        <EmptyMessage>Your watchlist is empty. Add options to track them here.</EmptyMessage>\n      </WatchlistContainer>\n    );\n  }\n  \n  return (\n    <WatchlistContainer>\n      <WatchlistHeader>\n        <div>\n          <WatchlistTitle>Watchlist</WatchlistTitle>\n          <TotalPnL profit={totalPnL.usd >= 0}>\n            Total P&L: {formatNumber(totalPnL.usd, 'currency')} ({formatNumber(totalPnL.percent, 'percent')})\n          </TotalPnL>\n        </div>\n        <div>\n          <UpdateAllButton \n            onClick={handleUpdateAll} \n            disabled={isUpdatingAll || localWatchlist.length === 0}\n          >\n            {isUpdatingAll ? 'Updating All...' : 'Update All'}\n          </UpdateAllButton>\n          <ClearButton onClick={onClearWatchlist}>Clear Watchlist</ClearButton>\n        </div>\n      </WatchlistHeader>\n      \n      <WatchlistTable>\n        <thead>\n          <tr>\n            <TableHeader onClick={() => requestSort('contractSymbol')}>\n              Contract {getSortIcon('contractSymbol')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('strike')}>\n              Strike {getSortIcon('strike')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('selectedPrice')}>\n              Entry Price {getSortIcon('selectedPrice')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('currentPrice')}>\n              Current Price {getSortIcon('currentPrice')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('PNL_USD')}>\n              P&L $ {getSortIcon('PNL_USD')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('PNL_PCT')}>\n              P&L % {getSortIcon('PNL_PCT')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('expiration')}>\n              Expiration {getSortIcon('expiration')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('lastUpdated')}>\n              Last Updated {getSortIcon('lastUpdated')}\n            </TableHeader>\n            <TableHeader>\n              Actions\n            </TableHeader>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedWatchlist.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell highlight>{formatContractName(item)}</TableCell>\n              <TableCell>{formatNumber(item.strike, 'price')}</TableCell>\n              <TableCell>{formatNumber(item.selectedPrice, 'price')}</TableCell>\n              <TableCell>{formatNumber(item.currentPrice, 'price')}</TableCell>\n              <TableCell \n                profit={item.PNL_USD > 0} \n                loss={item.PNL_USD < 0}\n              >\n                {formatNumber(item.PNL_USD, 'pnl')}\n              </TableCell>\n              <TableCell \n                profit={item.PNL_PCT > 0} \n                loss={item.PNL_PCT < 0}\n              >\n                {formatNumber(item.PNL_PCT, 'percent')}\n              </TableCell>\n              <TableCell>{item.expiration}</TableCell>\n              <TableCell small>{item.lastUpdated || 'Not updated'}</TableCell>\n              <TableCell>\n                <ButtonGroup>\n                  <RefreshButton \n                    onClick={() => handlePriceUpdate(index)}\n                    disabled={item.isLoading}\n                  >\n                    {item.isLoading ? 'Loading...' : 'Update'}\n                  </RefreshButton>\n                  <RemoveButton onClick={() => onRemoveItem(watchlist.findIndex(w => w.contractSymbol === item.contractSymbol))}>\n                    Remove\n                  </RemoveButton>\n                </ButtonGroup>\n              </TableCell>\n            </TableRow>\n          ))}\n        </tbody>\n      </WatchlistTable>\n    </WatchlistContainer>\n  );\n};\n\nexport default Watchlist;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,gBAAgB;AAC7D,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,kBAAkB,GAAGR,MAAM,CAACS,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,kBAAkB;AAQxB,MAAMG,eAAe,GAAGX,MAAM,CAACS,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAXID,eAAe;AAarB,MAAME,QAAQ,GAAGb,MAAM,CAACS,GAAG;AAC3B;AACA,WAAWK,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,SAAS,GAAG,SAAS;AACxD;AACA,CAAC;AAACC,GAAA,GAJIH,QAAQ;AAMd,MAAMI,eAAe,GAAGjB,MAAM,CAACkB,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAlBIF,eAAe;AAoBrB,MAAMG,cAAc,GAAGpB,MAAM,CAACqB,EAAE;AAChC;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,cAAc;AAMpB,MAAMG,WAAW,GAAGvB,MAAM,CAACkB,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAbID,WAAW;AAejB,MAAME,YAAY,GAAGzB,MAAM,CAAC0B,CAAC;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,YAAY;AAOlB,MAAMG,cAAc,GAAG5B,MAAM,CAAC6B,KAAK;AACnC;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,cAAc;AAMpB,MAAMG,WAAW,GAAG/B,MAAM,CAACgC,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAnBIF,WAAW;AAqBjB,MAAMG,QAAQ,GAAGlC,MAAM,CAACmC,EAAE;AAC1B;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAJIF,QAAQ;AAMd,MAAMG,SAAS,GAAGrC,MAAM,CAACsC,EAAE;AAC3B;AACA;AACA,IAAI,CAAC;EAAEC;AAAU,CAAC,KAAKA,SAAS,IAAI,oBAAoB;AACxD,IAAI,CAAC;EAAExB;AAAO,CAAC,KAAKA,MAAM,IAAI,iBAAiB;AAC/C,IAAI,CAAC;EAAEyB;AAAK,CAAC,KAAKA,IAAI,IAAI,iBAAiB;AAC3C,IAAI,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,IAAI;AAC5B;AACA;AACA,GAAG;AACH,CAAC;AAACC,IAAA,GAVIL,SAAS;AAYf,MAAMM,YAAY,GAAG3C,MAAM,CAACkB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0B,IAAA,GAbID,YAAY;AAelB,MAAME,aAAa,GAAG7C,MAAM,CAACkB,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC4B,IAAA,GAnBID,aAAa;AAqBnB,MAAME,WAAW,GAAG/C,MAAM,CAACS,GAAG;AAC9B;AACA;AACA,CAAC;AAACuC,IAAA,GAHID,WAAW;AAKjB,MAAME,YAAY,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EACpC,IAAID,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKE,SAAS,EAAE,OAAO,GAAG;EAErD,IAAID,IAAI,KAAK,SAAS,EAAE;IACtB,OAAO,GAAGD,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,GAAG;EAC/B,CAAC,MAAM,IAAIF,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO,IAAID,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;EAC/B,CAAC,MAAM,IAAIF,IAAI,KAAK,KAAK,EAAE;IACzB,OAAO,IAAID,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;EAC/B,CAAC,MAAM,IAAIF,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOD,KAAK,CAACI,cAAc,CAAC,CAAC;EAC/B;EAEA,OAAOJ,KAAK;AACd,CAAC;;AAED;AACA,MAAMK,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,IAAI,CAACA,QAAQ,EAAE,OAAO,EAAE;EAExB,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAGJ,QAAQ;;EAE3D;EACA,IAAIK,mBAAmB,GAAGD,UAAU;EACpC,IAAI;IACF,IAAIA,UAAU,IAAIA,UAAU,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC1C,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC;MACvC,MAAMC,KAAK,GAAGC,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MACxC,MAAMI,GAAG,GAAGD,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MACtCF,mBAAmB,GAAG,GAAGI,KAAK,IAAIE,GAAG,EAAE;IACzC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC3D;EAEA,OAAO,GAAGX,MAAM,KAAKC,MAAM,IAAIC,UAAU,IAAIE,mBAAmB,EAAE;AACpE,CAAC;AAED,MAAMS,SAAS,GAAGA,CAAC;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG9E,QAAQ,CAACyE,SAAS,CAAC;EAC/D,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGhF,QAAQ,CAAC;IAAEiF,GAAG,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAU,CAAC,CAAC;EACjF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpF,QAAQ,CAAC;IAAEqF,GAAG,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EAChE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxF,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd6E,iBAAiB,CAACL,SAAS,CAAC;IAC5BgB,iBAAiB,CAAChB,SAAS,CAAC;EAC9B,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMgB,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MAChCP,WAAW,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAE,CAAC,CAAC;MACnC;IACF;;IAEA;IACA,MAAMM,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MAC3C,OAAOD,GAAG,IAAIC,IAAI,CAACC,OAAO,IAAI,CAAC,CAAC;IAClC,CAAC,EAAE,CAAC,CAAC;;IAEL;IACA,MAAMC,eAAe,GAAGP,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MAClD,OAAOD,GAAG,GAAG,CAACC,IAAI,CAACG,aAAa,IAAI,CAAC,IAAI,GAAG;IAC9C,CAAC,EAAE,CAAC,CAAC;IAEL,MAAMC,UAAU,GAAGF,eAAe,GAAG,CAAC,GAAIL,QAAQ,GAAGK,eAAe,GAAI,GAAG,GAAG,CAAC;IAE/Eb,WAAW,CAAC;MACVC,GAAG,EAAEO,QAAQ;MACbN,OAAO,EAAEa;IACX,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGrG,KAAK,CAACsG,OAAO,CAAC,MAAM;IAC1C,IAAIC,aAAa,GAAG,CAAC,GAAGzB,cAAc,CAAC;IACvC,IAAIE,UAAU,CAACE,GAAG,IAAIF,UAAU,CAACG,SAAS,KAAK,SAAS,EAAE;MACxDoB,aAAa,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC3B,IAAIC,MAAM,GAAGF,CAAC,CAACzB,UAAU,CAACE,GAAG,CAAC;QAC9B,IAAI0B,MAAM,GAAGF,CAAC,CAAC1B,UAAU,CAACE,GAAG,CAAC;;QAE9B;QACA,IAAIyB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKpD,SAAS,EAAE,OAAO,CAAC;QACrD,IAAIqD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKrD,SAAS,EAAE,OAAO,CAAC,CAAC;;QAEtD;QACA,IAAI,OAAOoD,MAAM,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,QAAQ,EAAE;UAC5DD,MAAM,GAAGA,MAAM,CAACE,WAAW,CAAC,CAAC;UAC7BD,MAAM,GAAGA,MAAM,CAACC,WAAW,CAAC,CAAC;QAC/B;QAEA,IAAIF,MAAM,GAAGC,MAAM,EAAE;UACnB,OAAO5B,UAAU,CAACG,SAAS,KAAK,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC;QACtD;QACA,IAAIwB,MAAM,GAAGC,MAAM,EAAE;UACnB,OAAO5B,UAAU,CAACG,SAAS,KAAK,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;QACtD;QACA,OAAO,CAAC;MACV,CAAC,CAAC;IACJ;IACA,OAAOoB,aAAa;EACtB,CAAC,EAAE,CAACzB,cAAc,EAAEE,UAAU,CAAC,CAAC;;EAEhC;EACA,MAAM8B,WAAW,GAAI5B,GAAG,IAAK;IAC3B,IAAIC,SAAS,GAAG,WAAW;IAC3B,IAAIH,UAAU,CAACE,GAAG,KAAKA,GAAG,EAAE;MAC1B,IAAIF,UAAU,CAACG,SAAS,KAAK,SAAS,EAAE;QACtCA,SAAS,GAAG,WAAW;MACzB,CAAC,MAAM,IAAIH,UAAU,CAACG,SAAS,KAAK,WAAW,EAAE;QAC/CA,SAAS,GAAG,YAAY;MAC1B,CAAC,MAAM;QACLA,SAAS,GAAG,SAAS;MACvB;IACF;IACAF,aAAa,CAAC;MAAEC,GAAG;MAAEC;IAAU,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,MAAM4B,WAAW,GAAI7B,GAAG,IAAK;IAC3B,IAAIF,UAAU,CAACE,GAAG,KAAKA,GAAG,IAAIF,UAAU,CAACG,SAAS,KAAK,SAAS,EAAE;MAChE,oBAAOzE,OAAA,CAACN,MAAM;QAAC4G,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC5C;IACA,OAAOrC,UAAU,CAACG,SAAS,KAAK,WAAW,gBAAGzE,OAAA,CAACL,QAAQ;MAAA6G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG3G,OAAA,CAACJ,UAAU;MAAA4G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7E,CAAC;;EAED;EACA,MAAMC,cAAc,GAAItB,IAAI,IAAK;IAC/B,IAAIA,IAAI,CAACuB,YAAY,IAAIvB,IAAI,CAACG,aAAa,EAAE;MAC3C,MAAMqB,MAAM,GAAG,CAACxB,IAAI,CAACuB,YAAY,GAAGvB,IAAI,CAACG,aAAa,IAAI,GAAG;MAC7D,MAAMsB,MAAM,GAAG,CAACzB,IAAI,CAACuB,YAAY,GAAGvB,IAAI,CAACG,aAAa,IAAIH,IAAI,CAACG,aAAa,GAAG,GAAG;MAClF,OAAO;QACL,GAAGH,IAAI;QACPC,OAAO,EAAEuB,MAAM;QACfE,OAAO,EAAED;MACX,CAAC;IACH;IACA,OAAOzB,IAAI;EACb,CAAC;EAED,MAAM2B,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC9C,MAAMC,gBAAgB,GAAG,CAAC,GAAGhD,cAAc,CAAC;IAC5C,MAAMiD,iBAAiB,GAAGC,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAEpDH,gBAAgB,CAACF,KAAK,CAAC,GAAG;MACxB,GAAGE,gBAAgB,CAACF,KAAK,CAAC;MAC1BL,YAAY,EAAEM,QAAQ;MACtBK,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAEJ;IACf,CAAC;IACDD,gBAAgB,CAACF,KAAK,CAAC,GAAGN,cAAc,CAACQ,gBAAgB,CAACF,KAAK,CAAC,CAAC;IACjE7C,iBAAiB,CAAC+C,gBAAgB,CAAC;;IAEnC;IACApC,iBAAiB,CAACoC,gBAAgB,CAAC;EACrC,CAAC;;EAED;EACA,MAAMM,iBAAiB,GAAG,MAAOR,KAAK,IAAK;IACzC,IAAI;MACF,MAAMS,WAAW,GAAGvD,cAAc,CAAC8C,KAAK,CAAC;;MAEzC;MACA,MAAME,gBAAgB,GAAG,CAAC,GAAGhD,cAAc,CAAC;MAC5CgD,gBAAgB,CAACF,KAAK,CAAC,GAAG;QACxB,GAAGE,gBAAgB,CAACF,KAAK,CAAC;QAC1BM,SAAS,EAAE;MACb,CAAC;MACDnD,iBAAiB,CAAC+C,gBAAgB,CAAC;;MAEnC;MACA,MAAMQ,QAAQ,GAAG,MAAM/H,UAAU,CAACgI,eAAe,CAACF,WAAW,CAACG,cAAc,CAAC;MAC7E,MAAMX,QAAQ,GAAGS,QAAQ,CAACf,YAAY;;MAEtC;MACAI,kBAAkB,CAACC,KAAK,EAAEC,QAAQ,CAAC;IACrC,CAAC,CAAC,OAAOtD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;MACA,MAAMuD,gBAAgB,GAAG,CAAC,GAAGhD,cAAc,CAAC;MAC5CgD,gBAAgB,CAACF,KAAK,CAAC,GAAG;QACxB,GAAGE,gBAAgB,CAACF,KAAK,CAAC;QAC1BM,SAAS,EAAE;MACb,CAAC;MACDnD,iBAAiB,CAAC+C,gBAAgB,CAAC;;MAEnC;MACAtH,KAAK,CAAC+D,KAAK,CAAC,iDAAiD,CAAC;IAChE;EACF,CAAC;;EAED;EACA,MAAMkE,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI3D,cAAc,CAACc,MAAM,KAAK,CAAC,EAAE;MAC/BpF,KAAK,CAACkI,IAAI,CAAC,iCAAiC,CAAC;MAC7C;IACF;;IAEA;IACAjD,gBAAgB,CAAC,IAAI,CAAC;;IAEtB;IACA,MAAMqC,gBAAgB,GAAGhD,cAAc,CAAC6D,GAAG,CAAC3C,IAAI,KAAK;MACnD,GAAGA,IAAI;MACPkC,SAAS,EAAE;IACb,CAAC,CAAC,CAAC;IACHnD,iBAAiB,CAAC+C,gBAAgB,CAAC;;IAEnC;IACA,IAAIc,YAAY,GAAG,CAAC;IACpB,IAAIC,YAAY,GAAG,CAAC;;IAEpB;IACA,MAAMC,OAAO,CAACC,GAAG,CACfjE,cAAc,CAAC6D,GAAG,CAAC,OAAO3C,IAAI,EAAE4B,KAAK,KAAK;MACxC,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAM/H,UAAU,CAACgI,eAAe,CAACvC,IAAI,CAACwC,cAAc,CAAC;QACtE,MAAMX,QAAQ,GAAGS,QAAQ,CAACf,YAAY;;QAEtC;QACA,MAAMyB,gBAAgB,GAAG,CAAC,GAAGlE,cAAc,CAAC;QAC5CkE,gBAAgB,CAACpB,KAAK,CAAC,GAAG;UACxB,GAAGoB,gBAAgB,CAACpB,KAAK,CAAC;UAC1BL,YAAY,EAAEM,QAAQ;UACtBK,SAAS,EAAE,KAAK;UAChBC,WAAW,EAAEH,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC;QACxC,CAAC;QACDe,gBAAgB,CAACpB,KAAK,CAAC,GAAGN,cAAc,CAAC0B,gBAAgB,CAACpB,KAAK,CAAC,CAAC;QACjE7C,iBAAiB,CAACiE,gBAAgB,CAAC;QAEnCJ,YAAY,EAAE;MAChB,CAAC,CAAC,OAAOrE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkByB,IAAI,CAACwC,cAAc,GAAG,EAAEjE,KAAK,CAAC;;QAE9D;QACA,MAAMyE,gBAAgB,GAAG,CAAC,GAAGlE,cAAc,CAAC;QAC5CkE,gBAAgB,CAACpB,KAAK,CAAC,GAAG;UACxB,GAAGoB,gBAAgB,CAACpB,KAAK,CAAC;UAC1BM,SAAS,EAAE;QACb,CAAC;QACDnD,iBAAiB,CAACiE,gBAAgB,CAAC;QAEnCH,YAAY,EAAE;MAChB;IACF,CAAC,CACH,CAAC;;IAED;IACApD,gBAAgB,CAAC,KAAK,CAAC;;IAEvB;IACAC,iBAAiB,CAACZ,cAAc,CAAC;;IAEjC;IACA,IAAI+D,YAAY,KAAK,CAAC,IAAID,YAAY,GAAG,CAAC,EAAE;MAC1CpI,KAAK,CAACyI,OAAO,CAAC,4BAA4BL,YAAY,QAAQ,CAAC;IACjE,CAAC,MAAM,IAAIA,YAAY,GAAG,CAAC,IAAIC,YAAY,GAAG,CAAC,EAAE;MAC/CrI,KAAK,CAAC0I,OAAO,CAAC,WAAWN,YAAY,WAAWC,YAAY,SAAS,CAAC;IACxE,CAAC,MAAM,IAAIA,YAAY,GAAG,CAAC,IAAID,YAAY,KAAK,CAAC,EAAE;MACjDpI,KAAK,CAAC+D,KAAK,CAAC,wBAAwBsE,YAAY,QAAQ,CAAC;IAC3D;EACF,CAAC;;EAED;EACA,MAAMb,cAAc,GAAImB,IAAI,IAAK;IAC/B,MAAMC,WAAW,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEjF,KAAK,EAAE,SAAS;MAAEE,GAAG,EAAE;IAAU,CAAC;IACzE,MAAMgF,WAAW,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAM,CAAC;IAEzE,MAAMC,aAAa,GAAGP,IAAI,CAACQ,kBAAkB,CAAC,OAAO,EAAEP,WAAW,CAAC,CAACQ,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IACvF,MAAMC,aAAa,GAAGV,IAAI,CAACW,kBAAkB,CAAC,OAAO,EAAER,WAAW,CAAC;IACnE,OAAO,GAAGI,aAAa,MAAMG,aAAa,EAAE;EAC9C,CAAC;EAED,IAAI/E,cAAc,CAACc,MAAM,KAAK,CAAC,EAAE;IAC/B,oBACElF,OAAA,CAACC,kBAAkB;MAAAoJ,QAAA,gBACjBrJ,OAAA,CAACI,eAAe;QAAAiJ,QAAA,eACdrJ,OAAA,CAACa,cAAc;UAAAwI,QAAA,EAAC;QAAS;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAClB3G,OAAA,CAACkB,YAAY;QAAAmI,QAAA,EAAC;MAAwD;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAEzB;EAEA,oBACE3G,OAAA,CAACC,kBAAkB;IAAAoJ,QAAA,gBACjBrJ,OAAA,CAACI,eAAe;MAAAiJ,QAAA,gBACdrJ,OAAA;QAAAqJ,QAAA,gBACErJ,OAAA,CAACa,cAAc;UAAAwI,QAAA,EAAC;QAAS;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC,eAC1C3G,OAAA,CAACM,QAAQ;UAACE,MAAM,EAAEkE,QAAQ,CAACE,GAAG,IAAI,CAAE;UAAAyE,QAAA,GAAC,aACxB,EAAC3G,YAAY,CAACgC,QAAQ,CAACE,GAAG,EAAE,UAAU,CAAC,EAAC,IAAE,EAAClC,YAAY,CAACgC,QAAQ,CAACG,OAAO,EAAE,SAAS,CAAC,EAAC,GAClG;QAAA;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACN3G,OAAA;QAAAqJ,QAAA,gBACErJ,OAAA,CAACU,eAAe;UACd4I,OAAO,EAAEvB,eAAgB;UACzBwB,QAAQ,EAAEzE,aAAa,IAAIV,cAAc,CAACc,MAAM,KAAK,CAAE;UAAAmE,QAAA,EAEtDvE,aAAa,GAAG,iBAAiB,GAAG;QAAY;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eAClB3G,OAAA,CAACgB,WAAW;UAACsI,OAAO,EAAEpF,gBAAiB;UAAAmF,QAAA,EAAC;QAAe;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,eAElB3G,OAAA,CAACqB,cAAc;MAAAgI,QAAA,gBACbrJ,OAAA;QAAAqJ,QAAA,eACErJ,OAAA;UAAAqJ,QAAA,gBACErJ,OAAA,CAACwB,WAAW;YAAC8H,OAAO,EAAEA,CAAA,KAAMlD,WAAW,CAAC,gBAAgB,CAAE;YAAAiD,QAAA,GAAC,WAChD,EAAChD,WAAW,CAAC,gBAAgB,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACd3G,OAAA,CAACwB,WAAW;YAAC8H,OAAO,EAAEA,CAAA,KAAMlD,WAAW,CAAC,QAAQ,CAAE;YAAAiD,QAAA,GAAC,SAC1C,EAAChD,WAAW,CAAC,QAAQ,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACd3G,OAAA,CAACwB,WAAW;YAAC8H,OAAO,EAAEA,CAAA,KAAMlD,WAAW,CAAC,eAAe,CAAE;YAAAiD,QAAA,GAAC,cAC5C,EAAChD,WAAW,CAAC,eAAe,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACd3G,OAAA,CAACwB,WAAW;YAAC8H,OAAO,EAAEA,CAAA,KAAMlD,WAAW,CAAC,cAAc,CAAE;YAAAiD,QAAA,GAAC,gBACzC,EAAChD,WAAW,CAAC,cAAc,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACd3G,OAAA,CAACwB,WAAW;YAAC8H,OAAO,EAAEA,CAAA,KAAMlD,WAAW,CAAC,SAAS,CAAE;YAAAiD,QAAA,GAAC,QAC5C,EAAChD,WAAW,CAAC,SAAS,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACd3G,OAAA,CAACwB,WAAW;YAAC8H,OAAO,EAAEA,CAAA,KAAMlD,WAAW,CAAC,SAAS,CAAE;YAAAiD,QAAA,GAAC,QAC5C,EAAChD,WAAW,CAAC,SAAS,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACd3G,OAAA,CAACwB,WAAW;YAAC8H,OAAO,EAAEA,CAAA,KAAMlD,WAAW,CAAC,YAAY,CAAE;YAAAiD,QAAA,GAAC,aAC1C,EAAChD,WAAW,CAAC,YAAY,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACd3G,OAAA,CAACwB,WAAW;YAAC8H,OAAO,EAAEA,CAAA,KAAMlD,WAAW,CAAC,aAAa,CAAE;YAAAiD,QAAA,GAAC,eACzC,EAAChD,WAAW,CAAC,aAAa,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACd3G,OAAA,CAACwB,WAAW;YAAA6H,QAAA,EAAC;UAEb;YAAA7C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR3G,OAAA;QAAAqJ,QAAA,EACG1D,eAAe,CAACsC,GAAG,CAAC,CAAC3C,IAAI,EAAE4B,KAAK,kBAC/BlH,OAAA,CAAC2B,QAAQ;UAAA0H,QAAA,gBACPrJ,OAAA,CAAC8B,SAAS;YAACE,SAAS;YAAAqH,QAAA,EAAErG,kBAAkB,CAACsC,IAAI;UAAC;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC3D3G,OAAA,CAAC8B,SAAS;YAAAuH,QAAA,EAAE3G,YAAY,CAAC4C,IAAI,CAACnC,MAAM,EAAE,OAAO;UAAC;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC3D3G,OAAA,CAAC8B,SAAS;YAAAuH,QAAA,EAAE3G,YAAY,CAAC4C,IAAI,CAACG,aAAa,EAAE,OAAO;UAAC;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAClE3G,OAAA,CAAC8B,SAAS;YAAAuH,QAAA,EAAE3G,YAAY,CAAC4C,IAAI,CAACuB,YAAY,EAAE,OAAO;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjE3G,OAAA,CAAC8B,SAAS;YACRtB,MAAM,EAAE8E,IAAI,CAACC,OAAO,GAAG,CAAE;YACzBtD,IAAI,EAAEqD,IAAI,CAACC,OAAO,GAAG,CAAE;YAAA8D,QAAA,EAEtB3G,YAAY,CAAC4C,IAAI,CAACC,OAAO,EAAE,KAAK;UAAC;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACZ3G,OAAA,CAAC8B,SAAS;YACRtB,MAAM,EAAE8E,IAAI,CAAC0B,OAAO,GAAG,CAAE;YACzB/E,IAAI,EAAEqD,IAAI,CAAC0B,OAAO,GAAG,CAAE;YAAAqC,QAAA,EAEtB3G,YAAY,CAAC4C,IAAI,CAAC0B,OAAO,EAAE,SAAS;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACZ3G,OAAA,CAAC8B,SAAS;YAAAuH,QAAA,EAAE/D,IAAI,CAACjC;UAAU;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACxC3G,OAAA,CAAC8B,SAAS;YAACI,KAAK;YAAAmH,QAAA,EAAE/D,IAAI,CAACmC,WAAW,IAAI;UAAa;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAChE3G,OAAA,CAAC8B,SAAS;YAAAuH,QAAA,eACRrJ,OAAA,CAACwC,WAAW;cAAA6G,QAAA,gBACVrJ,OAAA,CAACsC,aAAa;gBACZgH,OAAO,EAAEA,CAAA,KAAM5B,iBAAiB,CAACR,KAAK,CAAE;gBACxCqC,QAAQ,EAAEjE,IAAI,CAACkC,SAAU;gBAAA6B,QAAA,EAExB/D,IAAI,CAACkC,SAAS,GAAG,YAAY,GAAG;cAAQ;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eAChB3G,OAAA,CAACoC,YAAY;gBAACkH,OAAO,EAAEA,CAAA,KAAMrF,YAAY,CAACD,SAAS,CAACwF,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAC3B,cAAc,KAAKxC,IAAI,CAACwC,cAAc,CAAC,CAAE;gBAAAuB,QAAA,EAAC;cAE/G;gBAAA7C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA,GA/BCO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgCV,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEzB,CAAC;AAACxC,EAAA,CApVIJ,SAAS;AAAA2F,IAAA,GAAT3F,SAAS;AAsVf,eAAeA,SAAS;AAAC,IAAA5D,EAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,IAAA,EAAAM,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAiH,IAAA;AAAAC,YAAA,CAAAxJ,EAAA;AAAAwJ,YAAA,CAAAtJ,GAAA;AAAAsJ,YAAA,CAAAlJ,GAAA;AAAAkJ,YAAA,CAAA/I,GAAA;AAAA+I,YAAA,CAAA5I,GAAA;AAAA4I,YAAA,CAAA1I,GAAA;AAAA0I,YAAA,CAAAvI,GAAA;AAAAuI,YAAA,CAAApI,GAAA;AAAAoI,YAAA,CAAAjI,GAAA;AAAAiI,YAAA,CAAA9H,IAAA;AAAA8H,YAAA,CAAAxH,IAAA;AAAAwH,YAAA,CAAAtH,IAAA;AAAAsH,YAAA,CAAApH,IAAA;AAAAoH,YAAA,CAAAlH,IAAA;AAAAkH,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}