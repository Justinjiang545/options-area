{"ast":null,"code":"var _jsxFileName = \"/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/black-scholes/HeatmapDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeatmapContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  margin-top: 1.5rem;\n`;\n_c = HeatmapContainer;\nconst HeatmapTitle = styled.h2`\n  font-size: 1.25rem;\n  margin-bottom: 1rem;\n  color: #333;\n`;\n_c2 = HeatmapTitle;\nconst HeatmapsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1.5rem;\n  \n  @media (max-width: 992px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c3 = HeatmapsGrid;\nconst HeatmapWrapper = styled.div`\n  height: 400px;\n  position: relative;\n`;\n_c4 = HeatmapWrapper;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #666;\n  font-style: italic;\n`;\n_c5 = LoadingMessage;\nconst HeatmapDisplay = ({\n  heatmapData,\n  isLoading\n}) => {\n  _s();\n  const callChartRef = useRef(null);\n  const putChartRef = useRef(null);\n  const callChartInstance = useRef(null);\n  const putChartInstance = useRef(null);\n  const createHeatmap = (ctx, data, labels, title) => {\n    const chartData = {\n      labels: labels.xLabels,\n      datasets: labels.yLabels.map((yLabel, i) => ({\n        label: yLabel.toFixed(2),\n        data: data[i],\n        borderColor: 'white',\n        borderWidth: 1\n      }))\n    };\n    return new Chart(ctx, {\n      type: 'matrix',\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              title: items => {\n                const item = items[0];\n                return `Stock Price: $${labels.xLabels[item.dataIndex].toFixed(2)}`;\n              },\n              label: item => {\n                return [`Volatility: ${labels.yLabels[item.datasetIndex].toFixed(2)}`, `Price: $${item.raw.toFixed(2)}`];\n              }\n            }\n          },\n          title: {\n            display: true,\n            text: title,\n            font: {\n              size: 16,\n              weight: 'bold'\n            }\n          }\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            offset: true,\n            grid: {\n              display: false\n            },\n            title: {\n              display: true,\n              text: 'Stock Price ($)',\n              font: {\n                weight: 'bold'\n              }\n            },\n            ticks: {\n              stepSize: Math.ceil((labels.xLabels[labels.xLabels.length - 1] - labels.xLabels[0]) / 5)\n            }\n          },\n          y: {\n            type: 'linear',\n            offset: true,\n            grid: {\n              display: false\n            },\n            title: {\n              display: true,\n              text: 'Volatility',\n              font: {\n                weight: 'bold'\n              }\n            },\n            ticks: {\n              stepSize: (labels.yLabels[labels.yLabels.length - 1] - labels.yLabels[0]) / 5\n            }\n          }\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    if (!isLoading && heatmapData) {\n      // Destroy existing charts\n      if (callChartInstance.current) {\n        callChartInstance.current.destroy();\n      }\n      if (putChartInstance.current) {\n        putChartInstance.current.destroy();\n      }\n      const labels = {\n        xLabels: heatmapData.S_range,\n        yLabels: heatmapData.sigma_range\n      };\n\n      // Create new charts\n      callChartInstance.current = createHeatmap(callChartRef.current, heatmapData.call_heatmap, labels, 'Call Option Prices');\n      putChartInstance.current = createHeatmap(putChartRef.current, heatmapData.put_heatmap, labels, 'Put Option Prices');\n    }\n    return () => {\n      if (callChartInstance.current) {\n        callChartInstance.current.destroy();\n      }\n      if (putChartInstance.current) {\n        putChartInstance.current.destroy();\n      }\n    };\n  }, [heatmapData, isLoading]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(HeatmapContainer, {\n      children: [/*#__PURE__*/_jsxDEV(HeatmapTitle, {\n        children: \"Price Heatmaps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingMessage, {\n        children: \"Generating heatmaps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n  if (!heatmapData) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(HeatmapContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeatmapTitle, {\n      children: \"Price Heatmaps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeatmapsGrid, {\n      children: [/*#__PURE__*/_jsxDEV(HeatmapWrapper, {\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: callChartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeatmapWrapper, {\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: putChartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(HeatmapDisplay, \"Wt4k9s1795NMZIU515vWpJAVIsQ=\");\n_c6 = HeatmapDisplay;\nexport default HeatmapDisplay;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"HeatmapContainer\");\n$RefreshReg$(_c2, \"HeatmapTitle\");\n$RefreshReg$(_c3, \"HeatmapsGrid\");\n$RefreshReg$(_c4, \"HeatmapWrapper\");\n$RefreshReg$(_c5, \"LoadingMessage\");\n$RefreshReg$(_c6, \"HeatmapDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","styled","Chart","jsxDEV","_jsxDEV","HeatmapContainer","div","_c","HeatmapTitle","h2","_c2","HeatmapsGrid","_c3","HeatmapWrapper","_c4","LoadingMessage","_c5","HeatmapDisplay","heatmapData","isLoading","_s","callChartRef","putChartRef","callChartInstance","putChartInstance","createHeatmap","ctx","data","labels","title","chartData","xLabels","datasets","yLabels","map","yLabel","i","label","toFixed","borderColor","borderWidth","type","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","callbacks","items","item","dataIndex","datasetIndex","raw","text","font","size","weight","scales","x","offset","grid","ticks","stepSize","Math","ceil","length","y","current","destroy","S_range","sigma_range","call_heatmap","put_heatmap","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c6","$RefreshReg$"],"sources":["/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/black-scholes/HeatmapDisplay.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Chart from 'chart.js/auto';\n\nconst HeatmapContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  margin-top: 1.5rem;\n`;\n\nconst HeatmapTitle = styled.h2`\n  font-size: 1.25rem;\n  margin-bottom: 1rem;\n  color: #333;\n`;\n\nconst HeatmapsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1.5rem;\n  \n  @media (max-width: 992px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst HeatmapWrapper = styled.div`\n  height: 400px;\n  position: relative;\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #666;\n  font-style: italic;\n`;\n\nconst HeatmapDisplay = ({ heatmapData, isLoading }) => {\n  const callChartRef = useRef(null);\n  const putChartRef = useRef(null);\n  const callChartInstance = useRef(null);\n  const putChartInstance = useRef(null);\n  \n  const createHeatmap = (ctx, data, labels, title) => {\n    const chartData = {\n      labels: labels.xLabels,\n      datasets: labels.yLabels.map((yLabel, i) => ({\n        label: yLabel.toFixed(2),\n        data: data[i],\n        borderColor: 'white',\n        borderWidth: 1,\n      }))\n    };\n    \n    return new Chart(ctx, {\n      type: 'matrix',\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              title: (items) => {\n                const item = items[0];\n                return `Stock Price: $${labels.xLabels[item.dataIndex].toFixed(2)}`;\n              },\n              label: (item) => {\n                return [\n                  `Volatility: ${labels.yLabels[item.datasetIndex].toFixed(2)}`,\n                  `Price: $${item.raw.toFixed(2)}`\n                ];\n              }\n            }\n          },\n          title: {\n            display: true,\n            text: title,\n            font: {\n              size: 16,\n              weight: 'bold'\n            }\n          }\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            offset: true,\n            grid: {\n              display: false\n            },\n            title: {\n              display: true,\n              text: 'Stock Price ($)',\n              font: {\n                weight: 'bold'\n              }\n            },\n            ticks: {\n              stepSize: Math.ceil((labels.xLabels[labels.xLabels.length - 1] - labels.xLabels[0]) / 5)\n            }\n          },\n          y: {\n            type: 'linear',\n            offset: true,\n            grid: {\n              display: false\n            },\n            title: {\n              display: true,\n              text: 'Volatility',\n              font: {\n                weight: 'bold'\n              }\n            },\n            ticks: {\n              stepSize: (labels.yLabels[labels.yLabels.length - 1] - labels.yLabels[0]) / 5\n            }\n          }\n        }\n      }\n    });\n  };\n  \n  useEffect(() => {\n    if (!isLoading && heatmapData) {\n      // Destroy existing charts\n      if (callChartInstance.current) {\n        callChartInstance.current.destroy();\n      }\n      if (putChartInstance.current) {\n        putChartInstance.current.destroy();\n      }\n      \n      const labels = {\n        xLabels: heatmapData.S_range,\n        yLabels: heatmapData.sigma_range\n      };\n      \n      // Create new charts\n      callChartInstance.current = createHeatmap(\n        callChartRef.current,\n        heatmapData.call_heatmap,\n        labels,\n        'Call Option Prices'\n      );\n      \n      putChartInstance.current = createHeatmap(\n        putChartRef.current,\n        heatmapData.put_heatmap,\n        labels,\n        'Put Option Prices'\n      );\n    }\n    \n    return () => {\n      if (callChartInstance.current) {\n        callChartInstance.current.destroy();\n      }\n      if (putChartInstance.current) {\n        putChartInstance.current.destroy();\n      }\n    };\n  }, [heatmapData, isLoading]);\n  \n  if (isLoading) {\n    return (\n      <HeatmapContainer>\n        <HeatmapTitle>Price Heatmaps</HeatmapTitle>\n        <LoadingMessage>Generating heatmaps...</LoadingMessage>\n      </HeatmapContainer>\n    );\n  }\n  \n  if (!heatmapData) {\n    return null;\n  }\n  \n  return (\n    <HeatmapContainer>\n      <HeatmapTitle>Price Heatmaps</HeatmapTitle>\n      <HeatmapsGrid>\n        <HeatmapWrapper>\n          <canvas ref={callChartRef} />\n        </HeatmapWrapper>\n        <HeatmapWrapper>\n          <canvas ref={putChartRef} />\n        </HeatmapWrapper>\n      </HeatmapsGrid>\n    </HeatmapContainer>\n  );\n};\n\nexport default HeatmapDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}