{"ast":null,"code":"var _jsxFileName = \"/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/options-watchlist/Watchlist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\nimport { optionsApi } from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shimmer = keyframes`\n  0% { background-position: -1000px 0; }\n  100% { background-position: 1000px 0; }\n`;\nconst SkeletonCell = styled.div`\n  height: 24px;\n  background: linear-gradient(to right, #f6f7f8 8%, #edeef1 18%, #f6f7f8 33%);\n  background-size: 2000px 100%;\n  animation: ${shimmer} 2s infinite linear;\n  border-radius: 4px;\n  width: ${props => props.width || '100%'};\n  margin: ${props => props.margin || '0'};\n`;\n_c = SkeletonCell;\nconst WatchlistContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n`;\n_c2 = WatchlistContainer;\nconst WatchlistHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  \n  > div {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n`;\n_c3 = WatchlistHeader;\nconst TotalPnL = styled.div`\n  font-weight: bold;\n  color: ${props => props.profit ? '#0ecb81' : '#f6465d'};\n  font-size: 0.9rem;\n`;\n_c4 = TotalPnL;\nconst UpdateAllButton = styled.button`\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #357ABD;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n_c5 = UpdateAllButton;\nconst WatchlistTitle = styled.h2`\n  font-size: 1.25rem;\n  color: #333;\n  margin: 0;\n`;\n_c6 = WatchlistTitle;\nconst ClearButton = styled.button`\n  background-color: #f6465d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #e63c53;\n  }\n`;\n_c7 = ClearButton;\nconst EmptyMessage = styled.p`\n  color: #888;\n  font-style: italic;\n  text-align: center;\n  padding: 2rem 0;\n`;\n_c8 = EmptyMessage;\nconst WatchlistTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 0.9rem;\n`;\n_c9 = WatchlistTable;\nconst TableHeader = styled.th`\n  text-align: left;\n  padding: 0.75rem;\n  background-color: #f5f5f5;\n  border-bottom: 2px solid #e0e0e0;\n  position: sticky;\n  top: 0;\n  cursor: pointer;\n  user-select: none;\n  \n  &:hover {\n    background-color: #e0e0e0;\n  }\n  \n  /* Remove flex to maintain vertical column layout */\n  white-space: nowrap;\n  \n  /* For the sort icon placement */\n  position: relative;\n`;\n_c10 = TableHeader;\nconst TableRow = styled.tr`\n  &:hover {\n    background-color: #f9f9f9;\n  }\n`;\n_c11 = TableRow;\nconst TableCell = styled.td`\n  padding: 0.75rem;\n  border-bottom: 1px solid #e0e0e0;\n  ${({\n  highlight\n}) => highlight && `font-weight: bold;`}\n  ${({\n  small\n}) => small && `\n    font-size: 0.75rem;\n    color: #888;\n  `}\n\n  .profit {\n    color: #0ecb81;\n  }\n\n  .loss {\n    color: #f6465d;\n  }\n`;\n_c12 = TableCell;\nconst RemoveButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #f6465d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #e63c53;\n  }\n`;\n_c13 = RemoveButton;\nconst RefreshButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-right: 0.5rem;\n  \n  &:hover {\n    background-color: #357ABD;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n_c14 = RefreshButton;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n`;\n_c15 = ButtonGroup;\nconst formatNumber = (value, type) => {\n  if (value === null || value === undefined) return '-';\n  const formatWithColor = (text, value) => {\n    const color = value > 0 ? '#0ecb81' : value < 0 ? '#f6465d' : 'inherit';\n    return `<span style=\"color: ${color}\">${text}</span>`;\n  };\n  switch (type) {\n    case 'currency':\n    case 'pnl':\n      {\n        const formatted = value === 0 ? '$0.00' : value > 0 ? `+$${value.toFixed(2)}` : `-$${Math.abs(value).toFixed(2)}`;\n        return formatWithColor(formatted, value);\n      }\n    case 'percent':\n      {\n        const formatted = value === 0 ? '0.00%' : `${value > 0 ? '+' : ''}${(value * 100).toFixed(2)}%`;\n        return formatWithColor(formatted, value);\n      }\n    case 'price':\n      return `$${value.toFixed(2)}`;\n    default:\n      return value.toFixed(2);\n  }\n};\n\n// Format contract symbol into a more readable format: TSLA $250 Call 3/28\nconst formatContractName = contract => {\n  if (!contract) return '';\n  const {\n    ticker,\n    strike,\n    optionType,\n    expiration\n  } = contract;\n\n  // Format expiration date to MM/DD format\n  let expirationFormatted = expiration;\n  try {\n    if (expiration && expiration.includes('-')) {\n      const dateParts = expiration.split('-');\n      const month = parseInt(dateParts[1], 10);\n      const day = parseInt(dateParts[2], 10);\n      expirationFormatted = `${month}/${day}`;\n    }\n  } catch (error) {\n    console.error('Error formatting expiration date:', error);\n  }\n  return `${ticker} $${strike} ${optionType} ${expirationFormatted}`;\n};\nconst Watchlist = ({\n  watchlist,\n  onRemoveItem,\n  onClearWatchlist,\n  isLoading\n}) => {\n  _s();\n  const [localWatchlist, setLocalWatchlist] = useState(watchlist);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'neutral'\n  });\n  const [totalPnL, setTotalPnL] = useState({\n    usd: 0,\n    percent: 0\n  });\n  const [isUpdatingAll, setIsUpdatingAll] = useState(false);\n\n  // Update local watchlist when the prop changes\n  useEffect(() => {\n    if (watchlist.length > 0) {\n      // Find the midpoint contract by sorting by current price\n      const sortedByPrice = [...watchlist].sort((a, b) => a.currentPrice - b.currentPrice);\n      const midpointIndex = Math.floor(sortedByPrice.length / 2);\n      const midpointContract = sortedByPrice[midpointIndex];\n\n      // Update the watchlist with the new timestamp for the midpoint contract\n      const updatedWatchlist = watchlist.map(item => {\n        if (item.contractSymbol === midpointContract.contractSymbol) {\n          return {\n            ...item,\n            lastUpdated: formatDateTime(new Date())\n          };\n        }\n        return item;\n      });\n      setLocalWatchlist(updatedWatchlist);\n      calculateTotalPnL(updatedWatchlist);\n    } else {\n      setLocalWatchlist(watchlist);\n      calculateTotalPnL(watchlist);\n    }\n  }, [watchlist]);\n\n  // Calculate total P&L across all watchlist items\n  const calculateTotalPnL = items => {\n    if (!items || items.length === 0) {\n      setTotalPnL({\n        usd: 0,\n        percent: 0\n      });\n      return;\n    }\n\n    // Sum up all P&L values\n    const totalUsd = items.reduce((sum, item) => {\n      return sum + (item.PNL_USD || 0);\n    }, 0);\n\n    // Calculate weighted average percentage\n    const totalInvestment = items.reduce((sum, item) => {\n      return sum + (item.selectedPrice || 0) * 100;\n    }, 0);\n    const avgPercent = totalInvestment > 0 ? totalUsd / totalInvestment * 100 : 0;\n    setTotalPnL({\n      usd: totalUsd,\n      percent: avgPercent\n    });\n  };\n\n  // Sort the watchlist based on the current sort configuration\n  const sortedWatchlist = React.useMemo(() => {\n    let sortableItems = [...localWatchlist];\n    if (sortConfig.key && sortConfig.direction !== 'neutral') {\n      sortableItems.sort((a, b) => {\n        let aValue = a[sortConfig.key];\n        let bValue = b[sortConfig.key];\n\n        // Handle null/undefined values\n        if (aValue === null || aValue === undefined) return 1;\n        if (bValue === null || bValue === undefined) return -1;\n\n        // For string values, convert to lowercase for case-insensitive sorting\n        if (typeof aValue === 'string' && typeof bValue === 'string') {\n          aValue = aValue.toLowerCase();\n          bValue = bValue.toLowerCase();\n        }\n        if (aValue < bValue) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [localWatchlist, sortConfig]);\n\n  // Request a sort by column with three states: neutral -> ascending -> descending -> neutral\n  const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key) {\n      if (sortConfig.direction === 'neutral') {\n        direction = 'ascending';\n      } else if (sortConfig.direction === 'ascending') {\n        direction = 'descending';\n      } else {\n        direction = 'neutral';\n      }\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Get the sort icon for a column\n  const getSortIcon = key => {\n    if (sortConfig.key !== key || sortConfig.direction === 'neutral') {\n      return /*#__PURE__*/_jsxDEV(FaSort, {\n        style: {\n          opacity: 0.3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 14\n      }, this);\n    }\n    return sortConfig.direction === 'ascending' ? /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 66\n    }, this);\n  };\n\n  // Update prices and P&L calculations\n  const recalculatePnL = item => {\n    if (item.currentPrice && item.selectedPrice) {\n      const pnlUsd = (item.currentPrice - item.selectedPrice) * 100;\n      const pnlPct = (item.currentPrice - item.selectedPrice) / item.selectedPrice * 100;\n      return {\n        ...item,\n        PNL_USD: pnlUsd,\n        PNL_PCT: pnlPct\n      };\n    }\n    return item;\n  };\n  const updateCurrentPrice = (index, newPrice) => {\n    const updatedWatchlist = [...localWatchlist];\n    const now = new Date();\n    const formattedDateTime = now.toLocaleDateString('en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric'\n    }) + ' - ' + now.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    }).replace(' ', '');\n    updatedWatchlist[index] = {\n      ...updatedWatchlist[index],\n      currentPrice: newPrice,\n      isLoading: false,\n      lastUpdated: formattedDateTime\n    };\n    updatedWatchlist[index] = recalculatePnL(updatedWatchlist[index]);\n    setLocalWatchlist(updatedWatchlist);\n\n    // Recalculate total P&L when an item is updated\n    calculateTotalPnL(updatedWatchlist);\n  };\n\n  // Fetch the latest price from the API\n  const handlePriceUpdate = async index => {\n    try {\n      const currentItem = localWatchlist[index];\n\n      // Show loading state\n      const updatedWatchlist = [...localWatchlist];\n      updatedWatchlist[index] = {\n        ...updatedWatchlist[index],\n        isLoading: true\n      };\n      setLocalWatchlist(updatedWatchlist);\n\n      // Fetch the current price from the API\n      const response = await optionsApi.getCurrentPrice(currentItem.contractSymbol);\n      if (!response || !response.currentPrice) {\n        throw new Error('Invalid response from API');\n      }\n      const newPrice = response.currentPrice;\n      console.log(`Updated price for ${currentItem.contractSymbol}: ${newPrice}`);\n\n      // Update the price and recalculate P&L\n      updateCurrentPrice(index, newPrice);\n    } catch (error) {\n      console.error('Error updating price:', error);\n      // Remove loading state in case of error\n      const updatedWatchlist = [...localWatchlist];\n      updatedWatchlist[index] = {\n        ...updatedWatchlist[index],\n        isLoading: false\n      };\n      setLocalWatchlist(updatedWatchlist);\n\n      // Show error message to user with toast instead of alert\n      toast.error('Failed to update price. Please try again later.');\n    }\n  };\n\n  // Update all prices in the watchlist simultaneously\n  const handleUpdateAll = async () => {\n    if (localWatchlist.length === 0) {\n      toast.info('No items in watchlist to update');\n      return;\n    }\n\n    // Set updating all flag\n    setIsUpdatingAll(true);\n\n    // Set all items to loading state\n    const loadingWatchlist = localWatchlist.map(item => ({\n      ...item,\n      isLoading: true\n    }));\n    setLocalWatchlist(loadingWatchlist);\n\n    // Track success/failure counts\n    let successCount = 0;\n    let failureCount = 0;\n    try {\n      // Create a copy of the watchlist to update\n      let updatedWatchlistCopy = [...loadingWatchlist];\n\n      // Process all updates in parallel but collect results first\n      const updateResults = await Promise.all(loadingWatchlist.map(async (item, index) => {\n        try {\n          const response = await optionsApi.getCurrentPrice(item.contractSymbol);\n          if (!response || !response.currentPrice) {\n            throw new Error('Invalid response from API');\n          }\n          const newPrice = response.currentPrice;\n          console.log(`Updated price for ${item.contractSymbol}: ${newPrice}`);\n\n          // Format the date\n          const now = new Date();\n          const formattedDateTime = now.toLocaleDateString('en-US', {\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric'\n          }) + ' - ' + now.toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true\n          }).replace(' ', '');\n\n          // Return the updated item\n          const updatedItem = {\n            ...item,\n            currentPrice: newPrice,\n            isLoading: false,\n            lastUpdated: formattedDateTime\n          };\n\n          // Recalculate P&L\n          successCount++;\n          return recalculatePnL(updatedItem);\n        } catch (error) {\n          console.error(`Error updating ${item.contractSymbol}:`, error);\n          failureCount++;\n          // Return the original item but not loading\n          return {\n            ...item,\n            isLoading: false\n          };\n        }\n      }));\n\n      // Now update the state once with all the results\n      setLocalWatchlist(updateResults);\n\n      // Recalculate total P&L\n      calculateTotalPnL(updateResults);\n    } catch (error) {\n      console.error('Error in update all process:', error);\n      // Reset loading state if something went wrong\n      setLocalWatchlist(localWatchlist.map(item => ({\n        ...item,\n        isLoading: false\n      })));\n    } finally {\n      setIsUpdatingAll(false);\n\n      // Show toast with results\n      if (successCount > 0) {\n        toast.success(`Successfully updated ${successCount} item(s)`);\n      }\n      if (failureCount > 0) {\n        toast.error(`Failed to update ${failureCount} item(s)`);\n      }\n    }\n\n    // Reset updating all flag\n    setIsUpdatingAll(false);\n\n    // Recalculate total P&L\n    calculateTotalPnL(localWatchlist);\n\n    // Show summary notification\n    if (failureCount === 0 && successCount > 0) {\n      toast.success(`Successfully updated all ${successCount} items`);\n    } else if (successCount > 0 && failureCount > 0) {\n      toast.warning(`Updated ${successCount} items, ${failureCount} failed`);\n    } else if (failureCount > 0 && successCount === 0) {\n      toast.error(`Failed to update all ${failureCount} items`);\n    }\n  };\n\n  // Helper function to format datetime consistently\n  const formatDateTime = date => {\n    const dateOptions = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    };\n    const timeOptions = {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    };\n    const formattedDate = date.toLocaleDateString('en-US', dateOptions).replace(/\\//g, '-');\n    const formattedTime = date.toLocaleTimeString('en-US', timeOptions);\n    return `${formattedDate} - ${formattedTime}`;\n  };\n  if (localWatchlist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(WatchlistContainer, {\n      children: [/*#__PURE__*/_jsxDEV(WatchlistHeader, {\n        children: /*#__PURE__*/_jsxDEV(WatchlistTitle, {\n          children: \"Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmptyMessage, {\n        children: \"Your watchlist is empty. Add options to track them here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(WatchlistContainer, {\n    children: [/*#__PURE__*/_jsxDEV(WatchlistHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(WatchlistTitle, {\n          children: \"Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TotalPnL, {\n          profit: totalPnL.usd >= 0,\n          children: [\"Total P&L: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: `${formatNumber(totalPnL.usd, 'currency')} (${formatNumber(totalPnL.percent, 'percent')})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(UpdateAllButton, {\n          onClick: handleUpdateAll,\n          disabled: isUpdatingAll || localWatchlist.length === 0,\n          children: isUpdatingAll ? 'Updating All...' : 'Update All'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n          onClick: onClearWatchlist,\n          children: \"Clear Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WatchlistTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('contractSymbol'),\n            children: [\"Contract \", getSortIcon('contractSymbol')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('strike'),\n            children: [\"Strike \", getSortIcon('strike')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('selectedPrice'),\n            children: [\"Entry Price \", getSortIcon('selectedPrice')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('currentPrice'),\n            children: [\"Current Price \", getSortIcon('currentPrice')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('PNL_USD'),\n            children: [\"P&L $ \", getSortIcon('PNL_USD')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('PNL_PCT'),\n            children: [\"P&L % \", getSortIcon('PNL_PCT')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('expiration'),\n            children: [\"Expiration \", getSortIcon('expiration')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            onClick: () => requestSort('lastUpdated'),\n            children: [\"Last Updated \", getSortIcon('lastUpdated')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: isLoading ? Array.from({\n          length: 5\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(SkeletonCell, {\n              width: \"150px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(SkeletonCell, {\n              width: \"80px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(SkeletonCell, {\n              width: \"80px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(SkeletonCell, {\n              width: \"80px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(SkeletonCell, {\n              width: \"80px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(SkeletonCell, {\n              width: \"80px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(SkeletonCell, {\n              width: \"120px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 17\n          }, this)]\n        }, `skeleton-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 15\n        }, this)) : sortedWatchlist.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            highlight: true,\n            children: formatContractName(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatNumber(item.strike, 'price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatNumber(item.selectedPrice, 'price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatNumber(item.currentPrice, 'price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: formatNumber(item.PNL_USD, 'pnl')\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: formatNumber(item.PNL_PCT, 'percent')\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.expiration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            small: true,\n            children: typeof item.lastUpdated === 'string' && (item.lastUpdated.includes('T') || !item.lastUpdated.includes('-')) ? new Date(item.lastUpdated).toLocaleDateString('en-US', {\n              month: '2-digit',\n              day: '2-digit',\n              year: 'numeric'\n            }) + ' - ' + new Date(item.lastUpdated).toLocaleTimeString('en-US', {\n              hour: 'numeric',\n              minute: '2-digit',\n              hour12: true\n            }).replace(' ', '') : item.lastUpdated || 'Not updated'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(RefreshButton, {\n                onClick: () => handlePriceUpdate(index),\n                disabled: item.isLoading,\n                children: item.isLoading ? 'Loading...' : 'Update'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RemoveButton, {\n                onClick: () => onRemoveItem(watchlist.findIndex(w => w.contractSymbol === item.contractSymbol)),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 564,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"jeGf9Hri/oixm6ViknM/KcE7cwc=\");\n_c16 = Watchlist;\nexport default Watchlist;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"SkeletonCell\");\n$RefreshReg$(_c2, \"WatchlistContainer\");\n$RefreshReg$(_c3, \"WatchlistHeader\");\n$RefreshReg$(_c4, \"TotalPnL\");\n$RefreshReg$(_c5, \"UpdateAllButton\");\n$RefreshReg$(_c6, \"WatchlistTitle\");\n$RefreshReg$(_c7, \"ClearButton\");\n$RefreshReg$(_c8, \"EmptyMessage\");\n$RefreshReg$(_c9, \"WatchlistTable\");\n$RefreshReg$(_c10, \"TableHeader\");\n$RefreshReg$(_c11, \"TableRow\");\n$RefreshReg$(_c12, \"TableCell\");\n$RefreshReg$(_c13, \"RemoveButton\");\n$RefreshReg$(_c14, \"RefreshButton\");\n$RefreshReg$(_c15, \"ButtonGroup\");\n$RefreshReg$(_c16, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","FaSort","FaSortUp","FaSortDown","optionsApi","toast","jsxDEV","_jsxDEV","shimmer","SkeletonCell","div","props","width","margin","_c","WatchlistContainer","_c2","WatchlistHeader","_c3","TotalPnL","profit","_c4","UpdateAllButton","button","_c5","WatchlistTitle","h2","_c6","ClearButton","_c7","EmptyMessage","p","_c8","WatchlistTable","table","_c9","TableHeader","th","_c10","TableRow","tr","_c11","TableCell","td","highlight","small","_c12","RemoveButton","_c13","RefreshButton","_c14","ButtonGroup","_c15","formatNumber","value","type","undefined","formatWithColor","text","color","formatted","toFixed","Math","abs","formatContractName","contract","ticker","strike","optionType","expiration","expirationFormatted","includes","dateParts","split","month","parseInt","day","error","console","Watchlist","watchlist","onRemoveItem","onClearWatchlist","isLoading","_s","localWatchlist","setLocalWatchlist","sortConfig","setSortConfig","key","direction","totalPnL","setTotalPnL","usd","percent","isUpdatingAll","setIsUpdatingAll","length","sortedByPrice","sort","a","b","currentPrice","midpointIndex","floor","midpointContract","updatedWatchlist","map","item","contractSymbol","lastUpdated","formatDateTime","Date","calculateTotalPnL","items","totalUsd","reduce","sum","PNL_USD","totalInvestment","selectedPrice","avgPercent","sortedWatchlist","useMemo","sortableItems","aValue","bValue","toLowerCase","requestSort","getSortIcon","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","recalculatePnL","pnlUsd","pnlPct","PNL_PCT","updateCurrentPrice","index","newPrice","now","formattedDateTime","toLocaleDateString","year","toLocaleTimeString","hour","minute","hour12","replace","handlePriceUpdate","currentItem","response","getCurrentPrice","Error","log","handleUpdateAll","info","loadingWatchlist","successCount","failureCount","updatedWatchlistCopy","updateResults","Promise","all","updatedItem","success","warning","date","dateOptions","timeOptions","formattedDate","formattedTime","children","dangerouslySetInnerHTML","__html","onClick","disabled","Array","from","_","findIndex","w","_c16","$RefreshReg$"],"sources":["/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/options-watchlist/Watchlist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\nimport { optionsApi } from '../../services/api';\nimport { toast } from 'react-toastify';\n\nconst shimmer = keyframes`\n  0% { background-position: -1000px 0; }\n  100% { background-position: 1000px 0; }\n`;\n\nconst SkeletonCell = styled.div`\n  height: 24px;\n  background: linear-gradient(to right, #f6f7f8 8%, #edeef1 18%, #f6f7f8 33%);\n  background-size: 2000px 100%;\n  animation: ${shimmer} 2s infinite linear;\n  border-radius: 4px;\n  width: ${props => props.width || '100%'};\n  margin: ${props => props.margin || '0'};\n`;\n\nconst WatchlistContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst WatchlistHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  \n  > div {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n`;\n\nconst TotalPnL = styled.div`\n  font-weight: bold;\n  color: ${props => props.profit ? '#0ecb81' : '#f6465d'};\n  font-size: 0.9rem;\n`;\n\nconst UpdateAllButton = styled.button`\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #357ABD;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst WatchlistTitle = styled.h2`\n  font-size: 1.25rem;\n  color: #333;\n  margin: 0;\n`;\n\nconst ClearButton = styled.button`\n  background-color: #f6465d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #e63c53;\n  }\n`;\n\nconst EmptyMessage = styled.p`\n  color: #888;\n  font-style: italic;\n  text-align: center;\n  padding: 2rem 0;\n`;\n\nconst WatchlistTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 0.9rem;\n`;\n\nconst TableHeader = styled.th`\n  text-align: left;\n  padding: 0.75rem;\n  background-color: #f5f5f5;\n  border-bottom: 2px solid #e0e0e0;\n  position: sticky;\n  top: 0;\n  cursor: pointer;\n  user-select: none;\n  \n  &:hover {\n    background-color: #e0e0e0;\n  }\n  \n  /* Remove flex to maintain vertical column layout */\n  white-space: nowrap;\n  \n  /* For the sort icon placement */\n  position: relative;\n`;\n\nconst TableRow = styled.tr`\n  &:hover {\n    background-color: #f9f9f9;\n  }\n`;\n\nconst TableCell = styled.td`\n  padding: 0.75rem;\n  border-bottom: 1px solid #e0e0e0;\n  ${({ highlight }) => highlight && `font-weight: bold;`}\n  ${({ small }) => small && `\n    font-size: 0.75rem;\n    color: #888;\n  `}\n\n  .profit {\n    color: #0ecb81;\n  }\n\n  .loss {\n    color: #f6465d;\n  }\n`;\n\nconst RemoveButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #f6465d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: #e63c53;\n  }\n`;\n\nconst RefreshButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-right: 0.5rem;\n  \n  &:hover {\n    background-color: #357ABD;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n`;\n\nconst formatNumber = (value, type) => {\n  if (value === null || value === undefined) return '-';\n  \n  const formatWithColor = (text, value) => {\n    const color = value > 0 ? '#0ecb81' : value < 0 ? '#f6465d' : 'inherit';\n    return `<span style=\"color: ${color}\">${text}</span>`;\n  };\n\n  switch (type) {\n    case 'currency':\n    case 'pnl': {\n      const formatted = value === 0 ? '$0.00' : value > 0 ? `+$${value.toFixed(2)}` : `-$${Math.abs(value).toFixed(2)}`;\n      return formatWithColor(formatted, value);\n    }\n    case 'percent': {\n      const formatted = value === 0 ? '0.00%' : `${value > 0 ? '+' : ''}${(value * 100).toFixed(2)}%`;\n      return formatWithColor(formatted, value);\n    }\n    case 'price':\n      return `$${value.toFixed(2)}`;\n    default:\n      return value.toFixed(2);\n  }\n};\n\n// Format contract symbol into a more readable format: TSLA $250 Call 3/28\nconst formatContractName = (contract) => {\n  if (!contract) return '';\n  \n  const { ticker, strike, optionType, expiration } = contract;\n  \n  // Format expiration date to MM/DD format\n  let expirationFormatted = expiration;\n  try {\n    if (expiration && expiration.includes('-')) {\n      const dateParts = expiration.split('-');\n      const month = parseInt(dateParts[1], 10);\n      const day = parseInt(dateParts[2], 10);\n      expirationFormatted = `${month}/${day}`;\n    }\n  } catch (error) {\n    console.error('Error formatting expiration date:', error);\n  }\n  \n  return `${ticker} $${strike} ${optionType} ${expirationFormatted}`;\n};\n\nconst Watchlist = ({ watchlist, onRemoveItem, onClearWatchlist, isLoading }) => {\n  const [localWatchlist, setLocalWatchlist] = useState(watchlist);\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'neutral' });\n  const [totalPnL, setTotalPnL] = useState({ usd: 0, percent: 0 });\n  const [isUpdatingAll, setIsUpdatingAll] = useState(false);\n  \n  // Update local watchlist when the prop changes\n  useEffect(() => {\n    if (watchlist.length > 0) {\n      // Find the midpoint contract by sorting by current price\n      const sortedByPrice = [...watchlist].sort((a, b) => a.currentPrice - b.currentPrice);\n      const midpointIndex = Math.floor(sortedByPrice.length / 2);\n      const midpointContract = sortedByPrice[midpointIndex];\n      \n      // Update the watchlist with the new timestamp for the midpoint contract\n      const updatedWatchlist = watchlist.map(item => {\n        if (item.contractSymbol === midpointContract.contractSymbol) {\n          return {\n            ...item,\n            lastUpdated: formatDateTime(new Date())\n          };\n        }\n        return item;\n      });\n      \n      setLocalWatchlist(updatedWatchlist);\n      calculateTotalPnL(updatedWatchlist);\n    } else {\n      setLocalWatchlist(watchlist);\n      calculateTotalPnL(watchlist);\n    }\n  }, [watchlist]);\n  \n  // Calculate total P&L across all watchlist items\n  const calculateTotalPnL = (items) => {\n    if (!items || items.length === 0) {\n      setTotalPnL({ usd: 0, percent: 0 });\n      return;\n    }\n    \n    // Sum up all P&L values\n    const totalUsd = items.reduce((sum, item) => {\n      return sum + (item.PNL_USD || 0);\n    }, 0);\n    \n    // Calculate weighted average percentage\n    const totalInvestment = items.reduce((sum, item) => {\n      return sum + (item.selectedPrice || 0) * 100;\n    }, 0);\n    \n    const avgPercent = totalInvestment > 0 ? (totalUsd / totalInvestment) * 100 : 0;\n    \n    setTotalPnL({ \n      usd: totalUsd, \n      percent: avgPercent \n    });\n  };\n  \n  // Sort the watchlist based on the current sort configuration\n  const sortedWatchlist = React.useMemo(() => {\n    let sortableItems = [...localWatchlist];\n    if (sortConfig.key && sortConfig.direction !== 'neutral') {\n      sortableItems.sort((a, b) => {\n        let aValue = a[sortConfig.key];\n        let bValue = b[sortConfig.key];\n        \n        // Handle null/undefined values\n        if (aValue === null || aValue === undefined) return 1;\n        if (bValue === null || bValue === undefined) return -1;\n        \n        // For string values, convert to lowercase for case-insensitive sorting\n        if (typeof aValue === 'string' && typeof bValue === 'string') {\n          aValue = aValue.toLowerCase();\n          bValue = bValue.toLowerCase();\n        }\n        \n        if (aValue < bValue) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [localWatchlist, sortConfig]);\n  \n  // Request a sort by column with three states: neutral -> ascending -> descending -> neutral\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key) {\n      if (sortConfig.direction === 'neutral') {\n        direction = 'ascending';\n      } else if (sortConfig.direction === 'ascending') {\n        direction = 'descending';\n      } else {\n        direction = 'neutral';\n      }\n    }\n    setSortConfig({ key, direction });\n  };\n  \n  // Get the sort icon for a column\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key || sortConfig.direction === 'neutral') {\n      return <FaSort style={{ opacity: 0.3 }} />;\n    }\n    return sortConfig.direction === 'ascending' ? <FaSortUp /> : <FaSortDown />;\n  };\n  \n  // Update prices and P&L calculations\n  const recalculatePnL = (item) => {\n    if (item.currentPrice && item.selectedPrice) {\n      const pnlUsd = (item.currentPrice - item.selectedPrice) * 100;\n      const pnlPct = (item.currentPrice - item.selectedPrice) / item.selectedPrice * 100;\n      return {\n        ...item,\n        PNL_USD: pnlUsd,\n        PNL_PCT: pnlPct\n      };\n    }\n    return item;\n  };\n  \n  const updateCurrentPrice = (index, newPrice) => {\n    const updatedWatchlist = [...localWatchlist];\n    const now = new Date();\n    const formattedDateTime = now.toLocaleDateString('en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric'\n    }) + ' - ' + now.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    }).replace(' ', '');\n    \n    updatedWatchlist[index] = {\n      ...updatedWatchlist[index],\n      currentPrice: newPrice,\n      isLoading: false,\n      lastUpdated: formattedDateTime\n    };\n    updatedWatchlist[index] = recalculatePnL(updatedWatchlist[index]);\n    setLocalWatchlist(updatedWatchlist);\n    \n    // Recalculate total P&L when an item is updated\n    calculateTotalPnL(updatedWatchlist);\n  };\n  \n  // Fetch the latest price from the API\n  const handlePriceUpdate = async (index) => {\n    try {\n      const currentItem = localWatchlist[index];\n      \n      // Show loading state\n      const updatedWatchlist = [...localWatchlist];\n      updatedWatchlist[index] = {\n        ...updatedWatchlist[index],\n        isLoading: true\n      };\n      setLocalWatchlist(updatedWatchlist);\n      \n      // Fetch the current price from the API\n      const response = await optionsApi.getCurrentPrice(currentItem.contractSymbol);\n      if (!response || !response.currentPrice) {\n        throw new Error('Invalid response from API');\n      }\n      \n      const newPrice = response.currentPrice;\n      console.log(`Updated price for ${currentItem.contractSymbol}: ${newPrice}`);\n      \n      // Update the price and recalculate P&L\n      updateCurrentPrice(index, newPrice);\n    } catch (error) {\n      console.error('Error updating price:', error);\n      // Remove loading state in case of error\n      const updatedWatchlist = [...localWatchlist];\n      updatedWatchlist[index] = {\n        ...updatedWatchlist[index],\n        isLoading: false\n      };\n      setLocalWatchlist(updatedWatchlist);\n      \n      // Show error message to user with toast instead of alert\n      toast.error('Failed to update price. Please try again later.');\n    }\n  };\n  \n  // Update all prices in the watchlist simultaneously\n  const handleUpdateAll = async () => {\n    if (localWatchlist.length === 0) {\n      toast.info('No items in watchlist to update');\n      return;\n    }\n    \n    // Set updating all flag\n    setIsUpdatingAll(true);\n    \n    // Set all items to loading state\n    const loadingWatchlist = localWatchlist.map(item => ({\n      ...item,\n      isLoading: true\n    }));\n    setLocalWatchlist(loadingWatchlist);\n    \n    // Track success/failure counts\n    let successCount = 0;\n    let failureCount = 0;\n    \n    try {\n      // Create a copy of the watchlist to update\n      let updatedWatchlistCopy = [...loadingWatchlist];\n      \n      // Process all updates in parallel but collect results first\n      const updateResults = await Promise.all(\n        loadingWatchlist.map(async (item, index) => {\n          try {\n            const response = await optionsApi.getCurrentPrice(item.contractSymbol);\n            if (!response || !response.currentPrice) {\n              throw new Error('Invalid response from API');\n            }\n            \n            const newPrice = response.currentPrice;\n            console.log(`Updated price for ${item.contractSymbol}: ${newPrice}`);\n            \n            // Format the date\n            const now = new Date();\n            const formattedDateTime = now.toLocaleDateString('en-US', {\n              month: '2-digit',\n              day: '2-digit',\n              year: 'numeric'\n            }) + ' - ' + now.toLocaleTimeString('en-US', {\n              hour: 'numeric',\n              minute: '2-digit',\n              hour12: true\n            }).replace(' ', '');\n            \n            // Return the updated item\n            const updatedItem = {\n              ...item,\n              currentPrice: newPrice,\n              isLoading: false,\n              lastUpdated: formattedDateTime\n            };\n            \n            // Recalculate P&L\n            successCount++;\n            return recalculatePnL(updatedItem);\n          } catch (error) {\n            console.error(`Error updating ${item.contractSymbol}:`, error);\n            failureCount++;\n            // Return the original item but not loading\n            return {\n              ...item,\n              isLoading: false\n            };\n          }\n        })\n      );\n      \n      // Now update the state once with all the results\n      setLocalWatchlist(updateResults);\n      \n      // Recalculate total P&L\n      calculateTotalPnL(updateResults);\n    } catch (error) {\n      console.error('Error in update all process:', error);\n      // Reset loading state if something went wrong\n      setLocalWatchlist(localWatchlist.map(item => ({\n        ...item,\n        isLoading: false\n      })));\n    } finally {\n      setIsUpdatingAll(false);\n      \n      // Show toast with results\n      if (successCount > 0) {\n        toast.success(`Successfully updated ${successCount} item(s)`);\n      }\n      if (failureCount > 0) {\n        toast.error(`Failed to update ${failureCount} item(s)`);\n      }\n    }\n    \n    // Reset updating all flag\n    setIsUpdatingAll(false);\n    \n    // Recalculate total P&L\n    calculateTotalPnL(localWatchlist);\n    \n    // Show summary notification\n    if (failureCount === 0 && successCount > 0) {\n      toast.success(`Successfully updated all ${successCount} items`);\n    } else if (successCount > 0 && failureCount > 0) {\n      toast.warning(`Updated ${successCount} items, ${failureCount} failed`);\n    } else if (failureCount > 0 && successCount === 0) {\n      toast.error(`Failed to update all ${failureCount} items`);\n    }\n  };\n  \n  // Helper function to format datetime consistently\n  const formatDateTime = (date) => {\n    const dateOptions = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    const timeOptions = { \n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    };\n    \n    const formattedDate = date.toLocaleDateString('en-US', dateOptions).replace(/\\//g, '-');\n    const formattedTime = date.toLocaleTimeString('en-US', timeOptions);\n    return `${formattedDate} - ${formattedTime}`;\n  };\n  \n  if (localWatchlist.length === 0) {\n    return (\n      <WatchlistContainer>\n        <WatchlistHeader>\n          <WatchlistTitle>Watchlist</WatchlistTitle>\n        </WatchlistHeader>\n        <EmptyMessage>Your watchlist is empty. Add options to track them here.</EmptyMessage>\n      </WatchlistContainer>\n    );\n  }\n  \n  return (\n    <WatchlistContainer>\n      <WatchlistHeader>\n        <div>\n          <WatchlistTitle>Watchlist</WatchlistTitle>\n          <TotalPnL profit={totalPnL.usd >= 0}>\n            Total P&L: <span dangerouslySetInnerHTML={{ __html: `${formatNumber(totalPnL.usd, 'currency')} (${formatNumber(totalPnL.percent, 'percent')})` }} />\n          </TotalPnL>\n        </div>\n        <div>\n          <UpdateAllButton \n            onClick={handleUpdateAll} \n            disabled={isUpdatingAll || localWatchlist.length === 0}\n          >\n            {isUpdatingAll ? 'Updating All...' : 'Update All'}\n          </UpdateAllButton>\n          <ClearButton onClick={onClearWatchlist}>Clear Watchlist</ClearButton>\n        </div>\n      </WatchlistHeader>\n      \n      <WatchlistTable>\n        <thead>\n          <tr>\n            <TableHeader onClick={() => requestSort('contractSymbol')}>\n              Contract {getSortIcon('contractSymbol')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('strike')}>\n              Strike {getSortIcon('strike')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('selectedPrice')}>\n              Entry Price {getSortIcon('selectedPrice')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('currentPrice')}>\n              Current Price {getSortIcon('currentPrice')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('PNL_USD')}>\n              P&L $ {getSortIcon('PNL_USD')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('PNL_PCT')}>\n              P&L % {getSortIcon('PNL_PCT')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('expiration')}>\n              Expiration {getSortIcon('expiration')}\n            </TableHeader>\n            <TableHeader onClick={() => requestSort('lastUpdated')}>\n              Last Updated {getSortIcon('lastUpdated')}\n            </TableHeader>\n            <TableHeader>\n              Actions\n            </TableHeader>\n          </tr>\n        </thead>\n        <tbody>\n          {isLoading ? (\n            Array.from({ length: 5 }).map((_, index) => (\n              <TableRow key={`skeleton-${index}`}>\n                <TableCell><SkeletonCell width=\"150px\" /></TableCell>\n                <TableCell><SkeletonCell width=\"80px\" /></TableCell>\n                <TableCell><SkeletonCell width=\"80px\" /></TableCell>\n                <TableCell><SkeletonCell width=\"80px\" /></TableCell>\n                <TableCell><SkeletonCell width=\"80px\" /></TableCell>\n                <TableCell><SkeletonCell width=\"80px\" /></TableCell>\n                <TableCell><SkeletonCell width=\"120px\" /></TableCell>\n              </TableRow>\n            ))\n          ) : (\n            sortedWatchlist.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell highlight>{formatContractName(item)}</TableCell>\n              <TableCell>{formatNumber(item.strike, 'price')}</TableCell>\n              <TableCell>{formatNumber(item.selectedPrice, 'price')}</TableCell>\n              <TableCell>{formatNumber(item.currentPrice, 'price')}</TableCell>\n              <TableCell>\n                <span dangerouslySetInnerHTML={{ __html: formatNumber(item.PNL_USD, 'pnl') }} />\n              </TableCell>\n              <TableCell>\n                <span dangerouslySetInnerHTML={{ __html: formatNumber(item.PNL_PCT, 'percent') }} />\n              </TableCell>\n              <TableCell>{item.expiration}</TableCell>\n              <TableCell small>{typeof item.lastUpdated === 'string' && (item.lastUpdated.includes('T') || !item.lastUpdated.includes('-')) ? new Date(item.lastUpdated).toLocaleDateString('en-US', {\n                month: '2-digit',\n                day: '2-digit',\n                year: 'numeric'\n              }) + ' - ' + new Date(item.lastUpdated).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: '2-digit',\n                hour12: true\n              }).replace(' ', '') : item.lastUpdated || 'Not updated'}</TableCell>\n              <TableCell>\n                <ButtonGroup>\n                  <RefreshButton \n                    onClick={() => handlePriceUpdate(index)}\n                    disabled={item.isLoading}\n                  >\n                    {item.isLoading ? 'Loading...' : 'Update'}\n                  </RefreshButton>\n                  <RemoveButton onClick={() => onRemoveItem(watchlist.findIndex(w => w.contractSymbol === item.contractSymbol))}>\n                    Remove\n                  </RemoveButton>\n                </ButtonGroup>\n              </TableCell>\n            </TableRow>\n          )))}\n        </tbody>\n      </WatchlistTable>\n    </WatchlistContainer>\n  );\n};\n\nexport default Watchlist;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}