{"ast":null,"code":"var _jsxFileName = \"/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/black-scholes/HeatmapDisplay.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeatmapContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 0.5rem;\n  margin-top: 0.5rem;\n  width: 100%;\n  max-width: 780px;\n  margin-left: auto;\n  margin-right: auto;\n  overflow-x: hidden;\n`;\n_c = HeatmapContainer;\nconst HeatmapTitle = styled.h2`\n  font-size: 1.1rem;\n  margin-bottom: 0.75rem;\n  color: #333;\n`;\n_c2 = HeatmapTitle;\nconst HeatmapsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0.75rem;\n  width: 100%;\n  \n  @media (max-width: 750px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c3 = HeatmapsGrid;\nconst HeatmapWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.5rem;\n`;\n_c4 = HeatmapWrapper;\nconst HeatmapGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.cols}, minmax(22px, 1fr));\n  gap: 1px;\n  background-color: #ddd;\n  padding: 1px;\n  width: 100%;\n  max-width: 320px;\n  margin: 0 auto;\n`;\n_c5 = HeatmapGrid;\nconst Cell = styled.div`\n  aspect-ratio: 1;\n  background-color: ${props => props.color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.65rem;\n  color: ${props => props.textColor};\n  transition: all 0.2s;\n  cursor: pointer;\n  padding: 1px;\n  \n  &:hover {\n    transform: scale(1.1);\n    z-index: 1;\n  }\n`;\n_c6 = Cell;\nconst AxisLabel = styled.div`\n  font-size: 0.65rem;\n  color: #666;\n  margin: ${props => props.margin};\n  text-align: right;\n  min-width: 2rem;\n  line-height: 1.2rem;\n  height: 1.2rem;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n_c7 = AxisLabel;\nconst Legend = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.5rem;\n  gap: 0.25rem;\n`;\n_c8 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.15rem;\n  font-size: 0.65rem;\n`;\n_c9 = LegendItem;\nconst LegendColor = styled.div`\n  width: 20px;\n  height: 10px;\n  background-color: ${props => props.color};\n`;\n_c10 = LegendColor;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #666;\n  font-style: italic;\n`;\n_c11 = LoadingMessage;\nconst getColorForValue = (value, min, max) => {\n  const ratio = (value - min) / (max - min);\n  const hue = ((1 - ratio) * 240).toFixed(0); // 240 is blue, 0 is red\n  return `hsl(${hue}, 70%, 50%)`;\n};\nconst getTextColor = backgroundColor => {\n  const hue = parseInt(backgroundColor.match(/hsl\\((\\d+)/)[1]);\n  return hue > 120 ? '#000' : '#fff';\n};\nconst HeatmapDisplay = ({\n  heatmapData,\n  isLoading\n}) => {\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(HeatmapContainer, {\n      children: [/*#__PURE__*/_jsxDEV(HeatmapTitle, {\n        children: \"Price Heatmaps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingMessage, {\n        children: \"Generating heatmaps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n  if (!heatmapData) {\n    return null;\n  }\n  const renderHeatmap = (data, title) => {\n    const flatData = data.flat();\n    const min = Math.min(...flatData);\n    const max = Math.max(...flatData);\n    return /*#__PURE__*/_jsxDEV(HeatmapWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AxisLabel, {\n        margin: \"0 0 0.5rem 0\",\n        children: \"Volatility (\\u03C3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between'\n          },\n          children: heatmapData.sigma_range.map((sigma, i) => /*#__PURE__*/_jsxDEV(AxisLabel, {\n            margin: \"0 0.5rem\",\n            children: sigma.toFixed(2)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)).reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeatmapGrid, {\n          cols: heatmapData.S_range.length,\n          children: data.map((row, i) => row.map((value, j) => {\n            const color = getColorForValue(value, min, max);\n            const textColor = getTextColor(color);\n            return /*#__PURE__*/_jsxDEV(Cell, {\n              color: color,\n              textColor: textColor,\n              title: `Stock Price: $${heatmapData.S_range[j].toFixed(2)}\\nVolatility: ${heatmapData.sigma_range[i].toFixed(2)}\\nPrice: $${value.toFixed(2)}`,\n              children: value.toFixed(1)\n            }, `${i}-${j}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this);\n          })).reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AxisLabel, {\n        margin: \"0.5rem 0 0 0\",\n        children: \"Stock Price ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '100%',\n          maxWidth: '350px',\n          padding: '0 0.25rem'\n        },\n        children: heatmapData.S_range.map((price, i) => /*#__PURE__*/_jsxDEV(AxisLabel, {\n          children: price.toFixed(0)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        children: [/*#__PURE__*/_jsxDEV(LegendItem, {\n          children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n            color: \"hsl(240, 70%, 50%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", min.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n          children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n            color: \"hsl(120, 70%, 50%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", ((max + min) / 2).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n          children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n            color: \"hsl(0, 70%, 50%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", max.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(HeatmapContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeatmapTitle, {\n      children: \"Price Heatmaps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeatmapsGrid, {\n      children: [renderHeatmap(heatmapData.call_heatmap, 'Call Option Prices'), renderHeatmap(heatmapData.put_heatmap, 'Put Option Prices')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_c12 = HeatmapDisplay;\nexport default HeatmapDisplay;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"HeatmapContainer\");\n$RefreshReg$(_c2, \"HeatmapTitle\");\n$RefreshReg$(_c3, \"HeatmapsGrid\");\n$RefreshReg$(_c4, \"HeatmapWrapper\");\n$RefreshReg$(_c5, \"HeatmapGrid\");\n$RefreshReg$(_c6, \"Cell\");\n$RefreshReg$(_c7, \"AxisLabel\");\n$RefreshReg$(_c8, \"Legend\");\n$RefreshReg$(_c9, \"LegendItem\");\n$RefreshReg$(_c10, \"LegendColor\");\n$RefreshReg$(_c11, \"LoadingMessage\");\n$RefreshReg$(_c12, \"HeatmapDisplay\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","HeatmapContainer","div","_c","HeatmapTitle","h2","_c2","HeatmapsGrid","_c3","HeatmapWrapper","_c4","HeatmapGrid","props","cols","_c5","Cell","color","textColor","_c6","AxisLabel","margin","_c7","Legend","_c8","LegendItem","_c9","LegendColor","_c10","LoadingMessage","_c11","getColorForValue","value","min","max","ratio","hue","toFixed","getTextColor","backgroundColor","parseInt","match","HeatmapDisplay","heatmapData","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","renderHeatmap","data","title","flatData","flat","Math","style","display","alignItems","gap","flexDirection","justifyContent","sigma_range","map","sigma","i","reverse","S_range","length","row","j","width","maxWidth","padding","price","call_heatmap","put_heatmap","_c12","$RefreshReg$"],"sources":["/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/black-scholes/HeatmapDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst HeatmapContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 0.5rem;\n  margin-top: 0.5rem;\n  width: 100%;\n  max-width: 780px;\n  margin-left: auto;\n  margin-right: auto;\n  overflow-x: hidden;\n`;\n\nconst HeatmapTitle = styled.h2`\n  font-size: 1.1rem;\n  margin-bottom: 0.75rem;\n  color: #333;\n`;\n\nconst HeatmapsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0.75rem;\n  width: 100%;\n  \n  @media (max-width: 750px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst HeatmapWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.5rem;\n`;\n\nconst HeatmapGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.cols}, minmax(22px, 1fr));\n  gap: 1px;\n  background-color: #ddd;\n  padding: 1px;\n  width: 100%;\n  max-width: 320px;\n  margin: 0 auto;\n`;\n\nconst Cell = styled.div`\n  aspect-ratio: 1;\n  background-color: ${props => props.color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.65rem;\n  color: ${props => props.textColor};\n  transition: all 0.2s;\n  cursor: pointer;\n  padding: 1px;\n  \n  &:hover {\n    transform: scale(1.1);\n    z-index: 1;\n  }\n`;\n\nconst AxisLabel = styled.div`\n  font-size: 0.65rem;\n  color: #666;\n  margin: ${props => props.margin};\n  text-align: right;\n  min-width: 2rem;\n  line-height: 1.2rem;\n  height: 1.2rem;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.5rem;\n  gap: 0.25rem;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.15rem;\n  font-size: 0.65rem;\n`;\n\nconst LegendColor = styled.div`\n  width: 20px;\n  height: 10px;\n  background-color: ${props => props.color};\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #666;\n  font-style: italic;\n`;\n\nconst getColorForValue = (value, min, max) => {\n  const ratio = (value - min) / (max - min);\n  const hue = ((1 - ratio) * 240).toFixed(0); // 240 is blue, 0 is red\n  return `hsl(${hue}, 70%, 50%)`;\n};\n\nconst getTextColor = (backgroundColor) => {\n  const hue = parseInt(backgroundColor.match(/hsl\\((\\d+)/)[1]);\n  return hue > 120 ? '#000' : '#fff';\n};\n\nconst HeatmapDisplay = ({ heatmapData, isLoading }) => {\n  if (isLoading) {\n    return (\n      <HeatmapContainer>\n        <HeatmapTitle>Price Heatmaps</HeatmapTitle>\n        <LoadingMessage>Generating heatmaps...</LoadingMessage>\n      </HeatmapContainer>\n    );\n  }\n  \n  if (!heatmapData) {\n    return null;\n  }\n  \n  const renderHeatmap = (data, title) => {\n    const flatData = data.flat();\n    const min = Math.min(...flatData);\n    const max = Math.max(...flatData);\n    \n    return (\n      <HeatmapWrapper>\n        <h3>{title}</h3>\n        <AxisLabel margin=\"0 0 0.5rem 0\">\n          Volatility (σ)\n        </AxisLabel>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n          <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n            {heatmapData.sigma_range.map((sigma, i) => (\n              <AxisLabel key={i} margin=\"0 0.5rem\">\n                {sigma.toFixed(2)}\n              </AxisLabel>\n            )).reverse()}\n          </div>\n          <HeatmapGrid cols={heatmapData.S_range.length}>\n            {data.map((row, i) => \n              row.map((value, j) => {\n                const color = getColorForValue(value, min, max);\n                const textColor = getTextColor(color);\n                return (\n                  <Cell \n                    key={`${i}-${j}`} \n                    color={color}\n                    textColor={textColor}\n                    title={`Stock Price: $${heatmapData.S_range[j].toFixed(2)}\\nVolatility: ${heatmapData.sigma_range[i].toFixed(2)}\\nPrice: $${value.toFixed(2)}`}\n                  >\n                    {value.toFixed(1)}\n                  </Cell>\n                );\n              })\n            ).reverse()}\n          </HeatmapGrid>\n        </div>\n        <AxisLabel margin=\"0.5rem 0 0 0\">\n          Stock Price ($)\n        </AxisLabel>\n        <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', maxWidth: '350px', padding: '0 0.25rem' }}>\n          {heatmapData.S_range.map((price, i) => (\n            <AxisLabel key={i}>\n              {price.toFixed(0)}\n            </AxisLabel>\n          ))}\n        </div>\n        <Legend>\n          <LegendItem>\n            <LegendColor color=\"hsl(240, 70%, 50%)\" />\n            <span>${min.toFixed(2)}</span>\n          </LegendItem>\n          <LegendItem>\n            <LegendColor color=\"hsl(120, 70%, 50%)\" />\n            <span>${((max + min) / 2).toFixed(2)}</span>\n          </LegendItem>\n          <LegendItem>\n            <LegendColor color=\"hsl(0, 70%, 50%)\" />\n            <span>${max.toFixed(2)}</span>\n          </LegendItem>\n        </Legend>\n      </HeatmapWrapper>\n    );\n  };\n  \n  return (\n    <HeatmapContainer>\n      <HeatmapTitle>Price Heatmaps</HeatmapTitle>\n      <HeatmapsGrid>\n        {renderHeatmap(heatmapData.call_heatmap, 'Call Option Prices')}\n        {renderHeatmap(heatmapData.put_heatmap, 'Put Option Prices')}\n      </HeatmapsGrid>\n    </HeatmapContainer>\n  );\n};\n\nexport default HeatmapDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}