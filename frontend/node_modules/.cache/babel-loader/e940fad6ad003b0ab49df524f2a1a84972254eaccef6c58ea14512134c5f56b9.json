{"ast":null,"code":"var _jsxFileName = \"/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/options-watchlist/OptionsWatchlist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { optionsApi } from '../../services/api';\nimport TickerSearch from './TickerSearch';\nimport OptionsParameters from './OptionsParameters';\nimport OptionsChain from './OptionsChain';\nimport Watchlist from './Watchlist';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Title = styled.h1`\n  margin-bottom: 1.5rem;\n  color: #333;\n`;\n_c2 = Title;\nconst OptionsWatchlist = () => {\n  _s();\n  // State management\n  const [ticker, setTicker] = useState('');\n  const [expirations, setExpirations] = useState([]);\n  const [selectedExpiration, setSelectedExpiration] = useState('');\n  const [optionType, setOptionType] = useState('Call');\n  const [strikePrice, setStrikePrice] = useState(0);\n  const [numStrikesRange, setNumStrikesRange] = useState(3);\n  const [optionsChain, setOptionsChain] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [watchlist, setWatchlist] = useState([]);\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\n\n  // Load watchlist from localStorage on component mount\n  useEffect(() => {\n    const storedWatchlist = localStorage.getItem('optionsWatchlist');\n    if (storedWatchlist) {\n      try {\n        setWatchlist(JSON.parse(storedWatchlist));\n      } catch (error) {\n        console.error('Error parsing watchlist:', error);\n        localStorage.setItem('optionsWatchlist', '[]');\n      }\n    }\n  }, []);\n\n  // Set up periodic price updates every 30 seconds\n  useEffect(() => {\n    // Initial update\n    if (watchlist.length > 0) {\n      updateWatchlistPrices();\n    }\n\n    // Set up interval for updates\n    const intervalId = setInterval(() => {\n      if (watchlist.length > 0) {\n        updateWatchlistPrices();\n      }\n    }, 30000); // 30 seconds\n\n    // Clean up interval on unmount\n    return () => clearInterval(intervalId);\n  }, [watchlist.length]); // Only re-setup when watchlist length changes\n\n  // Fetch expirations when ticker changes\n  useEffect(() => {\n    if (ticker) {\n      fetchExpirations();\n    }\n  }, [ticker]);\n\n  // Fetch options chain when parameters change\n  useEffect(() => {\n    if (ticker && selectedExpiration && optionType) {\n      fetchOptionsChain();\n    } else {\n      setOptionsChain([]);\n    }\n  }, [ticker, selectedExpiration, optionType, strikePrice, numStrikesRange]);\n\n  // Fetch expiration dates for the selected ticker\n  const fetchExpirations = async () => {\n    if (!ticker) return;\n    try {\n      setIsLoading(true);\n      const data = await optionsApi.getExpirations(ticker);\n      if (data && data.length > 0) {\n        setExpirations(data);\n        setSelectedExpiration(data[0].value);\n      } else {\n        setExpirations([]);\n        setSelectedExpiration('');\n        setOptionsChain([]);\n      }\n    } catch (error) {\n      console.error('Error fetching expirations:', error);\n      setExpirations([]);\n      setSelectedExpiration('');\n      setOptionsChain([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch options chain data\n  const fetchOptionsChain = async () => {\n    try {\n      setIsLoading(true);\n      const data = await optionsApi.getOptionsChain(ticker, selectedExpiration, optionType, strikePrice, numStrikesRange);\n      setOptionsChain(data);\n    } catch (error) {\n      console.error('Error fetching options chain:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle ticker selection\n  const handleTickerChange = newTicker => {\n    setTicker(newTicker);\n    setOptionsChain([]);\n    setExpirations([]);\n    setSelectedExpiration('');\n  };\n\n  // Handle expiration date selection\n  const handleExpirationChange = expiration => {\n    setSelectedExpiration(expiration);\n  };\n\n  // Handle option type selection\n  const handleOptionTypeChange = type => {\n    setOptionType(type);\n  };\n\n  // Handle strike filter parameters\n  const handleStrikeFilterChange = (strike, range) => {\n    setStrikePrice(strike);\n    setNumStrikesRange(range);\n  };\n\n  // Add contract to watchlist using midpoint price\n  const addToWatchlist = contract => {\n    // Calculate the midpoint price between bid and ask\n    const midpointPrice = contract.bid && contract.ask ? (contract.bid + contract.ask) / 2 : contract.lastPrice || 0;\n\n    // Add timestamp for tracking when this was added\n    const newItem = {\n      ...contract,\n      selectedPrice: midpointPrice,\n      // Use midpoint as entry price\n      currentPrice: midpointPrice,\n      // Start with midpoint as current price\n      addedAt: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n\n    // Calculate P&L\n    if (newItem.currentPrice && newItem.selectedPrice) {\n      const pnlUsd = (newItem.currentPrice - newItem.selectedPrice) * 100;\n      const pnlPct = (newItem.currentPrice - newItem.selectedPrice) / newItem.selectedPrice * 100;\n      newItem.PNL_USD = pnlUsd;\n      newItem.PNL_PCT = pnlPct;\n    }\n    const newWatchlist = [...watchlist, newItem];\n    setWatchlist(newWatchlist);\n\n    // Save to localStorage\n    localStorage.setItem('optionsWatchlist', JSON.stringify(newWatchlist));\n  };\n\n  // Remove contract from watchlist\n  const removeFromWatchlist = index => {\n    const updatedWatchlist = [...watchlist];\n    updatedWatchlist.splice(index, 1);\n    setWatchlist(updatedWatchlist);\n\n    // Update localStorage\n    localStorage.setItem('optionsWatchlist', JSON.stringify(updatedWatchlist));\n  };\n\n  // Update watchlist prices and P&L with real data from API\n  const updateWatchlistPrices = async () => {\n    if (!watchlist.length) return;\n    const updatedWatchlist = await Promise.all(watchlist.map(async item => {\n      try {\n        // Get current price from the API\n        const response = await optionsApi.getCurrentPrice(item.contractSymbol);\n\n        // Extract price data from the response\n        const newPrice = response.currentPrice || item.currentPrice;\n        const newBid = response.bid || item.bid;\n        const newAsk = response.ask || item.ask;\n        const newChange = response.change || 0;\n        const newPercentChange = response.percentChange || 0;\n\n        // Calculate new P&L\n        const pnlUsd = (newPrice - item.selectedPrice) * 100; // 100 shares per contract\n        const pnlPct = (newPrice - item.selectedPrice) / item.selectedPrice * 100;\n        return {\n          ...item,\n          currentPrice: newPrice,\n          bid: newBid,\n          ask: newAsk,\n          change: newChange,\n          percentChange: newPercentChange,\n          PNL_USD: pnlUsd,\n          PNL_PCT: pnlPct,\n          lastUpdated: new Date().toISOString()\n        };\n      } catch (error) {\n        console.error('Error updating price for', item.contractSymbol, error);\n        return item;\n      }\n    }));\n    setWatchlist(updatedWatchlist);\n    localStorage.setItem('optionsWatchlist', JSON.stringify(updatedWatchlist));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Options Watchlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TickerSearch, {\n      onTickerChange: handleTickerChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), ticker && /*#__PURE__*/_jsxDEV(OptionsParameters, {\n      expirations: expirations,\n      selectedExpiration: selectedExpiration,\n      optionType: optionType,\n      strikePrice: strikePrice,\n      numStrikesRange: numStrikesRange,\n      onExpirationChange: handleExpirationChange,\n      onOptionTypeChange: handleOptionTypeChange,\n      onStrikeFilterChange: handleStrikeFilterChange,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), optionsChain.length > 0 && /*#__PURE__*/_jsxDEV(OptionsChain, {\n      options: optionsChain,\n      onAddToWatchlist: addToWatchlist,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Watchlist, {\n      watchlist: watchlist,\n      onRemoveItem: removeFromWatchlist,\n      onClearWatchlist: handleClearWatchlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), showClearConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '2rem',\n          borderRadius: '8px',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n          width: '400px',\n          maxWidth: '90%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            marginBottom: '1rem',\n            color: '#333'\n          },\n          children: \"Clear Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: '1.5rem',\n            color: '#555'\n          },\n          children: [\"Are you sure you want to remove all \", watchlist.length, \" contract\", watchlist.length !== 1 ? 's' : '', \" from your watchlist? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowClearConfirmation(false),\n            style: {\n              padding: '0.5rem 1rem',\n              border: '1px solid #ddd',\n              backgroundColor: 'white',\n              color: '#333',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontWeight: 500\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearWatchlist,\n            style: {\n              padding: '0.5rem 1rem',\n              border: 'none',\n              backgroundColor: '#f6465d',\n              color: 'white',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontWeight: 500\n            },\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(OptionsWatchlist, \"5WcYAJjDGNUjTNJnkPBt0ZtnTwQ=\");\n_c3 = OptionsWatchlist;\nexport default OptionsWatchlist;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"OptionsWatchlist\");","map":{"version":3,"names":["React","useState","useEffect","styled","optionsApi","TickerSearch","OptionsParameters","OptionsChain","Watchlist","toast","jsxDEV","_jsxDEV","Container","div","_c","Title","h1","_c2","OptionsWatchlist","_s","ticker","setTicker","expirations","setExpirations","selectedExpiration","setSelectedExpiration","optionType","setOptionType","strikePrice","setStrikePrice","numStrikesRange","setNumStrikesRange","optionsChain","setOptionsChain","isLoading","setIsLoading","watchlist","setWatchlist","showClearConfirmation","setShowClearConfirmation","storedWatchlist","localStorage","getItem","JSON","parse","error","console","setItem","length","updateWatchlistPrices","intervalId","setInterval","clearInterval","fetchExpirations","fetchOptionsChain","data","getExpirations","value","getOptionsChain","handleTickerChange","newTicker","handleExpirationChange","expiration","handleOptionTypeChange","type","handleStrikeFilterChange","strike","range","addToWatchlist","contract","midpointPrice","bid","ask","lastPrice","newItem","selectedPrice","currentPrice","addedAt","Date","toISOString","lastUpdated","pnlUsd","pnlPct","PNL_USD","PNL_PCT","newWatchlist","stringify","removeFromWatchlist","index","updatedWatchlist","splice","Promise","all","map","item","response","getCurrentPrice","contractSymbol","newPrice","newBid","newAsk","newChange","change","newPercentChange","percentChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onTickerChange","onExpirationChange","onOptionTypeChange","onStrikeFilterChange","options","onAddToWatchlist","onRemoveItem","onClearWatchlist","handleClearWatchlist","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","padding","borderRadius","boxShadow","maxWidth","marginTop","marginBottom","color","gap","onClick","border","cursor","fontWeight","clearWatchlist","_c3","$RefreshReg$"],"sources":["/Users/justinjiang/Documents/GitHub/stuff/frontend/src/components/options-watchlist/OptionsWatchlist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { optionsApi } from '../../services/api';\nimport TickerSearch from './TickerSearch';\nimport OptionsParameters from './OptionsParameters';\nimport OptionsChain from './OptionsChain';\nimport Watchlist from './Watchlist';\nimport { toast } from 'react-toastify';\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1.5rem;\n  color: #333;\n`;\n\nconst OptionsWatchlist = () => {\n  // State management\n  const [ticker, setTicker] = useState('');\n  const [expirations, setExpirations] = useState([]);\n  const [selectedExpiration, setSelectedExpiration] = useState('');\n  const [optionType, setOptionType] = useState('Call');\n  const [strikePrice, setStrikePrice] = useState(0);\n  const [numStrikesRange, setNumStrikesRange] = useState(3);\n  const [optionsChain, setOptionsChain] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [watchlist, setWatchlist] = useState([]);\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\n\n  // Load watchlist from localStorage on component mount\n  useEffect(() => {\n    const storedWatchlist = localStorage.getItem('optionsWatchlist');\n    if (storedWatchlist) {\n      try {\n        setWatchlist(JSON.parse(storedWatchlist));\n      } catch (error) {\n        console.error('Error parsing watchlist:', error);\n        localStorage.setItem('optionsWatchlist', '[]');\n      }\n    }\n  }, []);\n  \n  // Set up periodic price updates every 30 seconds\n  useEffect(() => {\n    // Initial update\n    if (watchlist.length > 0) {\n      updateWatchlistPrices();\n    }\n    \n    // Set up interval for updates\n    const intervalId = setInterval(() => {\n      if (watchlist.length > 0) {\n        updateWatchlistPrices();\n      }\n    }, 30000); // 30 seconds\n    \n    // Clean up interval on unmount\n    return () => clearInterval(intervalId);\n  }, [watchlist.length]); // Only re-setup when watchlist length changes\n\n  // Fetch expirations when ticker changes\n  useEffect(() => {\n    if (ticker) {\n      fetchExpirations();\n    }\n  }, [ticker]);\n\n  // Fetch options chain when parameters change\n  useEffect(() => {\n    if (ticker && selectedExpiration && optionType) {\n      fetchOptionsChain();\n    } else {\n      setOptionsChain([]);\n    }\n  }, [ticker, selectedExpiration, optionType, strikePrice, numStrikesRange]);\n\n  // Fetch expiration dates for the selected ticker\n  const fetchExpirations = async () => {\n    if (!ticker) return;\n    \n    try {\n      setIsLoading(true);\n      const data = await optionsApi.getExpirations(ticker);\n      if (data && data.length > 0) {\n        setExpirations(data);\n        setSelectedExpiration(data[0].value);\n      } else {\n        setExpirations([]);\n        setSelectedExpiration('');\n        setOptionsChain([]);\n      }\n    } catch (error) {\n      console.error('Error fetching expirations:', error);\n      setExpirations([]);\n      setSelectedExpiration('');\n      setOptionsChain([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch options chain data\n  const fetchOptionsChain = async () => {\n    try {\n      setIsLoading(true);\n      const data = await optionsApi.getOptionsChain(\n        ticker,\n        selectedExpiration,\n        optionType,\n        strikePrice,\n        numStrikesRange\n      );\n      setOptionsChain(data);\n    } catch (error) {\n      console.error('Error fetching options chain:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle ticker selection\n  const handleTickerChange = (newTicker) => {\n    setTicker(newTicker);\n    setOptionsChain([]);\n    setExpirations([]);\n    setSelectedExpiration('');\n  };\n\n  // Handle expiration date selection\n  const handleExpirationChange = (expiration) => {\n    setSelectedExpiration(expiration);\n  };\n\n  // Handle option type selection\n  const handleOptionTypeChange = (type) => {\n    setOptionType(type);\n  };\n\n  // Handle strike filter parameters\n  const handleStrikeFilterChange = (strike, range) => {\n    setStrikePrice(strike);\n    setNumStrikesRange(range);\n  };\n\n  // Add contract to watchlist using midpoint price\n  const addToWatchlist = (contract) => {\n    // Calculate the midpoint price between bid and ask\n    const midpointPrice = contract.bid && contract.ask ? \n      (contract.bid + contract.ask) / 2 : \n      (contract.lastPrice || 0);\n    \n    // Add timestamp for tracking when this was added\n    const newItem = {\n      ...contract,\n      selectedPrice: midpointPrice,  // Use midpoint as entry price\n      currentPrice: midpointPrice,   // Start with midpoint as current price\n      addedAt: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n    \n    // Calculate P&L\n    if (newItem.currentPrice && newItem.selectedPrice) {\n      const pnlUsd = (newItem.currentPrice - newItem.selectedPrice) * 100;\n      const pnlPct = (newItem.currentPrice - newItem.selectedPrice) / newItem.selectedPrice * 100;\n      newItem.PNL_USD = pnlUsd;\n      newItem.PNL_PCT = pnlPct;\n    }\n    \n    const newWatchlist = [...watchlist, newItem];\n    setWatchlist(newWatchlist);\n    \n    // Save to localStorage\n    localStorage.setItem('optionsWatchlist', JSON.stringify(newWatchlist));\n  };\n\n  // Remove contract from watchlist\n  const removeFromWatchlist = (index) => {\n    const updatedWatchlist = [...watchlist];\n    updatedWatchlist.splice(index, 1);\n    setWatchlist(updatedWatchlist);\n    \n    // Update localStorage\n    localStorage.setItem('optionsWatchlist', JSON.stringify(updatedWatchlist));\n  };\n\n\n  \n  // Update watchlist prices and P&L with real data from API\n  const updateWatchlistPrices = async () => {\n    if (!watchlist.length) return;\n    \n    const updatedWatchlist = await Promise.all(watchlist.map(async (item) => {\n      try {\n        // Get current price from the API\n        const response = await optionsApi.getCurrentPrice(item.contractSymbol);\n        \n        // Extract price data from the response\n        const newPrice = response.currentPrice || item.currentPrice;\n        const newBid = response.bid || item.bid;\n        const newAsk = response.ask || item.ask;\n        const newChange = response.change || 0;\n        const newPercentChange = response.percentChange || 0;\n        \n        // Calculate new P&L\n        const pnlUsd = (newPrice - item.selectedPrice) * 100; // 100 shares per contract\n        const pnlPct = (newPrice - item.selectedPrice) / item.selectedPrice * 100;\n        \n        return {\n          ...item,\n          currentPrice: newPrice,\n          bid: newBid,\n          ask: newAsk,\n          change: newChange,\n          percentChange: newPercentChange,\n          PNL_USD: pnlUsd,\n          PNL_PCT: pnlPct,\n          lastUpdated: new Date().toISOString()\n        };\n      } catch (error) {\n        console.error('Error updating price for', item.contractSymbol, error);\n        return item;\n      }\n    }));\n    \n    setWatchlist(updatedWatchlist);\n    localStorage.setItem('optionsWatchlist', JSON.stringify(updatedWatchlist));\n  };\n\n  return (\n    <Container>\n      <Title>Options Watchlist</Title>\n      \n      <TickerSearch onTickerChange={handleTickerChange} />\n      \n      {ticker && (\n        <OptionsParameters\n          expirations={expirations}\n          selectedExpiration={selectedExpiration}\n          optionType={optionType}\n          strikePrice={strikePrice}\n          numStrikesRange={numStrikesRange}\n          onExpirationChange={handleExpirationChange}\n          onOptionTypeChange={handleOptionTypeChange}\n          onStrikeFilterChange={handleStrikeFilterChange}\n          isLoading={isLoading}\n        />\n      )}\n      \n      {optionsChain.length > 0 && (\n        <OptionsChain\n          options={optionsChain}\n          onAddToWatchlist={addToWatchlist}\n          isLoading={isLoading}\n        />\n      )}\n      \n      <Watchlist\n        watchlist={watchlist}\n        onRemoveItem={removeFromWatchlist}\n        onClearWatchlist={handleClearWatchlist}\n      />\n      \n      {/* Confirmation Modal */}\n      {showClearConfirmation && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 1000\n        }}>\n          <div style={{\n            backgroundColor: 'white',\n            padding: '2rem',\n            borderRadius: '8px',\n            boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n            width: '400px',\n            maxWidth: '90%'\n          }}>\n            <h3 style={{ marginTop: 0, marginBottom: '1rem', color: '#333' }}>Clear Watchlist</h3>\n            <p style={{ marginBottom: '1.5rem', color: '#555' }}>\n              Are you sure you want to remove all {watchlist.length} contract{watchlist.length !== 1 ? 's' : ''} from your watchlist? This action cannot be undone.\n            </p>\n            <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '1rem' }}>\n              <button \n                onClick={() => setShowClearConfirmation(false)}\n                style={{\n                  padding: '0.5rem 1rem',\n                  border: '1px solid #ddd',\n                  backgroundColor: 'white',\n                  color: '#333',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  fontWeight: 500\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                onClick={clearWatchlist}\n                style={{\n                  padding: '0.5rem 1rem',\n                  border: 'none',\n                  backgroundColor: '#f6465d',\n                  color: 'white',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  fontWeight: 500\n                }}\n              >\n                Clear All\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default OptionsWatchlist;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG;AAC5B;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,SAAS;AAKf,MAAMG,KAAK,GAAGZ,MAAM,CAACa,EAAE;AACvB;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,KAAK;AAKX,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;;EAEzE;EACAC,SAAS,CAAC,MAAM;IACd,MAAMsC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IAChE,IAAIF,eAAe,EAAE;MACnB,IAAI;QACFH,YAAY,CAACM,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDJ,YAAY,CAACM,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC;MAChD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7C,SAAS,CAAC,MAAM;IACd;IACA,IAAIkC,SAAS,CAACY,MAAM,GAAG,CAAC,EAAE;MACxBC,qBAAqB,CAAC,CAAC;IACzB;;IAEA;IACA,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,IAAIf,SAAS,CAACY,MAAM,GAAG,CAAC,EAAE;QACxBC,qBAAqB,CAAC,CAAC;MACzB;IACF,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACd,SAAS,CAACY,MAAM,CAAC,CAAC,CAAC,CAAC;;EAExB;EACA9C,SAAS,CAAC,MAAM;IACd,IAAIkB,MAAM,EAAE;MACViC,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACjC,MAAM,CAAC,CAAC;;EAEZ;EACAlB,SAAS,CAAC,MAAM;IACd,IAAIkB,MAAM,IAAII,kBAAkB,IAAIE,UAAU,EAAE;MAC9C4B,iBAAiB,CAAC,CAAC;IACrB,CAAC,MAAM;MACLrB,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC,EAAE,CAACb,MAAM,EAAEI,kBAAkB,EAAEE,UAAU,EAAEE,WAAW,EAAEE,eAAe,CAAC,CAAC;;EAE1E;EACA,MAAMuB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACjC,MAAM,EAAE;IAEb,IAAI;MACFe,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMoB,IAAI,GAAG,MAAMnD,UAAU,CAACoD,cAAc,CAACpC,MAAM,CAAC;MACpD,IAAImC,IAAI,IAAIA,IAAI,CAACP,MAAM,GAAG,CAAC,EAAE;QAC3BzB,cAAc,CAACgC,IAAI,CAAC;QACpB9B,qBAAqB,CAAC8B,IAAI,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC;MACtC,CAAC,MAAM;QACLlC,cAAc,CAAC,EAAE,CAAC;QAClBE,qBAAqB,CAAC,EAAE,CAAC;QACzBQ,eAAe,CAAC,EAAE,CAAC;MACrB;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDtB,cAAc,CAAC,EAAE,CAAC;MAClBE,qBAAqB,CAAC,EAAE,CAAC;MACzBQ,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMmB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACFnB,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMoB,IAAI,GAAG,MAAMnD,UAAU,CAACsD,eAAe,CAC3CtC,MAAM,EACNI,kBAAkB,EAClBE,UAAU,EACVE,WAAW,EACXE,eACF,CAAC;MACDG,eAAe,CAACsB,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,SAAS;MACRV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMwB,kBAAkB,GAAIC,SAAS,IAAK;IACxCvC,SAAS,CAACuC,SAAS,CAAC;IACpB3B,eAAe,CAAC,EAAE,CAAC;IACnBV,cAAc,CAAC,EAAE,CAAC;IAClBE,qBAAqB,CAAC,EAAE,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMoC,sBAAsB,GAAIC,UAAU,IAAK;IAC7CrC,qBAAqB,CAACqC,UAAU,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAIC,IAAI,IAAK;IACvCrC,aAAa,CAACqC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMC,wBAAwB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAClDtC,cAAc,CAACqC,MAAM,CAAC;IACtBnC,kBAAkB,CAACoC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,QAAQ,IAAK;IACnC;IACA,MAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAG,IAAIF,QAAQ,CAACG,GAAG,GAChD,CAACH,QAAQ,CAACE,GAAG,GAAGF,QAAQ,CAACG,GAAG,IAAI,CAAC,GAChCH,QAAQ,CAACI,SAAS,IAAI,CAAE;;IAE3B;IACA,MAAMC,OAAO,GAAG;MACd,GAAGL,QAAQ;MACXM,aAAa,EAAEL,aAAa;MAAG;MAC/BM,YAAY,EAAEN,aAAa;MAAI;MAC/BO,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACjCC,WAAW,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACtC,CAAC;;IAED;IACA,IAAIL,OAAO,CAACE,YAAY,IAAIF,OAAO,CAACC,aAAa,EAAE;MACjD,MAAMM,MAAM,GAAG,CAACP,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACC,aAAa,IAAI,GAAG;MACnE,MAAMO,MAAM,GAAG,CAACR,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACC,aAAa,IAAID,OAAO,CAACC,aAAa,GAAG,GAAG;MAC3FD,OAAO,CAACS,OAAO,GAAGF,MAAM;MACxBP,OAAO,CAACU,OAAO,GAAGF,MAAM;IAC1B;IAEA,MAAMG,YAAY,GAAG,CAAC,GAAGjD,SAAS,EAAEsC,OAAO,CAAC;IAC5CrC,YAAY,CAACgD,YAAY,CAAC;;IAE1B;IACA5C,YAAY,CAACM,OAAO,CAAC,kBAAkB,EAAEJ,IAAI,CAAC2C,SAAS,CAACD,YAAY,CAAC,CAAC;EACxE,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,gBAAgB,GAAG,CAAC,GAAGrD,SAAS,CAAC;IACvCqD,gBAAgB,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACjCnD,YAAY,CAACoD,gBAAgB,CAAC;;IAE9B;IACAhD,YAAY,CAACM,OAAO,CAAC,kBAAkB,EAAEJ,IAAI,CAAC2C,SAAS,CAACG,gBAAgB,CAAC,CAAC;EAC5E,CAAC;;EAID;EACA,MAAMxC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI,CAACb,SAAS,CAACY,MAAM,EAAE;IAEvB,MAAMyC,gBAAgB,GAAG,MAAME,OAAO,CAACC,GAAG,CAACxD,SAAS,CAACyD,GAAG,CAAC,MAAOC,IAAI,IAAK;MACvE,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAM3F,UAAU,CAAC4F,eAAe,CAACF,IAAI,CAACG,cAAc,CAAC;;QAEtE;QACA,MAAMC,QAAQ,GAAGH,QAAQ,CAACnB,YAAY,IAAIkB,IAAI,CAAClB,YAAY;QAC3D,MAAMuB,MAAM,GAAGJ,QAAQ,CAACxB,GAAG,IAAIuB,IAAI,CAACvB,GAAG;QACvC,MAAM6B,MAAM,GAAGL,QAAQ,CAACvB,GAAG,IAAIsB,IAAI,CAACtB,GAAG;QACvC,MAAM6B,SAAS,GAAGN,QAAQ,CAACO,MAAM,IAAI,CAAC;QACtC,MAAMC,gBAAgB,GAAGR,QAAQ,CAACS,aAAa,IAAI,CAAC;;QAEpD;QACA,MAAMvB,MAAM,GAAG,CAACiB,QAAQ,GAAGJ,IAAI,CAACnB,aAAa,IAAI,GAAG,CAAC,CAAC;QACtD,MAAMO,MAAM,GAAG,CAACgB,QAAQ,GAAGJ,IAAI,CAACnB,aAAa,IAAImB,IAAI,CAACnB,aAAa,GAAG,GAAG;QAEzE,OAAO;UACL,GAAGmB,IAAI;UACPlB,YAAY,EAAEsB,QAAQ;UACtB3B,GAAG,EAAE4B,MAAM;UACX3B,GAAG,EAAE4B,MAAM;UACXE,MAAM,EAAED,SAAS;UACjBG,aAAa,EAAED,gBAAgB;UAC/BpB,OAAO,EAAEF,MAAM;UACfG,OAAO,EAAEF,MAAM;UACfF,WAAW,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACtC,CAAC;MACH,CAAC,CAAC,OAAOlC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEiD,IAAI,CAACG,cAAc,EAAEpD,KAAK,CAAC;QACrE,OAAOiD,IAAI;MACb;IACF,CAAC,CAAC,CAAC;IAEHzD,YAAY,CAACoD,gBAAgB,CAAC;IAC9BhD,YAAY,CAACM,OAAO,CAAC,kBAAkB,EAAEJ,IAAI,CAAC2C,SAAS,CAACG,gBAAgB,CAAC,CAAC;EAC5E,CAAC;EAED,oBACE9E,OAAA,CAACC,SAAS;IAAA6F,QAAA,gBACR9F,OAAA,CAACI,KAAK;MAAA0F,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAEhClG,OAAA,CAACN,YAAY;MAACyG,cAAc,EAAEnD;IAAmB;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEnDzF,MAAM,iBACLT,OAAA,CAACL,iBAAiB;MAChBgB,WAAW,EAAEA,WAAY;MACzBE,kBAAkB,EAAEA,kBAAmB;MACvCE,UAAU,EAAEA,UAAW;MACvBE,WAAW,EAAEA,WAAY;MACzBE,eAAe,EAAEA,eAAgB;MACjCiF,kBAAkB,EAAElD,sBAAuB;MAC3CmD,kBAAkB,EAAEjD,sBAAuB;MAC3CkD,oBAAoB,EAAEhD,wBAAyB;MAC/C/B,SAAS,EAAEA;IAAU;MAAAwE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACF,EAEA7E,YAAY,CAACgB,MAAM,GAAG,CAAC,iBACtBrC,OAAA,CAACJ,YAAY;MACX2G,OAAO,EAAElF,YAAa;MACtBmF,gBAAgB,EAAE/C,cAAe;MACjClC,SAAS,EAAEA;IAAU;MAAAwE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACF,eAEDlG,OAAA,CAACH,SAAS;MACR4B,SAAS,EAAEA,SAAU;MACrBgF,YAAY,EAAE7B,mBAAoB;MAClC8B,gBAAgB,EAAEC;IAAqB;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EAGDvE,qBAAqB,iBACpB3B,OAAA;MAAK4G,KAAK,EAAE;QACVC,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,oBAAoB;QACrCC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACV,CAAE;MAAAxB,QAAA,eACA9F,OAAA;QAAK4G,KAAK,EAAE;UACVM,eAAe,EAAE,OAAO;UACxBK,OAAO,EAAE,MAAM;UACfC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE,gCAAgC;UAC3CT,KAAK,EAAE,OAAO;UACdU,QAAQ,EAAE;QACZ,CAAE;QAAA5B,QAAA,gBACA9F,OAAA;UAAI4G,KAAK,EAAE;YAAEe,SAAS,EAAE,CAAC;YAAEC,YAAY,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAA/B,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtFlG,OAAA;UAAG4G,KAAK,EAAE;YAAEgB,YAAY,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAA/B,QAAA,GAAC,sCACf,EAACrE,SAAS,CAACY,MAAM,EAAC,WAAS,EAACZ,SAAS,CAACY,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,qDACpG;QAAA;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJlG,OAAA;UAAK4G,KAAK,EAAE;YAAEO,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,UAAU;YAAEU,GAAG,EAAE;UAAO,CAAE;UAAAhC,QAAA,gBACvE9F,OAAA;YACE+H,OAAO,EAAEA,CAAA,KAAMnG,wBAAwB,CAAC,KAAK,CAAE;YAC/CgF,KAAK,EAAE;cACLW,OAAO,EAAE,aAAa;cACtBS,MAAM,EAAE,gBAAgB;cACxBd,eAAe,EAAE,OAAO;cACxBW,KAAK,EAAE,MAAM;cACbL,YAAY,EAAE,KAAK;cACnBS,MAAM,EAAE,SAAS;cACjBC,UAAU,EAAE;YACd,CAAE;YAAApC,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTlG,OAAA;YACE+H,OAAO,EAAEI,cAAe;YACxBvB,KAAK,EAAE;cACLW,OAAO,EAAE,aAAa;cACtBS,MAAM,EAAE,MAAM;cACdd,eAAe,EAAE,SAAS;cAC1BW,KAAK,EAAE,OAAO;cACdL,YAAY,EAAE,KAAK;cACnBS,MAAM,EAAE,SAAS;cACjBC,UAAU,EAAE;YACd,CAAE;YAAApC,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAC1F,EAAA,CAnTID,gBAAgB;AAAA6H,GAAA,GAAhB7H,gBAAgB;AAqTtB,eAAeA,gBAAgB;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAA8H,GAAA;AAAAC,YAAA,CAAAlI,EAAA;AAAAkI,YAAA,CAAA/H,GAAA;AAAA+H,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}